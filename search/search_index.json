{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introdu\u00e7\u00e3o Ol\u00e1, me chamo Jonathan e esta \u00e9 a minha documenta\u00e7\u00e3o pessoal. GITHUB LINKEDIN TWITTER Utilize a barra de navega\u00e7\u00e3o, na parte superior da p\u00e1gina, para acessar as seguintes documenta\u00e7\u00f5es: BLAZE : Software de tomada de decis\u00f5es da FICO Analytic Consulting. DMPS : (Data Management Platform Streaming) \u00e9 uma plataforma de gest\u00e3o de dados da FICO Analytic Consulting. DATA-SCIENCE : Aqui voc\u00ea encontrar\u00e1 v\u00e1rios exemplos de c\u00f3digos em Python e modelos estat\u00edsticos. DATABASES : Em databases voc\u00ea encontrar\u00e1 tutoriais sobres v\u00e1rios tipos de banco de dados. RESUMOS : Aqui est\u00e3o tutoriais resumos de v\u00e1rias \u00e1reas de TI. (Ruby, Python, Node, Linux, etc.) Identifica\u00e7\u00e3o DADOS PESSOAIS Jonathan Cardoso Lopes Domingos Data de nascimento: 02/06/1988 Telefone: (11) 9 4924-2743 / E-mail: jonathan.geotecs@gmail.com Endere\u00e7o: Avenida Dona Blandina Ignez J\u00falio, 741, Jaguaribe, Osasco/SP 06050-120 FORMA\u00c7\u00c3O ACAD\u00caMICA 2019 Ci\u00eancia de Dados - P\u00f3s Grad (Cursando). Universidade Nove de Julho - Uninove 2019 An\u00e1lise e Desenvolvimento de Sistemas (Cursando). Centro Universit\u00e1rio Internacional \u2013 UNINTER - EAD. 2018 Gradua\u00e7\u00e3o em Matem\u00e1tica. Centro Universit\u00e1rio Internacional \u2013 UNINTER. 2015 Especializa\u00e7\u00e3o em Meio Ambiente. Universidade Federal de Lavras, UFLA, Lavras, Brasil 2011 Gradua\u00e7\u00e3o em Geografia. Faculdade de Filosofia, Ci\u00eancias e Letras de Ouro Fino, ASMEC, Brasil OBJETIVO / HABILIDADES Possui um grande interesse pela \u00e1rea de TI, em especial pelas \u00e1reas relacionadas \u00e0 modelagem e an\u00e1lise de dados. Tem um relativo dom\u00ednio de python e seus principais frameworks para an\u00e1lise de dados como pandas, numpy e matplotlib. O principal objetivo \u00e9 atuar como analista de dados (com foco em modelagem estat\u00edstica/matem\u00e1tica e gerenciamento/tratamento de bancos de dados). DOWNLOADS -- DataSet: Modelo PMML - KNN Download CSV - DataSet Iris Download CSV - DataSet Seguro","title":"Home"},{"location":"#introducao","text":"Ol\u00e1, me chamo Jonathan e esta \u00e9 a minha documenta\u00e7\u00e3o pessoal. GITHUB LINKEDIN TWITTER Utilize a barra de navega\u00e7\u00e3o, na parte superior da p\u00e1gina, para acessar as seguintes documenta\u00e7\u00f5es: BLAZE : Software de tomada de decis\u00f5es da FICO Analytic Consulting. DMPS : (Data Management Platform Streaming) \u00e9 uma plataforma de gest\u00e3o de dados da FICO Analytic Consulting. DATA-SCIENCE : Aqui voc\u00ea encontrar\u00e1 v\u00e1rios exemplos de c\u00f3digos em Python e modelos estat\u00edsticos. DATABASES : Em databases voc\u00ea encontrar\u00e1 tutoriais sobres v\u00e1rios tipos de banco de dados. RESUMOS : Aqui est\u00e3o tutoriais resumos de v\u00e1rias \u00e1reas de TI. (Ruby, Python, Node, Linux, etc.)","title":"Introdu\u00e7\u00e3o"},{"location":"#identificacao","text":"DADOS PESSOAIS Jonathan Cardoso Lopes Domingos Data de nascimento: 02/06/1988 Telefone: (11) 9 4924-2743 / E-mail: jonathan.geotecs@gmail.com Endere\u00e7o: Avenida Dona Blandina Ignez J\u00falio, 741, Jaguaribe, Osasco/SP 06050-120 FORMA\u00c7\u00c3O ACAD\u00caMICA 2019 Ci\u00eancia de Dados - P\u00f3s Grad (Cursando). Universidade Nove de Julho - Uninove 2019 An\u00e1lise e Desenvolvimento de Sistemas (Cursando). Centro Universit\u00e1rio Internacional \u2013 UNINTER - EAD. 2018 Gradua\u00e7\u00e3o em Matem\u00e1tica. Centro Universit\u00e1rio Internacional \u2013 UNINTER. 2015 Especializa\u00e7\u00e3o em Meio Ambiente. Universidade Federal de Lavras, UFLA, Lavras, Brasil 2011 Gradua\u00e7\u00e3o em Geografia. Faculdade de Filosofia, Ci\u00eancias e Letras de Ouro Fino, ASMEC, Brasil OBJETIVO / HABILIDADES Possui um grande interesse pela \u00e1rea de TI, em especial pelas \u00e1reas relacionadas \u00e0 modelagem e an\u00e1lise de dados. Tem um relativo dom\u00ednio de python e seus principais frameworks para an\u00e1lise de dados como pandas, numpy e matplotlib. O principal objetivo \u00e9 atuar como analista de dados (com foco em modelagem estat\u00edstica/matem\u00e1tica e gerenciamento/tratamento de bancos de dados).","title":"Identifica\u00e7\u00e3o"},{"location":"#downloads","text":"-- DataSet: Modelo PMML - KNN Download CSV - DataSet Iris Download CSV - DataSet Seguro","title":"DOWNLOADS"},{"location":"BLAZE/blaze01/","text":"Blaze Advisor FICO O Blaze Advisor \u00e9 um software da empresa FICO que busca tornar as tarefas de decis\u00f5es de neg\u00f3cios mais eficientes. Em sua p\u00e1gina oficial, a FICO caracteriza o Blaze como: \"[...] uma solu\u00e7\u00e3o escal\u00e1vel que proporciona agilidade e capacidade de a\u00e7\u00e3o sem precedentes a empresas de v\u00e1rios setores para tomadas de decis\u00e3o mais inteligentes, transparentes e justific\u00e1veis\". Ainda em sua caracteriza\u00e7\u00e3o: \"[...] com diversos m\u00e9todos para o desenvolvimento, cria\u00e7\u00e3o e teste de regras, incluindo \u00e1rvores de decis\u00f5es, scorecards, tabelas de decis\u00f5es, fluxos gr\u00e1ficos de decis\u00f5es e templates personalizados\". Instala\u00e7\u00f5es Os arquivos para instala\u00e7\u00e3o se encontram no seguinte reposit\u00f3rio: REPOSIT\u00d3RIO Instale o arquivo: jdk-8u221-windows-x64 (JAVA) Obs: fique atento ao local em que o programa est\u00e1 sendo instalado. No meu caso, ele est\u00e1 na seguinte pasta: C:\\Program Files\\Java Instale o arquivo: BLAZE PARA DOWNLOAD REPOSIT\u00d3RIO NO GDRIVE blaze-advisor_7.5.7500.v11760_Windows (Blaze) Obs: novamente fique atento ao local onde o programa est\u00e1 sendo instalado. No meu caso, ele est\u00e1 na seguinte pasta: C:\\Blaze. Criar uma pasta projetos em C:\\Blaze e copiar(Desempacotar) o arquivo eclipse-jee-oxygen-3a-win32-x86_64.zip para dentro desta pasta. Renomear a pasta eclipse-jee-oxygen-3a-win32-x86_64 para eclipse01 para facilitar a localiza\u00e7\u00e3o. Executar, com um duplo clique, o arquivo eclipse.exe que est\u00e1 dentro da pasta eclipse01 (pasta renomeada). IMPORTANTE: escolher o workspace do eclipse. Voc\u00ea dever\u00e1 escolher um workspace f\u00e1cil de lembrar. No meu caso, escolhi a pr\u00f3pria pasta do eclipse. C:\\Blaze\\projetos\\eclipse01\\eclipse-workspace Instalar o plug-in do Blaze: ap\u00f3s abrir o eclipse e escolher o workspace, devemos preparar o eclipse para suportar o Blaze. No eclipse, ir em: Help - Install new software. Add - local. Ir na pasta C:\\Blaze\\Advisor75\\EclipsePluginUpdateSite Depois de selecionar a pasta, digitar Blaze Advisor e clicar em ok. Selecionar Blaze Adivisor e Blaze Advisor Optional . Ir clicando em next at\u00e9 terminar a instala\u00e7\u00e3o e reiniciar o eclipse. Para utilizar o plug-in do Blaze: Ao reiniciar, o blaze ir\u00e1 pedir uma licen\u00e7a que pode ser adquirida com a FICO. FICO Ap\u00f3s colocar a licen\u00e7a, basta ir em: Window - Perspective - Open Perspective - Other. Blaze Advisor - Open. Criando Reposit\u00f3rio Todo nosso ambiente ser\u00e1 preparado na pasta C:\\Blaze\\projetos Crie uma pasta com o nome repositorio01 em C:\\Blaze\\projetos O reposit\u00f3rio no Blaze pode ser versionado ou n\u00e3o versionado. Neste tutorial, iremos utilizar o sistema de versionamento do Blaze (bvs). Este sistema de versionamento funciona com base em duas partes, uma denominada Central e outra Admin. A parte central mant\u00e9m um hist\u00f3rico de tudo que for feito no Blaze e a parte Admin \u00e9 o usu\u00e1rio criado para gerenciar o reposit\u00f3rio/projeto. Crie, dentro da pasta reposit\u00f3rio, as seguintes pastas: bvs-central bvs-admin workspaces Iniciando o reposit\u00f3rio no eclipse: Ap\u00f3s criar as pastas necess\u00e1rias para o in\u00edcio do nosso projeto, iremos voltar ao eclipse e fazer o seguinte: Ir na aba Repository - New Repository [Novo Reposit\u00f3rio] Escolher um nick name [Apelido] para o reposit\u00f3rio. No meu caso escolhi: RepositorioCarro Escolher um Repository Type [Tipo de Reposit\u00f3rio]: reposit\u00f3rio de Arquivos (Controle de Vers\u00e3o de BVS - Privado) . Ainda nesta janela, voc\u00ea dever\u00e1 referenciar as pastas bvs-admin e bvs-central que voc\u00ea criou. Como nas imagens abaixo, voc\u00ea dever\u00e1 referenciar a pasta bvs-central primeiro e logo abaixo referenciar a pasta bvs-admin. Colocar admin como usu\u00e1rio nas duas op\u00e7\u00f5es. Para este tutorial n\u00e3o ser\u00e1 necess\u00e1rio utilizar senha. Criando um projeto Iremos trabalhar com um projeto dividido de acordo com a seguinte estrutura: > Technical - Business - Testing - Decision Services Cada parte ser\u00e1 um subprojeto e ter\u00e1 fun\u00e7\u00f5es espec\u00edficas que ser\u00e3o discutidas mais a frente. Para iniciar, iremos criar a parte Technical do projeto: Ir na aba File - New - Project Blaze Advisor - Rule Project - Next Escolher o reposit\u00f3rio que criamos - next Selecionar o reposit\u00f3rio e colocar o nome do projeto: Technical Library Finish. Business Object Model (BOM) Neste tutorial iremos utilizar um arquivo.jar para importar as classes e as vari\u00e1veis que iremos utilizar. Em um projeto Blaze voc\u00ea deve preparar com anteced\u00eancia um rol de vari\u00e1veis que ir\u00e1 trabalhar. Neste projeto iremos trabalhar com as seguintes vari\u00e1veis: Vari\u00e1veis de Entrada: RENDA SEXO IDADE ESTADO_CIVIL NUMERO_CONDUTORES Vari\u00e1veis de Sa\u00edda: DIARIA VALOR_AUTOMOVEL VALOR_CAUCAO CLIENT_TYPE DECISION Em um turorial \u00e0 parte, ensino a criar um arquivo.jar e a modificar este arquivo para o seu projeto, conforme suas necessidades. Por\u00e9m, para este tutorial, iremos utilizar um arquivo.jar pronto. Favor baixar o arquivo bom-Carro3.jar no drive: Baixar o arquivo e colocar na pasta C:\\Blaze\\projetos. Importando o BOM.jar no projeto (eclipse): Ir na aba Window - Preferences Clicar em Blaze Advisor e ir em add library [Adicionar Biblioteca]. Procurar pelo arquivo que salvamos na pasta projetos bom-Carro3.jar Ap\u00f3s selecioado, o arquivo aparecer\u00e1 na caixa de texto localizada no canto inferior esquerdo da tela. Apply and Close. Usando o bom-Carro3.jar Clicar com o bot\u00e3o direito do mouse sobre a pasta Technical Library. New - Folder [Pasta]. Dar o nome de BOM. Clicar com o bot\u00e3o direito do mouse sobre a pasta BOM. New - Business Object Model - Modelo Java Selecionar a classe input e adicionar [Add]. Selecionar a classe output e adicionar [Add]. next - Finish[Concluir]. Nota-se que dentro da pasta BOM, no editor eclipse, foi criado um arquivo [Java]. Podemos renome\u00e1-lo para JavaBOM para facilitar nossa compreens\u00e3o. Clicar com o bot\u00e3o direito do mouse sobre a pasta BOM. Team - Check-in. Adicionar um coment\u00e1rio e fazer o Check-in. Obs: o tempo todo iremos utilizar as fun\u00e7\u00f5es Check-in e Check-out. Check-in: pode ser entendido como [SALVAR] Check-out: pode ser entendido como [EDITAR] Criando Projetos [Partes] Business Library File - New - Project - Blaze Advisor - Rule Project - Next - RepositorioCarro - Next - RepositorioCarro - name: Business Library - Finish. Testing File - New - Project - Blaze Advisor - Rule Project - Next - RepositorioCarro - Next - RepositorioCarro - name: Testing - Finish. Decision Services Obs: a pasta Decision Services ir\u00e1 ganhar o nome [RegrasAluguelCarros] para tornar o projeto mais intuitivo e facilitar a identifica\u00e7\u00e3o. File - New - Project - Blaze Advisor - Rule Project - Next - RepositorioCarro - Next - RepositorioCarro - name: RegrasAluguelCarros - Finish. Ap\u00f3s criar os projetos nosso eclipse ficar\u00e1 assim: Conectando os Projetos Para conectar todos os projetos em apenas um, basta fazer o seguinte: Clicar com o bot\u00e3o direito do mouse sobre o projeto RegrasAluguelCarros - open project editor [Abrir Editor de Projetos] Na \u00e1rea de edi\u00e7\u00e3o do projeto, clicar no \u00edcone, como mostrado na imagem a seguir: Incluir os projetos Business Library e Technical Clicar no \u00edcone Salvar, na barra superior e fazer o Check-in clicando com o bot\u00e3o direito sobre o projeto RegrasAluguelCarros e indo na op\u00e7\u00e3o team. Nota-se que agora os projetos est\u00e3o conectados com o projeto RegrasAluguelCarros. Agora podemos fechar os projetos que est\u00e3o conectados ao projeto principal, pois qualquer altera\u00e7\u00e3o feita no projeto principal ser\u00e1 recursiva nos projetos que estar\u00e3o fechados. Para fechar os projetos conectados ao principal basta clicar com o bot\u00e3o direito do mouse sobre o projeto que deseja fechar e ir na op\u00e7\u00e3o Close Project. Obs: fechar todos os projetos, deixar somente o RegrasAluguelCarros aberto. Ap\u00f3s fechar os projetos, clicar com o bot\u00e3o direito sobre o projeto RegrasAluguelCarros e fazer o check-in. RMA [Rule Maintenance Application] Antes de iniciar as configura\u00e7\u00f5es, v\u00e1 em: C:\\Blaze\\projetos e crie um pasta chamada adb. Configura\u00e7\u00f5es de Deploy Inicial Criar uma pasta com o nome de Deploy dentro do projeto Technical. Clicar com o bot\u00e3o direito sobre a pasta Technical dentro do projeto principal [RegrasAluguelCarros]. New - Folder - Name: Deploy. Clicar com o bot\u00e3o direito do mouse sobre a pasta criada [Deploy]. New - Deployment Entities - Rule Maintenance Application Definition - Entity Name: RMADefinition - Finish. Na aba RMADefinition: Application Title [T\u00edtulo do Aplicativo]: Regras de Aluguel de Carros Habilitar as seguintes op\u00e7\u00f5es: Download Rules Command Ir na aba navigate [Navega\u00e7\u00e3o], escolher as pastas que ir\u00e3o aparecer no RMA. As pastas que n\u00e3o v\u00e3o aparecer devem ficar do lado direito. Ir na aba applets e marcar as op\u00e7\u00f5es: Allow Editing of Table Name. Display Branch Condition. Ir na aba Life Cycle Management, marcar todas as op\u00e7\u00f5es e referenciar a pasta adb criada no in\u00edcio deste t\u00f3pico, como mostra a imagem a seguir. Ir no \u00edcone SALVAR ALL na barra superior do eclipse e fazer o check-in clicando com o bot\u00e3o direito sobre o arquivo RMADefinition que est\u00e1 dentro da pasta Deploy. Fun\u00e7\u00e3o EntryPoint Criando uma fun\u00e7\u00e3o que ir\u00e1 \"startar\" o uso do fluxo de decis\u00e3o no nosso RMA. No eclipse, clicar com o bot\u00e3o direito do mouse sobre a pasta Technical Library - New - Folder - Name: Entrypoint. Clicar com o bot\u00e3o direito do mouse sobre a pasta Entrypoint - New - SRL Decision Entities - Function - Name: entrypoint - Finish. Name: entrypoint Type: Decisioninput Criar um par\u00e2metro e o corpo de uma fun\u00e7\u00e3o. Obs: fa\u00e7a como na imagem a seguir: Ir no \u00edcone SALVAR e fazer o check-in neste arquivo. Variavel Global Input Criando uma vari\u00e1vel global input. No eclipse, clicar com o bot\u00e3o direito sobre a pasta Technical [Lembrando que esta pasta est\u00e1 dentro de RegrasAluguelCarros]. New - Object Model Entities - Variable Nome: input Na tela de edi\u00e7\u00e3o da vari\u00e1vel: Type: DecisionInput Fazer check-in. Gerar RMA [Embarcado] Clicar no projeto principal [RegrasAluguelCarros] e ir em: Project - Rule Maintenance Application - Generate Rule Maintenance Application. Este comando ir\u00e1 abrir uma janela pop-up chamada Gerador de Aplicativo. Nota-se que o Blaze (eclipse) j\u00e1 reconhece o arquivo de configura\u00e7\u00f5es que criamos, o RMADefinition. Este arquivo configura o deploy do projeto para o RMA WEB. Podemos observar tamb\u00e9m que o Blaze j\u00e1 reconheceu a pasta workspaces que criamos no in\u00edcio deste tutorial, no t\u00f3pico [Criando Reposit\u00f3rio]. Deixar a op\u00e7\u00e3o de Deploy como: Web Application. Ao clicar em next, devemos selecionar o arquivo bom-Carro3.jar que criamos e anexamos ao nosso projeto e, por fim, clicar em concluir. O RMA ir\u00e1 abrir automaticamente no navegador Internet Explorer e ir\u00e1 utilizar o local host [http://127.0.0.1:8080] para gerar a interface. A sugest\u00e3o \u00e9 que voc\u00ea copie o link e cole em um navegador mais moderno e atualizado. Se voc\u00ea seguiu todos os passos at\u00e9 aqui, basta digitar admin e admin na senha para que voc\u00ea acesse a interface do RMA. Clicando sobre o projeto, voc\u00ea estar\u00e1 na interface do RMA. Mais utoriais - Blaze 2 Utilizando o RMA - Blaze - Utiliza\u00e7\u00e3o 3 Deploy no Tomcat - Blaze - Deploy 4 T\u00f3picos Avan\u00e7ados - Em constru\u00e7\u00e3o Elaborado por: Jonathan Cardoso Lopes Domingos 21/10/2019","title":"Blaze - Instala\u00e7\u00f5es"},{"location":"BLAZE/blaze01/#blaze-advisor-fico","text":"O Blaze Advisor \u00e9 um software da empresa FICO que busca tornar as tarefas de decis\u00f5es de neg\u00f3cios mais eficientes. Em sua p\u00e1gina oficial, a FICO caracteriza o Blaze como: \"[...] uma solu\u00e7\u00e3o escal\u00e1vel que proporciona agilidade e capacidade de a\u00e7\u00e3o sem precedentes a empresas de v\u00e1rios setores para tomadas de decis\u00e3o mais inteligentes, transparentes e justific\u00e1veis\". Ainda em sua caracteriza\u00e7\u00e3o: \"[...] com diversos m\u00e9todos para o desenvolvimento, cria\u00e7\u00e3o e teste de regras, incluindo \u00e1rvores de decis\u00f5es, scorecards, tabelas de decis\u00f5es, fluxos gr\u00e1ficos de decis\u00f5es e templates personalizados\".","title":"Blaze Advisor FICO"},{"location":"BLAZE/blaze01/#instalacoes","text":"Os arquivos para instala\u00e7\u00e3o se encontram no seguinte reposit\u00f3rio: REPOSIT\u00d3RIO Instale o arquivo: jdk-8u221-windows-x64 (JAVA) Obs: fique atento ao local em que o programa est\u00e1 sendo instalado. No meu caso, ele est\u00e1 na seguinte pasta: C:\\Program Files\\Java Instale o arquivo: BLAZE PARA DOWNLOAD REPOSIT\u00d3RIO NO GDRIVE blaze-advisor_7.5.7500.v11760_Windows (Blaze) Obs: novamente fique atento ao local onde o programa est\u00e1 sendo instalado. No meu caso, ele est\u00e1 na seguinte pasta: C:\\Blaze. Criar uma pasta projetos em C:\\Blaze e copiar(Desempacotar) o arquivo eclipse-jee-oxygen-3a-win32-x86_64.zip para dentro desta pasta. Renomear a pasta eclipse-jee-oxygen-3a-win32-x86_64 para eclipse01 para facilitar a localiza\u00e7\u00e3o. Executar, com um duplo clique, o arquivo eclipse.exe que est\u00e1 dentro da pasta eclipse01 (pasta renomeada). IMPORTANTE: escolher o workspace do eclipse. Voc\u00ea dever\u00e1 escolher um workspace f\u00e1cil de lembrar. No meu caso, escolhi a pr\u00f3pria pasta do eclipse. C:\\Blaze\\projetos\\eclipse01\\eclipse-workspace Instalar o plug-in do Blaze: ap\u00f3s abrir o eclipse e escolher o workspace, devemos preparar o eclipse para suportar o Blaze. No eclipse, ir em: Help - Install new software. Add - local. Ir na pasta C:\\Blaze\\Advisor75\\EclipsePluginUpdateSite Depois de selecionar a pasta, digitar Blaze Advisor e clicar em ok. Selecionar Blaze Adivisor e Blaze Advisor Optional . Ir clicando em next at\u00e9 terminar a instala\u00e7\u00e3o e reiniciar o eclipse. Para utilizar o plug-in do Blaze: Ao reiniciar, o blaze ir\u00e1 pedir uma licen\u00e7a que pode ser adquirida com a FICO. FICO Ap\u00f3s colocar a licen\u00e7a, basta ir em: Window - Perspective - Open Perspective - Other. Blaze Advisor - Open.","title":"Instala\u00e7\u00f5es"},{"location":"BLAZE/blaze01/#criando-repositorio","text":"Todo nosso ambiente ser\u00e1 preparado na pasta C:\\Blaze\\projetos Crie uma pasta com o nome repositorio01 em C:\\Blaze\\projetos O reposit\u00f3rio no Blaze pode ser versionado ou n\u00e3o versionado. Neste tutorial, iremos utilizar o sistema de versionamento do Blaze (bvs). Este sistema de versionamento funciona com base em duas partes, uma denominada Central e outra Admin. A parte central mant\u00e9m um hist\u00f3rico de tudo que for feito no Blaze e a parte Admin \u00e9 o usu\u00e1rio criado para gerenciar o reposit\u00f3rio/projeto. Crie, dentro da pasta reposit\u00f3rio, as seguintes pastas: bvs-central bvs-admin workspaces Iniciando o reposit\u00f3rio no eclipse: Ap\u00f3s criar as pastas necess\u00e1rias para o in\u00edcio do nosso projeto, iremos voltar ao eclipse e fazer o seguinte: Ir na aba Repository - New Repository [Novo Reposit\u00f3rio] Escolher um nick name [Apelido] para o reposit\u00f3rio. No meu caso escolhi: RepositorioCarro Escolher um Repository Type [Tipo de Reposit\u00f3rio]: reposit\u00f3rio de Arquivos (Controle de Vers\u00e3o de BVS - Privado) . Ainda nesta janela, voc\u00ea dever\u00e1 referenciar as pastas bvs-admin e bvs-central que voc\u00ea criou. Como nas imagens abaixo, voc\u00ea dever\u00e1 referenciar a pasta bvs-central primeiro e logo abaixo referenciar a pasta bvs-admin. Colocar admin como usu\u00e1rio nas duas op\u00e7\u00f5es. Para este tutorial n\u00e3o ser\u00e1 necess\u00e1rio utilizar senha.","title":"Criando Reposit\u00f3rio"},{"location":"BLAZE/blaze01/#criando-um-projeto","text":"Iremos trabalhar com um projeto dividido de acordo com a seguinte estrutura: > Technical - Business - Testing - Decision Services Cada parte ser\u00e1 um subprojeto e ter\u00e1 fun\u00e7\u00f5es espec\u00edficas que ser\u00e3o discutidas mais a frente. Para iniciar, iremos criar a parte Technical do projeto: Ir na aba File - New - Project Blaze Advisor - Rule Project - Next Escolher o reposit\u00f3rio que criamos - next Selecionar o reposit\u00f3rio e colocar o nome do projeto: Technical Library Finish.","title":"Criando um projeto"},{"location":"BLAZE/blaze01/#business-object-model-bom","text":"Neste tutorial iremos utilizar um arquivo.jar para importar as classes e as vari\u00e1veis que iremos utilizar. Em um projeto Blaze voc\u00ea deve preparar com anteced\u00eancia um rol de vari\u00e1veis que ir\u00e1 trabalhar. Neste projeto iremos trabalhar com as seguintes vari\u00e1veis: Vari\u00e1veis de Entrada: RENDA SEXO IDADE ESTADO_CIVIL NUMERO_CONDUTORES Vari\u00e1veis de Sa\u00edda: DIARIA VALOR_AUTOMOVEL VALOR_CAUCAO CLIENT_TYPE DECISION Em um turorial \u00e0 parte, ensino a criar um arquivo.jar e a modificar este arquivo para o seu projeto, conforme suas necessidades. Por\u00e9m, para este tutorial, iremos utilizar um arquivo.jar pronto. Favor baixar o arquivo bom-Carro3.jar no drive: Baixar o arquivo e colocar na pasta C:\\Blaze\\projetos. Importando o BOM.jar no projeto (eclipse): Ir na aba Window - Preferences Clicar em Blaze Advisor e ir em add library [Adicionar Biblioteca]. Procurar pelo arquivo que salvamos na pasta projetos bom-Carro3.jar Ap\u00f3s selecioado, o arquivo aparecer\u00e1 na caixa de texto localizada no canto inferior esquerdo da tela. Apply and Close.","title":"Business Object Model (BOM)"},{"location":"BLAZE/blaze01/#usando-o-bom-carro3jar","text":"Clicar com o bot\u00e3o direito do mouse sobre a pasta Technical Library. New - Folder [Pasta]. Dar o nome de BOM. Clicar com o bot\u00e3o direito do mouse sobre a pasta BOM. New - Business Object Model - Modelo Java Selecionar a classe input e adicionar [Add]. Selecionar a classe output e adicionar [Add]. next - Finish[Concluir]. Nota-se que dentro da pasta BOM, no editor eclipse, foi criado um arquivo [Java]. Podemos renome\u00e1-lo para JavaBOM para facilitar nossa compreens\u00e3o. Clicar com o bot\u00e3o direito do mouse sobre a pasta BOM. Team - Check-in. Adicionar um coment\u00e1rio e fazer o Check-in. Obs: o tempo todo iremos utilizar as fun\u00e7\u00f5es Check-in e Check-out. Check-in: pode ser entendido como [SALVAR] Check-out: pode ser entendido como [EDITAR]","title":"Usando o bom-Carro3.jar"},{"location":"BLAZE/blaze01/#criando-projetos-partes","text":"Business Library File - New - Project - Blaze Advisor - Rule Project - Next - RepositorioCarro - Next - RepositorioCarro - name: Business Library - Finish. Testing File - New - Project - Blaze Advisor - Rule Project - Next - RepositorioCarro - Next - RepositorioCarro - name: Testing - Finish. Decision Services Obs: a pasta Decision Services ir\u00e1 ganhar o nome [RegrasAluguelCarros] para tornar o projeto mais intuitivo e facilitar a identifica\u00e7\u00e3o. File - New - Project - Blaze Advisor - Rule Project - Next - RepositorioCarro - Next - RepositorioCarro - name: RegrasAluguelCarros - Finish. Ap\u00f3s criar os projetos nosso eclipse ficar\u00e1 assim:","title":"Criando Projetos [Partes]"},{"location":"BLAZE/blaze01/#conectando-os-projetos","text":"Para conectar todos os projetos em apenas um, basta fazer o seguinte: Clicar com o bot\u00e3o direito do mouse sobre o projeto RegrasAluguelCarros - open project editor [Abrir Editor de Projetos] Na \u00e1rea de edi\u00e7\u00e3o do projeto, clicar no \u00edcone, como mostrado na imagem a seguir: Incluir os projetos Business Library e Technical Clicar no \u00edcone Salvar, na barra superior e fazer o Check-in clicando com o bot\u00e3o direito sobre o projeto RegrasAluguelCarros e indo na op\u00e7\u00e3o team. Nota-se que agora os projetos est\u00e3o conectados com o projeto RegrasAluguelCarros. Agora podemos fechar os projetos que est\u00e3o conectados ao projeto principal, pois qualquer altera\u00e7\u00e3o feita no projeto principal ser\u00e1 recursiva nos projetos que estar\u00e3o fechados. Para fechar os projetos conectados ao principal basta clicar com o bot\u00e3o direito do mouse sobre o projeto que deseja fechar e ir na op\u00e7\u00e3o Close Project. Obs: fechar todos os projetos, deixar somente o RegrasAluguelCarros aberto. Ap\u00f3s fechar os projetos, clicar com o bot\u00e3o direito sobre o projeto RegrasAluguelCarros e fazer o check-in.","title":"Conectando os Projetos"},{"location":"BLAZE/blaze01/#rma-rule-maintenance-application","text":"Antes de iniciar as configura\u00e7\u00f5es, v\u00e1 em: C:\\Blaze\\projetos e crie um pasta chamada adb. Configura\u00e7\u00f5es de Deploy Inicial Criar uma pasta com o nome de Deploy dentro do projeto Technical. Clicar com o bot\u00e3o direito sobre a pasta Technical dentro do projeto principal [RegrasAluguelCarros]. New - Folder - Name: Deploy. Clicar com o bot\u00e3o direito do mouse sobre a pasta criada [Deploy]. New - Deployment Entities - Rule Maintenance Application Definition - Entity Name: RMADefinition - Finish. Na aba RMADefinition: Application Title [T\u00edtulo do Aplicativo]: Regras de Aluguel de Carros Habilitar as seguintes op\u00e7\u00f5es: Download Rules Command Ir na aba navigate [Navega\u00e7\u00e3o], escolher as pastas que ir\u00e3o aparecer no RMA. As pastas que n\u00e3o v\u00e3o aparecer devem ficar do lado direito. Ir na aba applets e marcar as op\u00e7\u00f5es: Allow Editing of Table Name. Display Branch Condition. Ir na aba Life Cycle Management, marcar todas as op\u00e7\u00f5es e referenciar a pasta adb criada no in\u00edcio deste t\u00f3pico, como mostra a imagem a seguir. Ir no \u00edcone SALVAR ALL na barra superior do eclipse e fazer o check-in clicando com o bot\u00e3o direito sobre o arquivo RMADefinition que est\u00e1 dentro da pasta Deploy.","title":"RMA [Rule Maintenance Application]"},{"location":"BLAZE/blaze01/#funcao-entrypoint","text":"Criando uma fun\u00e7\u00e3o que ir\u00e1 \"startar\" o uso do fluxo de decis\u00e3o no nosso RMA. No eclipse, clicar com o bot\u00e3o direito do mouse sobre a pasta Technical Library - New - Folder - Name: Entrypoint. Clicar com o bot\u00e3o direito do mouse sobre a pasta Entrypoint - New - SRL Decision Entities - Function - Name: entrypoint - Finish. Name: entrypoint Type: Decisioninput Criar um par\u00e2metro e o corpo de uma fun\u00e7\u00e3o. Obs: fa\u00e7a como na imagem a seguir: Ir no \u00edcone SALVAR e fazer o check-in neste arquivo.","title":"Fun\u00e7\u00e3o EntryPoint"},{"location":"BLAZE/blaze01/#variavel-global-input","text":"Criando uma vari\u00e1vel global input. No eclipse, clicar com o bot\u00e3o direito sobre a pasta Technical [Lembrando que esta pasta est\u00e1 dentro de RegrasAluguelCarros]. New - Object Model Entities - Variable Nome: input Na tela de edi\u00e7\u00e3o da vari\u00e1vel: Type: DecisionInput Fazer check-in.","title":"Variavel Global Input"},{"location":"BLAZE/blaze01/#gerar-rma-embarcado","text":"Clicar no projeto principal [RegrasAluguelCarros] e ir em: Project - Rule Maintenance Application - Generate Rule Maintenance Application. Este comando ir\u00e1 abrir uma janela pop-up chamada Gerador de Aplicativo. Nota-se que o Blaze (eclipse) j\u00e1 reconhece o arquivo de configura\u00e7\u00f5es que criamos, o RMADefinition. Este arquivo configura o deploy do projeto para o RMA WEB. Podemos observar tamb\u00e9m que o Blaze j\u00e1 reconheceu a pasta workspaces que criamos no in\u00edcio deste tutorial, no t\u00f3pico [Criando Reposit\u00f3rio]. Deixar a op\u00e7\u00e3o de Deploy como: Web Application. Ao clicar em next, devemos selecionar o arquivo bom-Carro3.jar que criamos e anexamos ao nosso projeto e, por fim, clicar em concluir. O RMA ir\u00e1 abrir automaticamente no navegador Internet Explorer e ir\u00e1 utilizar o local host [http://127.0.0.1:8080] para gerar a interface. A sugest\u00e3o \u00e9 que voc\u00ea copie o link e cole em um navegador mais moderno e atualizado. Se voc\u00ea seguiu todos os passos at\u00e9 aqui, basta digitar admin e admin na senha para que voc\u00ea acesse a interface do RMA. Clicando sobre o projeto, voc\u00ea estar\u00e1 na interface do RMA.","title":"Gerar RMA [Embarcado]"},{"location":"BLAZE/blaze01/#mais-utoriais-blaze","text":"2 Utilizando o RMA - Blaze - Utiliza\u00e7\u00e3o 3 Deploy no Tomcat - Blaze - Deploy 4 T\u00f3picos Avan\u00e7ados - Em constru\u00e7\u00e3o Elaborado por: Jonathan Cardoso Lopes Domingos 21/10/2019","title":"Mais utoriais - Blaze"},{"location":"BLAZE/blaze02/","text":"Utilizando o RMA Introdu\u00e7\u00e3o: Interface inicial: Fun\u00e7\u00f5es importantes que iremos utilizar: No \u00edcone adminitrador [A], voc\u00ea pode gerenciar os usu\u00e1rios que est\u00e3o trabalhando neste projeto. Tamb\u00e9m h\u00e1 os \u00edcones senha [B] e log off [C] que, de certa forma, fazem parte do gerenciamento de usu\u00e1rios. Outros \u00edcones importantes s\u00e3o: Atualizar[D], Atualizar/Update[E] e Compilar[F]. Funcionalidade/Nomenclaturas: Decision flow = Fluxo de decis\u00f5es Decision table = Tabela de decis\u00e3o Decision tree = \u00c1rvore de decis\u00e3o Function = Fun\u00e7\u00e3o ScoreCard = Sistem de scoragem Business Term Set = Vari\u00e1veis que os usu\u00e1rios podem criar Ruleset (Rulebuilder) = Regras \"simples\" de neg\u00f3cios Saindo e entrando no projeto RMA Ao ligar o PC, como nosso RMA est\u00e1 embarcado no eclipse, devemos abrir o eclipse e startar o projeto: Clicar no projeto - Ir na aba Project - Rule Maintenance Application - Start [Iniciar] - Finish. Ap\u00f3s startar o projeto devemos abrir o RMA: Clicar no projeto - Ir na aba Project - Rule Maintenance Application - Open [Abrir]. Decision Flow Criando um fluxo principal Com o projeto rodando no local host (RMA), clicar com o bot\u00e3o direito sobre a pasta Business Library Folder Ir em New - Decision Flow - dar o nome de Fluxo_Principal. Lembre-se que o nome deve ser o mesmo que voc\u00ea atribuiu no tutorial anterior. Organizando o projeto em pastas Para ter um bom projeto \u00e9 necess\u00e1rio estar bem organizado. Iremos, neste t\u00f3pico, organizar o nosso projeto em pastas que ser\u00e3o utilizadas conforme o projeto ganhe maiores propor\u00e7\u00f5es. Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: Ruleset Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: BusinessTerm Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: DecisionTable Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: DecisionTree Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: Function Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: Scorecard OBS: N\u00e3o \u00e9 necess\u00e1rio criar todas as pastas agora. Voc\u00ea pode ir criando conforme necessidade. Estou criando todas agora para fins did\u00e1ticos. Decision Tree Iremos criar nossa primeira Task de decis\u00e3o do Fluxo_Principal. Ser\u00e1 uma Decision Tree que utilizar\u00e1 os dados de idade e renda para dividir grupos de clientes em aprovados ou reprovados. Criando um modelo de Vari\u00e1vel de Neg\u00f3cio [BusinessTerm] Clicar na pasta BusinessTerm - New - Business Term Set Dar o nome de VariaveisNegocio Criando um Value List Clicar no segundo sinal de + e depois clicar no Value List 1 que ir\u00e1 aparecer. Na nova tela, voc\u00ea dever\u00e1 dar o nome de NegadoAprovado e atribuir os valores de negado e aprovado, conforme a imagem abaixo. Por fim, clicar em check-in para que as altera\u00e7\u00f5es tenham efeito. Ap\u00f3s o check-in, voltar na tela anterior. Criando um Business Term Ao acessar novamente a aba VariaveisNegocio voc\u00ea dever\u00e1 clicar na op\u00e7\u00e3o check-in. Clicar no primeiro sinal de + e depois clicar no term1 que ir\u00e1 aparecer. Observe a imagem. Dar o nome de: NegadoAprovadoAtributo, deixar o tipo como String e atribuir o Value List como NegadoAprovado. Fazer o check-in. Criando de fato a Decision Tree Clicar na pasta DecisionTree - ir na aba New - op\u00e7\u00e3o Decision Tree. Colocar o nome de: TreeNegadosAprovados, adicionar uma descri\u00e7\u00e3o, deixar o tipo como Void e clicar em Next. Nesta janela voc\u00ea deve selecionar as vari\u00e1veis (Idade e Renda) que vai usar e clicar em Next. Observe a imagem. (Lembre-se, estas vari\u00e1veis s\u00e3o definidas no arquivo.jar que est\u00e1 no drive e voc\u00ea j\u00e1 deve ter importado no tutorial anterior). O mesmo se repete na pro\u00f3xima janela (Action). (Na a\u00e7\u00e3o iremos usar a vari\u00e1vel que acabamos de criar). Ap\u00f3s configurar as vari\u00e1veis, a janela de cria\u00e7\u00e3o de \u00e1rvores de decis\u00e3o ir\u00e1 aparecer. Basta clicar com o bot\u00e3o direito do mouse sobre o \u00edcone do Start para iniciar a constru\u00e7\u00e3o da Decision Tree. Ap\u00f3s clicar com o bot\u00e3o direito do mouse sobre o \u00edcone Start, ir na op\u00e7\u00e3o Insert Split Selecionar a primeira vari\u00e1vel que ir\u00e1 segmentar nossos clientes: Idade (AGE). Neste momento, iremos segmentar da seguinte forma: Clientes menores de 18 (Negado) e clientes maiores que 18 (Aprovado). Basta digitar 18 e clicar em Add. Depois clicar em Apply. Iremos criar nossa segunda segmenta\u00e7\u00e3o: clientes com renda inferior a R$ 1000 ser\u00e3o considerados Negado. Basta clicar com o bot\u00e3o direito do mouse sobre a pr\u00f3xima \u00e1rea que queremos segmentar e ir na op\u00e7\u00e3o Insert Split Neste caso, queremos segmentar os clientes que t\u00eam 18 anos ou mais, pois os menores de idade j\u00e1 foram classificados como Negado. Observe a imagem a seguir: Na tela de Insert Split, selecione a vari\u00e1vel renda. Coloque o valor de 1000 e clique em ADD. Depois clique em Apply. Por fim, iremos atribuir os valores de Negado e Aprovado \u00e0 nossa \u00e1rvore de decis\u00e3o. Clicar com o bot\u00e3o direito do mouse sobre o primeiro valor a ser acionado. Selecionar a op\u00e7\u00e3o Assign Value e ecolher a a\u00e7\u00e3o Negado. Repetir o processo para os outros tr\u00eas pontos. Sua Decision Tree dever\u00e1 ficar como na imagem abaixo. Agora basta fazer o check-in para salvar as altera\u00e7\u00f5es. Clicar em Fluxo_Principal para acrescentar nossa \u00e1rvore de decis\u00e3o. Adicionando a Decision Tree no Fluxo. Ap\u00f3s clicar no Fluxo_Principal, voc\u00ea deve clicar em check-out e adicionar um Task, como ilustrado na imagem abaixo. Ap\u00f3s adicionar a Task, voc\u00ea deve escolher um nome, chamar a Decision Tree que acabamos de criar e clicar em Apply. (Fazer o check-in ) Function Neste t\u00f3pico, iremos criar uma fun\u00e7\u00e3o para que de fato nossa Decision Tree criada no t\u00f3pico anterior tenha um efeito de output. At\u00e9 o momento, nossa Decision Tree divide o grupo de clientes em Aprovados e Negados, conforme sua Idade e Renda. Agora iremos criar uma fun\u00e7\u00e3o que recebe estes valores (Aprovado ou Reprovado) e armazena na vari\u00e1vel DECISION. Lembrando que esta vari\u00e1vel foi criada no arquivo.jar. (Em breve farei mais tutoriais sobre este arquivo). Criando a fun\u00e7\u00e3o. Clicar na pasta Function que criamos e em seguida ir em NEW - Function. Colocar o nome de FunctionNegadosAprovados. Nota-se que o nome da fun\u00e7\u00e3o \u00e9 semelhante ao da \u00e1rvore de decis\u00e3o (TreeNegadosAprovados). Isso facilita a compreens\u00e3o das partes. Clique na op\u00e7\u00e3o [Switch to Rule Builder] para acionar o modo de edi\u00e7\u00e3o simples de c\u00f3digo. Depois clique no editor de c\u00f3digo. No editor de c\u00f3digo, escolha a vari\u00e1vel que deseja armazenar os outputs da \u00e1rvore de decis\u00e3o. Para este tutorial, utilizaremos a vari\u00e1vel Decision. Escolher a vari\u00e1vel que vai armazenar no nosso output. O editor funciona no modo de arrasta e solta. Voc\u00ea clica na vari\u00e1vel, arrasta at\u00e9 o lugar e solta. Clique em Done para finalizar. Fa\u00e7a o check-in Observe as imagens abaixo como exemplo: Adicionando a fun\u00e7\u00e3o ao Fluxo_Principal: O processo \u00e9 semelhante ao adicionar a \u00e1rvore de decis\u00e3o no fluxo. Ap\u00f3s clicar no Fluxo_Principal, voc\u00ea deve clicar em check-out e adicionar uma Task. Ap\u00f3s adicionar a Task (depois da Task de \u00e1rvore de decis\u00e3o) voc\u00ea deve Escolher um nome, chamar a Decision Tree que acabamos de criar e clicar em Apply. (Fazer o check-in ) Observe a imagem a seguir: Testing At\u00e9 o momento, criamos apenas uma regra de neg\u00f3cio. Nosso programa deve analisar a idade e renda do cliente e retornar a sua aprova\u00e7\u00e3o ou reprova\u00e7\u00e3o. Para saber se tudo est\u00e1 correto at\u00e9 o momento, iremos fazer um teste. Gerando arquivo de teste. Clicar na aba Testar e ir em Decision Testing. Selecionar a op\u00e7\u00e3o Test. Selecionar a op\u00e7\u00e3o Entrypoint(DecisionInput): DecisionInput Ir em CONFIGURE DATA para gerar um modelo de teste. Para gerar o modelo de teste, iremos utilizar as vari\u00e1veis Age e Renda no input e Decision no Result. Clicar em Download para concluir. Ir na sua pasta de Downloads e abrir, no notepad++, o arquivo (inputdata.csv) que foi gerado. Voc\u00ea deve inserir as informa\u00e7\u00f5es para testar: Obs: os valores Result-State e Result-Detail n\u00e3o devem ser preenchidos, mas as v\u00edrgulas devem ser mantidas. O valor de result:DECISION tamb\u00e9m n\u00e3o deve ser preenchido. Seguir o exemplo abaixo: Salvar o arquivo na pasta C:\\Blaze\\projetos\\unit-tests . Caso n\u00e3o tenha esta pasta, basta cri\u00e1-la e mover o arquivo para dentro dela. Testando a aplica\u00e7\u00e3o. Agora que voc\u00ea tem o arquivo de teste com os dados a serem testados, basta clicar em UPLOAD DATA FILE e selecionar o arquivo de teste que criamos. Lembrando que o arquivo deve estar na pasta C:\\Blaze\\projetos\\unit-tests. O arquivo se chama inputdata.csv Ao carregar o arquivo, basta clicar em RUN TEST e esperar pelos resultados. Resultados do teste. Como podemos observar, todos os testes foram bem sucedidos. Todos os clientes que tinham menos de 18 anos e/ou renda inferior a R$ 1000 foram taxados como Negados e os demais como Aprovados. Esta foi uma simula\u00e7\u00e3o simples de aprova\u00e7\u00e3o para alugar carros. Muitas vari\u00e1veis podem ser levadas em considera\u00e7\u00e3o. Modelos de decis\u00e3o mais avan\u00e7ados ser\u00e3o discutidos nas pr\u00f3ximas publica\u00e7\u00f5es. Mais utoriais - Blaze 1 Introdu\u00e7\u00e3o ao Blaze Blaze - Instala\u00e7\u00f5es 3 Deploy no Tomcat - Blaze - Deploy 4 T\u00f3picos avan\u00e7ados - Em constru\u00e7\u00e3o. Elaborado por: Jonathan Cardoso Lopes Domingos 21/10/2019","title":"Blaze - Utiliza\u00e7\u00e3o"},{"location":"BLAZE/blaze02/#utilizando-o-rma","text":"","title":"Utilizando o RMA"},{"location":"BLAZE/blaze02/#introducao","text":"Interface inicial: Fun\u00e7\u00f5es importantes que iremos utilizar: No \u00edcone adminitrador [A], voc\u00ea pode gerenciar os usu\u00e1rios que est\u00e3o trabalhando neste projeto. Tamb\u00e9m h\u00e1 os \u00edcones senha [B] e log off [C] que, de certa forma, fazem parte do gerenciamento de usu\u00e1rios. Outros \u00edcones importantes s\u00e3o: Atualizar[D], Atualizar/Update[E] e Compilar[F]. Funcionalidade/Nomenclaturas: Decision flow = Fluxo de decis\u00f5es Decision table = Tabela de decis\u00e3o Decision tree = \u00c1rvore de decis\u00e3o Function = Fun\u00e7\u00e3o ScoreCard = Sistem de scoragem Business Term Set = Vari\u00e1veis que os usu\u00e1rios podem criar Ruleset (Rulebuilder) = Regras \"simples\" de neg\u00f3cios Saindo e entrando no projeto RMA Ao ligar o PC, como nosso RMA est\u00e1 embarcado no eclipse, devemos abrir o eclipse e startar o projeto: Clicar no projeto - Ir na aba Project - Rule Maintenance Application - Start [Iniciar] - Finish. Ap\u00f3s startar o projeto devemos abrir o RMA: Clicar no projeto - Ir na aba Project - Rule Maintenance Application - Open [Abrir].","title":"Introdu\u00e7\u00e3o:"},{"location":"BLAZE/blaze02/#decision-flow","text":"Criando um fluxo principal Com o projeto rodando no local host (RMA), clicar com o bot\u00e3o direito sobre a pasta Business Library Folder Ir em New - Decision Flow - dar o nome de Fluxo_Principal. Lembre-se que o nome deve ser o mesmo que voc\u00ea atribuiu no tutorial anterior.","title":"Decision Flow"},{"location":"BLAZE/blaze02/#organizando-o-projeto-em-pastas","text":"Para ter um bom projeto \u00e9 necess\u00e1rio estar bem organizado. Iremos, neste t\u00f3pico, organizar o nosso projeto em pastas que ser\u00e3o utilizadas conforme o projeto ganhe maiores propor\u00e7\u00f5es. Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: Ruleset Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: BusinessTerm Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: DecisionTable Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: DecisionTree Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: Function Clicar na pasta principal Business Library Folder e ir na aba NEW - FOLDER Nome: Scorecard OBS: N\u00e3o \u00e9 necess\u00e1rio criar todas as pastas agora. Voc\u00ea pode ir criando conforme necessidade. Estou criando todas agora para fins did\u00e1ticos.","title":"Organizando o projeto em pastas"},{"location":"BLAZE/blaze02/#decision-tree","text":"Iremos criar nossa primeira Task de decis\u00e3o do Fluxo_Principal. Ser\u00e1 uma Decision Tree que utilizar\u00e1 os dados de idade e renda para dividir grupos de clientes em aprovados ou reprovados. Criando um modelo de Vari\u00e1vel de Neg\u00f3cio [BusinessTerm] Clicar na pasta BusinessTerm - New - Business Term Set Dar o nome de VariaveisNegocio Criando um Value List Clicar no segundo sinal de + e depois clicar no Value List 1 que ir\u00e1 aparecer. Na nova tela, voc\u00ea dever\u00e1 dar o nome de NegadoAprovado e atribuir os valores de negado e aprovado, conforme a imagem abaixo. Por fim, clicar em check-in para que as altera\u00e7\u00f5es tenham efeito. Ap\u00f3s o check-in, voltar na tela anterior. Criando um Business Term Ao acessar novamente a aba VariaveisNegocio voc\u00ea dever\u00e1 clicar na op\u00e7\u00e3o check-in. Clicar no primeiro sinal de + e depois clicar no term1 que ir\u00e1 aparecer. Observe a imagem. Dar o nome de: NegadoAprovadoAtributo, deixar o tipo como String e atribuir o Value List como NegadoAprovado. Fazer o check-in. Criando de fato a Decision Tree Clicar na pasta DecisionTree - ir na aba New - op\u00e7\u00e3o Decision Tree. Colocar o nome de: TreeNegadosAprovados, adicionar uma descri\u00e7\u00e3o, deixar o tipo como Void e clicar em Next. Nesta janela voc\u00ea deve selecionar as vari\u00e1veis (Idade e Renda) que vai usar e clicar em Next. Observe a imagem. (Lembre-se, estas vari\u00e1veis s\u00e3o definidas no arquivo.jar que est\u00e1 no drive e voc\u00ea j\u00e1 deve ter importado no tutorial anterior). O mesmo se repete na pro\u00f3xima janela (Action). (Na a\u00e7\u00e3o iremos usar a vari\u00e1vel que acabamos de criar). Ap\u00f3s configurar as vari\u00e1veis, a janela de cria\u00e7\u00e3o de \u00e1rvores de decis\u00e3o ir\u00e1 aparecer. Basta clicar com o bot\u00e3o direito do mouse sobre o \u00edcone do Start para iniciar a constru\u00e7\u00e3o da Decision Tree. Ap\u00f3s clicar com o bot\u00e3o direito do mouse sobre o \u00edcone Start, ir na op\u00e7\u00e3o Insert Split Selecionar a primeira vari\u00e1vel que ir\u00e1 segmentar nossos clientes: Idade (AGE). Neste momento, iremos segmentar da seguinte forma: Clientes menores de 18 (Negado) e clientes maiores que 18 (Aprovado). Basta digitar 18 e clicar em Add. Depois clicar em Apply. Iremos criar nossa segunda segmenta\u00e7\u00e3o: clientes com renda inferior a R$ 1000 ser\u00e3o considerados Negado. Basta clicar com o bot\u00e3o direito do mouse sobre a pr\u00f3xima \u00e1rea que queremos segmentar e ir na op\u00e7\u00e3o Insert Split Neste caso, queremos segmentar os clientes que t\u00eam 18 anos ou mais, pois os menores de idade j\u00e1 foram classificados como Negado. Observe a imagem a seguir: Na tela de Insert Split, selecione a vari\u00e1vel renda. Coloque o valor de 1000 e clique em ADD. Depois clique em Apply. Por fim, iremos atribuir os valores de Negado e Aprovado \u00e0 nossa \u00e1rvore de decis\u00e3o. Clicar com o bot\u00e3o direito do mouse sobre o primeiro valor a ser acionado. Selecionar a op\u00e7\u00e3o Assign Value e ecolher a a\u00e7\u00e3o Negado. Repetir o processo para os outros tr\u00eas pontos. Sua Decision Tree dever\u00e1 ficar como na imagem abaixo. Agora basta fazer o check-in para salvar as altera\u00e7\u00f5es. Clicar em Fluxo_Principal para acrescentar nossa \u00e1rvore de decis\u00e3o. Adicionando a Decision Tree no Fluxo. Ap\u00f3s clicar no Fluxo_Principal, voc\u00ea deve clicar em check-out e adicionar um Task, como ilustrado na imagem abaixo. Ap\u00f3s adicionar a Task, voc\u00ea deve escolher um nome, chamar a Decision Tree que acabamos de criar e clicar em Apply. (Fazer o check-in )","title":"Decision Tree"},{"location":"BLAZE/blaze02/#function","text":"Neste t\u00f3pico, iremos criar uma fun\u00e7\u00e3o para que de fato nossa Decision Tree criada no t\u00f3pico anterior tenha um efeito de output. At\u00e9 o momento, nossa Decision Tree divide o grupo de clientes em Aprovados e Negados, conforme sua Idade e Renda. Agora iremos criar uma fun\u00e7\u00e3o que recebe estes valores (Aprovado ou Reprovado) e armazena na vari\u00e1vel DECISION. Lembrando que esta vari\u00e1vel foi criada no arquivo.jar. (Em breve farei mais tutoriais sobre este arquivo). Criando a fun\u00e7\u00e3o. Clicar na pasta Function que criamos e em seguida ir em NEW - Function. Colocar o nome de FunctionNegadosAprovados. Nota-se que o nome da fun\u00e7\u00e3o \u00e9 semelhante ao da \u00e1rvore de decis\u00e3o (TreeNegadosAprovados). Isso facilita a compreens\u00e3o das partes. Clique na op\u00e7\u00e3o [Switch to Rule Builder] para acionar o modo de edi\u00e7\u00e3o simples de c\u00f3digo. Depois clique no editor de c\u00f3digo. No editor de c\u00f3digo, escolha a vari\u00e1vel que deseja armazenar os outputs da \u00e1rvore de decis\u00e3o. Para este tutorial, utilizaremos a vari\u00e1vel Decision. Escolher a vari\u00e1vel que vai armazenar no nosso output. O editor funciona no modo de arrasta e solta. Voc\u00ea clica na vari\u00e1vel, arrasta at\u00e9 o lugar e solta. Clique em Done para finalizar. Fa\u00e7a o check-in Observe as imagens abaixo como exemplo: Adicionando a fun\u00e7\u00e3o ao Fluxo_Principal: O processo \u00e9 semelhante ao adicionar a \u00e1rvore de decis\u00e3o no fluxo. Ap\u00f3s clicar no Fluxo_Principal, voc\u00ea deve clicar em check-out e adicionar uma Task. Ap\u00f3s adicionar a Task (depois da Task de \u00e1rvore de decis\u00e3o) voc\u00ea deve Escolher um nome, chamar a Decision Tree que acabamos de criar e clicar em Apply. (Fazer o check-in ) Observe a imagem a seguir:","title":"Function"},{"location":"BLAZE/blaze02/#testing","text":"At\u00e9 o momento, criamos apenas uma regra de neg\u00f3cio. Nosso programa deve analisar a idade e renda do cliente e retornar a sua aprova\u00e7\u00e3o ou reprova\u00e7\u00e3o. Para saber se tudo est\u00e1 correto at\u00e9 o momento, iremos fazer um teste. Gerando arquivo de teste. Clicar na aba Testar e ir em Decision Testing. Selecionar a op\u00e7\u00e3o Test. Selecionar a op\u00e7\u00e3o Entrypoint(DecisionInput): DecisionInput Ir em CONFIGURE DATA para gerar um modelo de teste. Para gerar o modelo de teste, iremos utilizar as vari\u00e1veis Age e Renda no input e Decision no Result. Clicar em Download para concluir. Ir na sua pasta de Downloads e abrir, no notepad++, o arquivo (inputdata.csv) que foi gerado. Voc\u00ea deve inserir as informa\u00e7\u00f5es para testar: Obs: os valores Result-State e Result-Detail n\u00e3o devem ser preenchidos, mas as v\u00edrgulas devem ser mantidas. O valor de result:DECISION tamb\u00e9m n\u00e3o deve ser preenchido. Seguir o exemplo abaixo: Salvar o arquivo na pasta C:\\Blaze\\projetos\\unit-tests . Caso n\u00e3o tenha esta pasta, basta cri\u00e1-la e mover o arquivo para dentro dela. Testando a aplica\u00e7\u00e3o. Agora que voc\u00ea tem o arquivo de teste com os dados a serem testados, basta clicar em UPLOAD DATA FILE e selecionar o arquivo de teste que criamos. Lembrando que o arquivo deve estar na pasta C:\\Blaze\\projetos\\unit-tests. O arquivo se chama inputdata.csv Ao carregar o arquivo, basta clicar em RUN TEST e esperar pelos resultados. Resultados do teste. Como podemos observar, todos os testes foram bem sucedidos. Todos os clientes que tinham menos de 18 anos e/ou renda inferior a R$ 1000 foram taxados como Negados e os demais como Aprovados. Esta foi uma simula\u00e7\u00e3o simples de aprova\u00e7\u00e3o para alugar carros. Muitas vari\u00e1veis podem ser levadas em considera\u00e7\u00e3o. Modelos de decis\u00e3o mais avan\u00e7ados ser\u00e3o discutidos nas pr\u00f3ximas publica\u00e7\u00f5es.","title":"Testing"},{"location":"BLAZE/blaze02/#mais-utoriais-blaze","text":"1 Introdu\u00e7\u00e3o ao Blaze Blaze - Instala\u00e7\u00f5es 3 Deploy no Tomcat - Blaze - Deploy 4 T\u00f3picos avan\u00e7ados - Em constru\u00e7\u00e3o. Elaborado por: Jonathan Cardoso Lopes Domingos 21/10/2019","title":"Mais utoriais - Blaze"},{"location":"BLAZE/blaze03/","text":"Deploy Toncat7 Assim como nos tutoriais anteriores, os arquivos para instala\u00e7\u00e3o se encontram no seguinte reposit\u00f3rio: REPOSIT\u00d3RIO Para iniciar este tutorial, voc\u00ea precisar\u00e1 baixar uma pasta em formato zip que est\u00e1 no drive. tomcat7.zip Ap\u00f3s o download, voc\u00ea dever\u00e1 descompactar os arquivos dentro da pasta C:\\Blaze\\projetos que criamos em tutoriais anteriores. Seus arquivos descompactados devem ficar assim: C:\\Blaze\\projetos\\tomcat7 Configurando o StartServer.bat Este arquivo serve para facilitar o servi\u00e7o de deploy no tomcat. Abrir o arquivo startServer.bat com o notepad++. O comando set JAVA_HOME=C:\\Progra~1\\Java\\jdk1.8.0_211 deve estar apontando para o jdk que est\u00e1 no seu pc. No caso do meu pc, o jdk est\u00e1 no endere\u00e7o: C:\\Program Files\\Java\\jdk1.8.0_221 . Substituir o endere\u00e7o no arquivo StartServer. O comando set CATALINA_HOME=C:\\Blaze\\training\\tomcat7 tamb\u00e9m deve ser alterado. Ele deve estar apontando para a pasta tomcat7 que voc\u00ea acabou de descompactar na pasta projetos. Obs: a pasta tomcat7 pode estar dentro de outra pasta tomcat7, a depender do modo como foi descompactada. Substituir o endere\u00e7o no arquivo StartServer. O comando start C:\\Blaze\\training\\tomcat7\\bin\\startup.bat tamb\u00e9m deve estar referenciado corretamente. Referenciar como: start C:\\Blaze\\projetos\\tomcat7\\tomcat7\\bin\\startup.bat . A imagem a seguir mostra como ficaram as altera\u00e7\u00f5es. N\u00e3o se esque\u00e7a de salvar estas altera\u00e7\u00f5es. Ap\u00f3s as altera\u00e7\u00f5es de endere\u00e7o, d\u00ea um duplo clique sobre o arquivo startServer e o tomcat7 ir\u00e1 rodar no http://localhost:8081/ Gerar um .WAR [Eclipse] Agora iremos gerar um arquivo WAR ( W eb Application AR chive). Este \u00e9 um arquivo que permite a aplica\u00e7\u00e3o WEB do nosso projeto. Primeiro voc\u00ea deve criar uma pasta chamada RMA dentro da pasta projetos. Abrir o Eclipse. Selecionar o nosso projeto (RegrasAluguelCarros). Ir na aba Project. Generate Rule Maintenance Application. Mudar o RMA Deployment para Eclipse Web Project and WAR. Eclipse Web Project name: RegrasRMA (ou pode deixar o nome que o Blaze recomenda). Marcar a op\u00e7\u00e3o: Generate War. O caminho do War: War File Location: Pasta RMA que criamos. No meu caso, ficou assim: C:\\Blaze\\projetos\\rma. Next - Selecionar o projeto - Next - Selecionar o .jar - Finish. Ap\u00f3s concluir estes passos, o Blaze (Eclipse) ir\u00e1 gerar um arquivo .WAR [ RegrasRMA.war ] na sua pasta RMA. (Isso pode levar algum tempo, dependendo de seu computador). Al\u00e9m do arquivo .WAR, ser\u00e1 gerado tamb\u00e9m um projeto no seu Eclipse. Clicar com o bot\u00e3o direito do mouse e fechar este projeto. (Close Project) Executar o projeto .WAR [Toncat7] Agora iremos executar, no tomcat, o projeto RegrasRMA.war que est\u00e1 dentro da pasta RMA. Rodar o servidor tomcat (caso n\u00e3o esteja rodando). Duplo clique sobre o arquivo StartServer.bat que est\u00e1 na pasta C:\\Blaze\\projetos\\tomcat7. O tomcat7 ir\u00e1 rodar no http://localhost:8081/ Ap\u00f3s certificar-se de que o servidor tomcat est\u00e1 ativo no localhost 8081, basta ir na pasta RMA e copiar o arquivo RegrasRMA.war para a pasta webapps [ C:\\Blaze\\projetos\\tomcat7\\tomcat7\\webapps ] Se o servidor tomcat estiver ativo, o arquivo RegrasRMA.war ser\u00e1 descompactado automaticamente (isso pode levar algum tempo, a depender do seu computador). Ap\u00f3s executar todo o processo de gerar o arquivo.WAR e descompact\u00e1-lo na pasta webapps do tomcat, basta ir no navegador que o tomcat est\u00e1 rodando, digitar o nome do projeto [ RegrasRMA ] ap\u00f3s a porta 8081 e apertar enter para carregar a p\u00e1gina, como na imagem abaixo. Isso ir\u00e1 gerar o RMA do Blaze no tomcat7, sem a necessidade de estar embarcado no Eclipse. Basta logar e come\u00e7ar a criar suas regras de neg\u00f3cio. Deploy [Rule Server] - Configura\u00e7\u00f5es Agora, de fato, iremos gerar um Deploy de servi\u00e7o de regras, isto \u00e9, iremos gerar uma aplica\u00e7\u00e3o pronta para ser executada. Primeiro, voc\u00ea dever\u00e1 criar uma pasta com o nome de RuleServer dentro da pasta projetos. Ir no Eclipse: Pasta Deploy (voc\u00ea dever\u00e1 criar tr\u00eas arquivos de configura\u00e7\u00e3o). Primeiro arquivo de configura\u00e7\u00e3o: [ Rule Service Definition ] Clicar com o bot\u00e3o direito do mouse sobre a pasta Deploy. New - Deployment Entities - Rule Service Definition. Manter o mesmo nome, por\u00e9m sem os espa\u00e7os e caracteres especiais. Observe o exemplo abaixo: Na aba de DefinicaoDoServicoDeRegras, v\u00e1 em Add... [adicionar...] Em Functional Item [Item Funcional], escolha a op\u00e7\u00e3o entrypoint(decisionInput):DecisionInput Salvar e fazer o Check-in. Segundo arquivo de configura\u00e7\u00e3o: [ Deployment Definition ] Clicar com o bot\u00e3o direito do mouse sobre a pasta Deploy. New - Deployment Entities - Deployment Definition. Manter o mesmo nome, por\u00e9m sem os espa\u00e7os e caracteres especiais. Observe o exemplo abaixo: Na aba de DefinicaoDeImplementacao, em Plataforma de Destino, escolha a op\u00e7\u00e3o Java POJO Web Service . Salvar e fazer o Check-in. Terceiro arquivo de configura\u00e7\u00e3o: Clicar com o bot\u00e3o direito do mouse sobre a pasta Deploy. New - Deployment Entities - System Definition. ------------------------- Manter o mesmo nome, por\u00e9m sem os espa\u00e7os e caracteres especiais [DefinicaoDoSistema]. Na aba de DefinicaoDoSistema: Em Plataforma de Destino, escolha a op\u00e7\u00e3o Java POJO Web Service . Em Fornecedor, escolha a op\u00e7\u00e3o Tomcat8 and later . Salvar e fazer o Check-in. Deploy [Rule Server] - Gerando Arquivos Copiar o caminho da pasta ruleserver que voc\u00ea criou. No meu caso, a pasta est\u00e1 em: C:\\Blaze\\projetos\\ruleserver. Ir no Eclipse, selecionar o projeto principal e ir na aba Project: Generate Rule Service Deployment [Gerar Implementa\u00e7\u00e3o de Servi\u00e7o de Regras] Obs: o Eclipse ir\u00e1 encontrar as configura\u00e7\u00f5es que acabamos de fazer. [T\u00f3pico - Deploy [Rule Server] - Configura\u00e7\u00f5es]. Next - Next - Selecionar ou colar o caminho da pasta ruleserver - Next. Nesta parte, basta observar se os arquivos selecionados s\u00e3o do tipo aquivo.bat Para deploy em Linux, os arquivos devem ser arquivo.sh Finish. Ao abrir a pasta ruleserver, voc\u00ea poder\u00e1 observar alguns arquivos l\u00e1. Obs: o arquivo DeploymentDocumentation.html \u00e9 uma documenta\u00e7\u00e3o que guia o processo de deploy. Deploy [Rule Server] Agora iremos configurar alguns arquivos que foram gerados pelo processo anterior, na pasta Server. Lembrando que esta pasta se encontra dentro da pasta ruleserver. Configurando o Script [Setenv]. Ir na pasta ruleserver/server. Abrir o arquivo Setenv.bat com o notepad++ Voc\u00ea deve referenciar corretamente os caminhos de: TOMCAT_HOME=C:\\apache-tomcat-8.5.24 e JAVA_HOME=C:\\Java\\jdk Observe a imagem a seguir: Acrescentar o seguinte c\u00f3digo na linha 99 [ set CLASSPATH=%CLASSPATH%;C:\\Blaze\\projetos\\bom-Carro3.jar; ] OBS: Este (C:\\Blaze\\projetos\\bom-Carro3.jar) \u00e9 o caminho do meu arquivo.jar Salvar as altera\u00e7\u00f5es Configurando o Script [War.bat] Abrir o arquivo War.bat no notepad++ Na linha 58, adicionar o c\u00f3digo descrito na imagem abaixo. Aten\u00e7\u00e3o: o caminho que digitei \u00e9 o caminho do meu arquivo bom-Carro3.jar Salvar as altera\u00e7\u00f5es. ------------------------- N\u00e3o se esque\u00e7a de salvar as altera\u00e7\u00f5es! Rodando o Script [Setenv] Ir na pasta ruleserver/server. Digitar cmd na barra de caminhos e apertar enter. Isso ir\u00e1 abrir o cmd na pasta server. Basta digitar Setenv.bat e pressionar enter para executar o arquivo que acabamos de configurar. Rodando o Script [Build.bat] Ainda no cmd do windows (deve ser na mesma janela que voc\u00ea digitou o Server.bat) Digite Build.bat e aperte enter. Este comando ir\u00e1 compilar algumas classes. ------------------------- Rodando o arquivo [War.bat] Ainda no cmd do windows (Deve ser na mesma janela que voc\u00ea digitou o Server.bat e Build.bat) Digite War.bat e aperte enter. Este comando ir\u00e1 gerar uma s\u00e9rie de arquivos, inclusive um arquivo.war dentro da pasta C:\\Blaze\\projetos\\ruleserver\\server\\build. Para este projeto, o nome do arquivo ficou como: DefinicaoDoServicoDeRegrasServer.war Este .war \u00e9 o nosso ruleserver. Ele que vai gerar um up server no tomcat. Fechar o cmd. Gerando uma aplica\u00e7\u00e3o Toncat Startar o Toncat7 pelo arquivo startServer.bat (dando um duplo clique) que est\u00e1 na pasta C:\\Blaze\\projetos\\tomcat7 Copiar o arquivo.war [ DefinicaoDoServicoDeRegrasServer.war ] da pasta C:\\Blaze\\projetos\\ruleserver\\server\\build para a pasta C:\\Blaze\\projetos\\tomcat7\\tomcat7\\webapps Se tudo estiver correto, o arquivo DefinicaoDoServicoDeRegrasServer.war ir\u00e1 se descompactar automaticamente gerando uma pasta de mesmo nome. Ir na pasta C:\\Blaze\\projetos\\ruleserver e abrir o arquivo DeploymentDocumentation.html dando um duplo clique sobre ele. Procurar e copiar o seguinte link WSDL: http://localhost:8080/DefinicaoDoServicoDeRegrasServer/DefinicaoDoServicoDeRegrasService?wsdl Colar o link em seu navegador. Obs: trocar a porta 8080 por 8081. O link ficar\u00e1 assim: http://localhost:8081/DefinicaoDoServicoDeRegrasServer/DefinicaoDoServicoDeRegrasService?wsdl Se tudo ocorreu bem, sua aplica\u00e7\u00e3o retornar\u00e1 um XML assim: Testando a Aplica\u00e7\u00e3o no SoapUI Criar uma pasta [workspaceSoap] dentro da pasta Projetos. Instalar o SoapUI Baixe o SoapUI [SoapUI-x32-5.5.0.exe] do Reposit\u00f3rio que disponibilizei: REPOSIT\u00d3RIO Duplo clique sobre o execut\u00e1vel e ir dando next. O SoapUI abrir\u00e1 sua janela inicial. No SoapUI, v\u00e1 em: File - New Workspace - dar o nome de workspaceSoap Escolher a pasta workspaceSoap que criamos dentro da pasta Projetos. Salvar. Ainda no SoapUI: File - New Soap Project. Aten\u00e7\u00e3o: colar o link WSDL que geramos para o tomcat anteriormente: http://localhost:8081/DefinicaoDoServicoDeRegrasServer/DefinicaoDoServicoDeRegrasService?wsdl O nome do projeto ser\u00e1 gerado automaticamente. O Soap importar\u00e1 o servi\u00e7o e gerar\u00e1 um request. [entrypoint] - Clicando no arquivo: entrypoint/Request1 teremos uma comunica\u00e7\u00e3o com a aplica\u00e7\u00e3o. Basta digitar os dados do cliente no lugar das interroga\u00e7\u00f5es (?) e teremos o output dos dados inseridos. - Para isso, basta digitar os dados e ir no \u00edcone Rodar. Considera\u00e7\u00f5es finais Como voc\u00ea pod\u00ea ver, nossa aplica\u00e7\u00e3o \u00e9 bem simples e apresenta v\u00e1rias inconsist\u00eancias como, por exemplo, possuir dados que n\u00e3o est\u00e3o sendo utilizados. Mas nosso objetivo era apenas introduzir o Blaze. Esta aplica\u00e7\u00e3o recebe dois valores principais (idade e renda) e retorna Negado caso a idade seja menor do que 18 ou a renda menor do que R$ 1000. Ou seja, n\u00e3o est\u00e3o aptos a alugar um carro. No exemplo acima, a idade \u00e9 de 22 anos e a renda \u00e9 de R$ 5420, ou seja, \u00e9 um cliente apto a alugar um carro. J\u00e1 no exemplo abaixo, a idade \u00e9 de 16 e a renda de R$ 5420. Mesmo a renda sendo maior do que R$ 1000, o resultado \u00e9 Negado, pois a idade \u00e9 menor do que 18. Mais utoriais - Blaze 1 Introdu\u00e7\u00e3o ao Blaze Blaze - Instala\u00e7\u00f5es 2 Utilizando o RMA - Blaze - Utiliza\u00e7\u00e3o 4 T\u00f3picos avan\u00e7ados - Em constru\u00e7\u00e3o. Elaborado por: Jonathan Cardoso Lopes Domingos 21/10/2019","title":"Blaze - Deploy"},{"location":"BLAZE/blaze03/#deploy-toncat7","text":"Assim como nos tutoriais anteriores, os arquivos para instala\u00e7\u00e3o se encontram no seguinte reposit\u00f3rio: REPOSIT\u00d3RIO Para iniciar este tutorial, voc\u00ea precisar\u00e1 baixar uma pasta em formato zip que est\u00e1 no drive. tomcat7.zip Ap\u00f3s o download, voc\u00ea dever\u00e1 descompactar os arquivos dentro da pasta C:\\Blaze\\projetos que criamos em tutoriais anteriores. Seus arquivos descompactados devem ficar assim: C:\\Blaze\\projetos\\tomcat7","title":"Deploy Toncat7"},{"location":"BLAZE/blaze03/#configurando-o-startserverbat","text":"Este arquivo serve para facilitar o servi\u00e7o de deploy no tomcat. Abrir o arquivo startServer.bat com o notepad++. O comando set JAVA_HOME=C:\\Progra~1\\Java\\jdk1.8.0_211 deve estar apontando para o jdk que est\u00e1 no seu pc. No caso do meu pc, o jdk est\u00e1 no endere\u00e7o: C:\\Program Files\\Java\\jdk1.8.0_221 . Substituir o endere\u00e7o no arquivo StartServer. O comando set CATALINA_HOME=C:\\Blaze\\training\\tomcat7 tamb\u00e9m deve ser alterado. Ele deve estar apontando para a pasta tomcat7 que voc\u00ea acabou de descompactar na pasta projetos. Obs: a pasta tomcat7 pode estar dentro de outra pasta tomcat7, a depender do modo como foi descompactada. Substituir o endere\u00e7o no arquivo StartServer. O comando start C:\\Blaze\\training\\tomcat7\\bin\\startup.bat tamb\u00e9m deve estar referenciado corretamente. Referenciar como: start C:\\Blaze\\projetos\\tomcat7\\tomcat7\\bin\\startup.bat . A imagem a seguir mostra como ficaram as altera\u00e7\u00f5es. N\u00e3o se esque\u00e7a de salvar estas altera\u00e7\u00f5es. Ap\u00f3s as altera\u00e7\u00f5es de endere\u00e7o, d\u00ea um duplo clique sobre o arquivo startServer e o tomcat7 ir\u00e1 rodar no http://localhost:8081/","title":"Configurando o StartServer.bat"},{"location":"BLAZE/blaze03/#gerar-um-war-eclipse","text":"Agora iremos gerar um arquivo WAR ( W eb Application AR chive). Este \u00e9 um arquivo que permite a aplica\u00e7\u00e3o WEB do nosso projeto. Primeiro voc\u00ea deve criar uma pasta chamada RMA dentro da pasta projetos. Abrir o Eclipse. Selecionar o nosso projeto (RegrasAluguelCarros). Ir na aba Project. Generate Rule Maintenance Application. Mudar o RMA Deployment para Eclipse Web Project and WAR. Eclipse Web Project name: RegrasRMA (ou pode deixar o nome que o Blaze recomenda). Marcar a op\u00e7\u00e3o: Generate War. O caminho do War: War File Location: Pasta RMA que criamos. No meu caso, ficou assim: C:\\Blaze\\projetos\\rma. Next - Selecionar o projeto - Next - Selecionar o .jar - Finish. Ap\u00f3s concluir estes passos, o Blaze (Eclipse) ir\u00e1 gerar um arquivo .WAR [ RegrasRMA.war ] na sua pasta RMA. (Isso pode levar algum tempo, dependendo de seu computador). Al\u00e9m do arquivo .WAR, ser\u00e1 gerado tamb\u00e9m um projeto no seu Eclipse. Clicar com o bot\u00e3o direito do mouse e fechar este projeto. (Close Project)","title":"Gerar um .WAR [Eclipse]"},{"location":"BLAZE/blaze03/#executar-o-projeto-war-toncat7","text":"Agora iremos executar, no tomcat, o projeto RegrasRMA.war que est\u00e1 dentro da pasta RMA. Rodar o servidor tomcat (caso n\u00e3o esteja rodando). Duplo clique sobre o arquivo StartServer.bat que est\u00e1 na pasta C:\\Blaze\\projetos\\tomcat7. O tomcat7 ir\u00e1 rodar no http://localhost:8081/ Ap\u00f3s certificar-se de que o servidor tomcat est\u00e1 ativo no localhost 8081, basta ir na pasta RMA e copiar o arquivo RegrasRMA.war para a pasta webapps [ C:\\Blaze\\projetos\\tomcat7\\tomcat7\\webapps ] Se o servidor tomcat estiver ativo, o arquivo RegrasRMA.war ser\u00e1 descompactado automaticamente (isso pode levar algum tempo, a depender do seu computador). Ap\u00f3s executar todo o processo de gerar o arquivo.WAR e descompact\u00e1-lo na pasta webapps do tomcat, basta ir no navegador que o tomcat est\u00e1 rodando, digitar o nome do projeto [ RegrasRMA ] ap\u00f3s a porta 8081 e apertar enter para carregar a p\u00e1gina, como na imagem abaixo. Isso ir\u00e1 gerar o RMA do Blaze no tomcat7, sem a necessidade de estar embarcado no Eclipse. Basta logar e come\u00e7ar a criar suas regras de neg\u00f3cio.","title":"Executar o projeto .WAR [Toncat7]"},{"location":"BLAZE/blaze03/#deploy-rule-server-configuracoes","text":"Agora, de fato, iremos gerar um Deploy de servi\u00e7o de regras, isto \u00e9, iremos gerar uma aplica\u00e7\u00e3o pronta para ser executada. Primeiro, voc\u00ea dever\u00e1 criar uma pasta com o nome de RuleServer dentro da pasta projetos. Ir no Eclipse: Pasta Deploy (voc\u00ea dever\u00e1 criar tr\u00eas arquivos de configura\u00e7\u00e3o). Primeiro arquivo de configura\u00e7\u00e3o: [ Rule Service Definition ] Clicar com o bot\u00e3o direito do mouse sobre a pasta Deploy. New - Deployment Entities - Rule Service Definition. Manter o mesmo nome, por\u00e9m sem os espa\u00e7os e caracteres especiais. Observe o exemplo abaixo: Na aba de DefinicaoDoServicoDeRegras, v\u00e1 em Add... [adicionar...] Em Functional Item [Item Funcional], escolha a op\u00e7\u00e3o entrypoint(decisionInput):DecisionInput Salvar e fazer o Check-in. Segundo arquivo de configura\u00e7\u00e3o: [ Deployment Definition ] Clicar com o bot\u00e3o direito do mouse sobre a pasta Deploy. New - Deployment Entities - Deployment Definition. Manter o mesmo nome, por\u00e9m sem os espa\u00e7os e caracteres especiais. Observe o exemplo abaixo: Na aba de DefinicaoDeImplementacao, em Plataforma de Destino, escolha a op\u00e7\u00e3o Java POJO Web Service . Salvar e fazer o Check-in. Terceiro arquivo de configura\u00e7\u00e3o: Clicar com o bot\u00e3o direito do mouse sobre a pasta Deploy. New - Deployment Entities - System Definition. ------------------------- Manter o mesmo nome, por\u00e9m sem os espa\u00e7os e caracteres especiais [DefinicaoDoSistema]. Na aba de DefinicaoDoSistema: Em Plataforma de Destino, escolha a op\u00e7\u00e3o Java POJO Web Service . Em Fornecedor, escolha a op\u00e7\u00e3o Tomcat8 and later . Salvar e fazer o Check-in.","title":"Deploy [Rule Server] - Configura\u00e7\u00f5es"},{"location":"BLAZE/blaze03/#deploy-rule-server-gerando-arquivos","text":"Copiar o caminho da pasta ruleserver que voc\u00ea criou. No meu caso, a pasta est\u00e1 em: C:\\Blaze\\projetos\\ruleserver. Ir no Eclipse, selecionar o projeto principal e ir na aba Project: Generate Rule Service Deployment [Gerar Implementa\u00e7\u00e3o de Servi\u00e7o de Regras] Obs: o Eclipse ir\u00e1 encontrar as configura\u00e7\u00f5es que acabamos de fazer. [T\u00f3pico - Deploy [Rule Server] - Configura\u00e7\u00f5es]. Next - Next - Selecionar ou colar o caminho da pasta ruleserver - Next. Nesta parte, basta observar se os arquivos selecionados s\u00e3o do tipo aquivo.bat Para deploy em Linux, os arquivos devem ser arquivo.sh Finish. Ao abrir a pasta ruleserver, voc\u00ea poder\u00e1 observar alguns arquivos l\u00e1. Obs: o arquivo DeploymentDocumentation.html \u00e9 uma documenta\u00e7\u00e3o que guia o processo de deploy.","title":"Deploy [Rule Server] - Gerando Arquivos"},{"location":"BLAZE/blaze03/#deploy-rule-server","text":"Agora iremos configurar alguns arquivos que foram gerados pelo processo anterior, na pasta Server. Lembrando que esta pasta se encontra dentro da pasta ruleserver. Configurando o Script [Setenv]. Ir na pasta ruleserver/server. Abrir o arquivo Setenv.bat com o notepad++ Voc\u00ea deve referenciar corretamente os caminhos de: TOMCAT_HOME=C:\\apache-tomcat-8.5.24 e JAVA_HOME=C:\\Java\\jdk Observe a imagem a seguir: Acrescentar o seguinte c\u00f3digo na linha 99 [ set CLASSPATH=%CLASSPATH%;C:\\Blaze\\projetos\\bom-Carro3.jar; ] OBS: Este (C:\\Blaze\\projetos\\bom-Carro3.jar) \u00e9 o caminho do meu arquivo.jar Salvar as altera\u00e7\u00f5es Configurando o Script [War.bat] Abrir o arquivo War.bat no notepad++ Na linha 58, adicionar o c\u00f3digo descrito na imagem abaixo. Aten\u00e7\u00e3o: o caminho que digitei \u00e9 o caminho do meu arquivo bom-Carro3.jar Salvar as altera\u00e7\u00f5es. ------------------------- N\u00e3o se esque\u00e7a de salvar as altera\u00e7\u00f5es! Rodando o Script [Setenv] Ir na pasta ruleserver/server. Digitar cmd na barra de caminhos e apertar enter. Isso ir\u00e1 abrir o cmd na pasta server. Basta digitar Setenv.bat e pressionar enter para executar o arquivo que acabamos de configurar. Rodando o Script [Build.bat] Ainda no cmd do windows (deve ser na mesma janela que voc\u00ea digitou o Server.bat) Digite Build.bat e aperte enter. Este comando ir\u00e1 compilar algumas classes. ------------------------- Rodando o arquivo [War.bat] Ainda no cmd do windows (Deve ser na mesma janela que voc\u00ea digitou o Server.bat e Build.bat) Digite War.bat e aperte enter. Este comando ir\u00e1 gerar uma s\u00e9rie de arquivos, inclusive um arquivo.war dentro da pasta C:\\Blaze\\projetos\\ruleserver\\server\\build. Para este projeto, o nome do arquivo ficou como: DefinicaoDoServicoDeRegrasServer.war Este .war \u00e9 o nosso ruleserver. Ele que vai gerar um up server no tomcat. Fechar o cmd.","title":"Deploy [Rule Server]"},{"location":"BLAZE/blaze03/#gerando-uma-aplicacao-toncat","text":"Startar o Toncat7 pelo arquivo startServer.bat (dando um duplo clique) que est\u00e1 na pasta C:\\Blaze\\projetos\\tomcat7 Copiar o arquivo.war [ DefinicaoDoServicoDeRegrasServer.war ] da pasta C:\\Blaze\\projetos\\ruleserver\\server\\build para a pasta C:\\Blaze\\projetos\\tomcat7\\tomcat7\\webapps Se tudo estiver correto, o arquivo DefinicaoDoServicoDeRegrasServer.war ir\u00e1 se descompactar automaticamente gerando uma pasta de mesmo nome. Ir na pasta C:\\Blaze\\projetos\\ruleserver e abrir o arquivo DeploymentDocumentation.html dando um duplo clique sobre ele. Procurar e copiar o seguinte link WSDL: http://localhost:8080/DefinicaoDoServicoDeRegrasServer/DefinicaoDoServicoDeRegrasService?wsdl Colar o link em seu navegador. Obs: trocar a porta 8080 por 8081. O link ficar\u00e1 assim: http://localhost:8081/DefinicaoDoServicoDeRegrasServer/DefinicaoDoServicoDeRegrasService?wsdl Se tudo ocorreu bem, sua aplica\u00e7\u00e3o retornar\u00e1 um XML assim:","title":"Gerando uma aplica\u00e7\u00e3o Toncat"},{"location":"BLAZE/blaze03/#testando-a-aplicacao-no-soapui","text":"Criar uma pasta [workspaceSoap] dentro da pasta Projetos. Instalar o SoapUI Baixe o SoapUI [SoapUI-x32-5.5.0.exe] do Reposit\u00f3rio que disponibilizei: REPOSIT\u00d3RIO Duplo clique sobre o execut\u00e1vel e ir dando next. O SoapUI abrir\u00e1 sua janela inicial. No SoapUI, v\u00e1 em: File - New Workspace - dar o nome de workspaceSoap Escolher a pasta workspaceSoap que criamos dentro da pasta Projetos. Salvar. Ainda no SoapUI: File - New Soap Project. Aten\u00e7\u00e3o: colar o link WSDL que geramos para o tomcat anteriormente: http://localhost:8081/DefinicaoDoServicoDeRegrasServer/DefinicaoDoServicoDeRegrasService?wsdl O nome do projeto ser\u00e1 gerado automaticamente. O Soap importar\u00e1 o servi\u00e7o e gerar\u00e1 um request. [entrypoint] - Clicando no arquivo: entrypoint/Request1 teremos uma comunica\u00e7\u00e3o com a aplica\u00e7\u00e3o. Basta digitar os dados do cliente no lugar das interroga\u00e7\u00f5es (?) e teremos o output dos dados inseridos. - Para isso, basta digitar os dados e ir no \u00edcone Rodar.","title":"Testando a Aplica\u00e7\u00e3o no SoapUI"},{"location":"BLAZE/blaze03/#consideracoes-finais","text":"Como voc\u00ea pod\u00ea ver, nossa aplica\u00e7\u00e3o \u00e9 bem simples e apresenta v\u00e1rias inconsist\u00eancias como, por exemplo, possuir dados que n\u00e3o est\u00e3o sendo utilizados. Mas nosso objetivo era apenas introduzir o Blaze. Esta aplica\u00e7\u00e3o recebe dois valores principais (idade e renda) e retorna Negado caso a idade seja menor do que 18 ou a renda menor do que R$ 1000. Ou seja, n\u00e3o est\u00e3o aptos a alugar um carro. No exemplo acima, a idade \u00e9 de 22 anos e a renda \u00e9 de R$ 5420, ou seja, \u00e9 um cliente apto a alugar um carro. J\u00e1 no exemplo abaixo, a idade \u00e9 de 16 e a renda de R$ 5420. Mesmo a renda sendo maior do que R$ 1000, o resultado \u00e9 Negado, pois a idade \u00e9 menor do que 18.","title":"Considera\u00e7\u00f5es finais"},{"location":"BLAZE/blaze03/#mais-utoriais-blaze","text":"1 Introdu\u00e7\u00e3o ao Blaze Blaze - Instala\u00e7\u00f5es 2 Utilizando o RMA - Blaze - Utiliza\u00e7\u00e3o 4 T\u00f3picos avan\u00e7ados - Em constru\u00e7\u00e3o. Elaborado por: Jonathan Cardoso Lopes Domingos 21/10/2019","title":"Mais utoriais - Blaze"},{"location":"DATA-SCIENCE/perceptron/","text":"MODELO PERCEPTRON Neste tutorial iremos elaborar um modelo de aprendizagem Supervisionada chamado perceptron simples. Iremos utilizar os dados do dataset iris, mais especificamente os dados de duas tipagem de plantas, a Iris Setosa e a Iris versicolor.Estamos utilizando dois dados de sa\u00edda pois iremos fazer uma an\u00e1lise de classifica\u00e7\u00e3o linear simples, ou seja, com a fun\u00e7\u00e3o de ativa\u00e7\u00e3o degrau bipolar. Como estamos utilizando um regress\u00e3o simples, iremos utilizar apenas duas caracter\u00edsticas de entradas de dados. Comprimento da Sepala e Comprimento da Petala. Modelo: Iris Data Set - Informa\u00e7\u00f5es dos dados: sepal length in cm = Comprimento da Sepala sepal width in cm = Largura da Sepala petal length in cm = Comprimento da Petala petal width in cm = Larguta da Petala class: -- Iris Setosa -- Iris Versicolour -- Iris Virginica Manipulando os Dados In [01]: import numpy as np import pandas as pd import matplotlib.pyplot as plt from sklearn import model_selection # Carregando o conjunto iris dataset do link oficial In [02]: dataIris = pd.read_csv('https://archive.ics.uci.edu/ml/' 'machine-learning-databases/iris/iris.data', header=None) In [03]: dataIris[:5] Out[03]: In [04]: dataIris.shape Out[04]: (150, 5) # Obtendo o vetor de alvos [y] Iris Setosa e Iris versicolor. In [05]: y = dataIris.iloc[0:100, 4].values In [06]: y Out[06]: array(['Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor'], dtype=object) In [07]: y.shape Out[07]: (100,) #Atribuindo um r\u00f3tulo (num\u00e9rico) as sa\u00eddas. #Iris Setosa == -1 e Iris versicolorm 1. In [08]: y = np.where(y == 'Iris-setosa', -1, 1) In [09]: y Out[09]: array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) #Separendo a vari\u00e1vel de entrada do modelo. Comprimento da sepala e da petala. In [10]: x = dataIris.iloc[0:100, [0, 2]].values In [11]: x[0:10] Out[11]: array([[5.1, 1.4], [4.9, 1.4], [4.7, 1.3], [4.6, 1.5], [5. , 1.4], [5.4, 1.7], [4.6, 1.4], [5. , 1.5], [4.4, 1.4], [4.9, 1.5]]) # Adicionando a coluna do bias (necess\u00e1rio em algoritmos baseados em perceptron/gradiente) In [12]: x = np.c_[np.ones(x.shape[0]), x] In [13]: x[0:10] Out[13]: array([[1. , 5.1, 1.4], [1. , 4.9, 1.4], [1. , 4.7, 1.3], [1. , 4.6, 1.5], [1. , 5. , 1.4], [1. , 5.4, 1.7], [1. , 4.6, 1.4], [1. , 5. , 1.5], [1. , 4.4, 1.4], [1. , 4.9, 1.5]]) In [14]: x.shape Out[14]: (100, 3) # Visualizando os dados (estamos pulando a coluna do bias) In [15]: plt.scatter(x[:50, 1], x[:50, 2], color='red', marker='o', label='setosa') plt.scatter(x[50:100, 1], x[50:100, 2], color='blue', marker='x', label='versicolor') plt.xlabel('largura da s\u00e9pala [cm]') plt.ylabel('largura da p\u00e9tala [cm]') plt.legend(loc='upper left') plt.show() Out[15]: #Dividindo o dataset em treino e teste. In [16]: x_train, x_test, y_train, y_test = model_selection.train_test_split(x, y, test_size=0.2, random_state=0) In [17]: x_train[:5] Out[17]: array([[1. , 5. , 1.6], [1. , 6. , 4. ], [1. , 4.6, 1.5], [1. , 6.1, 4. ], [1. , 4.8, 1.4]]) In [18]: x_train.shape Out[18]: (80, 3) In [19]: y_train Out[19]: array([-1, 1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, -1, 1, -1, -1, -1, 1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, -1]) In [20]: y_train.shape Out[20]: (80,) Fun\u00e7\u00e3 (Ativa\u00e7\u00e3o) - Somat\u00f3ria #Fun\u00e7\u00e3o do \u0177 ou h In [21]: def h(x, thetas): #A fun\u00e7\u00e3o dot faz multiplica\u00e7\u00e3o de matriz #x.dot(thetas) \u00e9 o mesmo que \u03a3(Xi.Wi) #a fun\u00e7\u00e3o where faz o papel da fun\u00e7\u00e3o degrau. Se o #output de x.dot(thetas) for maior que 0.0 retorne 1 #se for menor retorne -1. return np.where(x.dot(thetas) >= 0.0, 1, -1) Fu\u00e7\u00e3o de Pesos In [22]: def perceptron(x, y, iterations, alpha): #Definindo os pesos = array([0., 0., 0.]) thetas = np.zeros(x_train.shape[1]) #Repetir por dez vezes for i in range(iterations): #Para cada entrada x e sa\u00edda y. for xi, yi in zip(x_train, y_train): #F\u00f3rmula do perceptron para ajuste dos pesos # [w = w + \u03b1 * Et . xi] # [Et = yi - \u0177] para \u0177 = h # \u0177 ou h (\u00e9 o y estimado, ou seja, ) thetas = thetas + alpha * (yi - h(xi, thetas)) * xi return thetas Treinando Modelo: Obten\u00e7\u00e3o de pesos # Treinando nosso modelo... #Itera\u00e7\u00f5es In [23]: iterations = 10 #Coef-Aprend In [24]: alpha = 0.01 #Chamada-Func #Thetas \u00e9 o mesmo que pesos ou w In [25]: thetas = perceptron(x_train, y_train, iterations, alpha) #Pesos de W balanceados. (Equa\u00e7\u00e3o da reta) In [26]: thetasFinal = thetas In [27]: print(thetasFinal) Out[27]: [-0.04 -0.112 0.216] Testando Modelo: Predi\u00e7\u00e3o de valores In [28]: x_test.shape Out[28]: (20, 3) In [29]: x_test Out[29]: array([[1. , 5. , 1.6], [1. , 6.7, 4.7], [1. , 4.7, 1.3], [1. , 5.7, 4.5], [1. , 6.6, 4.4], [1. , 5. , 3.3], [1. , 5.4, 1.3], [1. , 6.1, 4.7], [1. , 6.5, 4.6], [1. , 5.7, 4.2], [1. , 5.5, 4. ], [1. , 5.8, 4. ], [1. , 6. , 4.5], [1. , 4.3, 1.1], [1. , 5. , 1.5], [1. , 4.8, 1.6], [1. , 4.6, 1. ], [1. , 4.8, 1.9], [1. , 5.5, 1.4], [1. , 4.4, 1.4]]) In [30]: y_test Out[30]: array([-1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1]) Fun\u00e7\u00e3o Ativa\u00e7\u00e3o - Teste #Teste In [31]: def hFinal(x_test, thetasFinal): return np.where(x_test.dot(thetasFinal) >= 0.0, 1, -1) In [32]: y_est = hFinal(x_test, thetasFinal) In [33]: y_est == y_test Out[33]: array([ True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]) Deletando colunas de uma matriz(array) numpay. import numpy as np a = np.arange(12).reshape(3, 4) print(a) # [[ 0 1 2 3] # [ 4 5 6 7] # [ 8 9 10 11]] print(np.delete(a, 1, 0)) # [[ 0 1 2 3] # [ 8 9 10 11]] print(np.delete(a, 1, 1)) # [[ 0 2 3] # [ 4 6 7] # [ 8 10 11]] # print(np.delete(a, 1, 2)) # AxisError: axis 2 is out of bounds for array of dimension 2 Referencias: Python Machine Learn - Sebastian Raschka https://www.amazon.com.br/Python-Machine-Learning-Sebastian-Raschka/dp/1789955750/ref=pd_sbs_14_t_0/146-7290337-7783406?_encoding=UTF8&pd_rd_i=1789955750&pd_rd_r=5750d573-f6c1-4f84-acf3-a26698a9fa4c&pd_rd_w=RXeqA&pd_rd_wg=5MTyX&pf_rd_p=adb10074-dc46-4d48-9abd-ebbbd99776aa&pf_rd_r=5X5JXYVPCJ010JQ0EEV3&psc=1&refRID=5X5JXYVPCJ010JQ0EEV3 http://wiki.icmc.usp.br/images/7/7b/Perceptron.pdf https://juliocprocha.blog/2017/07/27/perceptron-para-classificacao-passo-a-passo/","title":"Perceptron"},{"location":"DATA-SCIENCE/perceptron/#modelo-perceptron","text":"Neste tutorial iremos elaborar um modelo de aprendizagem Supervisionada chamado perceptron simples. Iremos utilizar os dados do dataset iris, mais especificamente os dados de duas tipagem de plantas, a Iris Setosa e a Iris versicolor.Estamos utilizando dois dados de sa\u00edda pois iremos fazer uma an\u00e1lise de classifica\u00e7\u00e3o linear simples, ou seja, com a fun\u00e7\u00e3o de ativa\u00e7\u00e3o degrau bipolar. Como estamos utilizando um regress\u00e3o simples, iremos utilizar apenas duas caracter\u00edsticas de entradas de dados. Comprimento da Sepala e Comprimento da Petala. Modelo: Iris Data Set - Informa\u00e7\u00f5es dos dados: sepal length in cm = Comprimento da Sepala sepal width in cm = Largura da Sepala petal length in cm = Comprimento da Petala petal width in cm = Larguta da Petala class: -- Iris Setosa -- Iris Versicolour -- Iris Virginica","title":"MODELO PERCEPTRON"},{"location":"DATA-SCIENCE/perceptron/#manipulando-os-dados","text":"In [01]: import numpy as np import pandas as pd import matplotlib.pyplot as plt from sklearn import model_selection # Carregando o conjunto iris dataset do link oficial In [02]: dataIris = pd.read_csv('https://archive.ics.uci.edu/ml/' 'machine-learning-databases/iris/iris.data', header=None) In [03]: dataIris[:5] Out[03]: In [04]: dataIris.shape Out[04]: (150, 5) # Obtendo o vetor de alvos [y] Iris Setosa e Iris versicolor. In [05]: y = dataIris.iloc[0:100, 4].values In [06]: y Out[06]: array(['Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor'], dtype=object) In [07]: y.shape Out[07]: (100,) #Atribuindo um r\u00f3tulo (num\u00e9rico) as sa\u00eddas. #Iris Setosa == -1 e Iris versicolorm 1. In [08]: y = np.where(y == 'Iris-setosa', -1, 1) In [09]: y Out[09]: array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) #Separendo a vari\u00e1vel de entrada do modelo. Comprimento da sepala e da petala. In [10]: x = dataIris.iloc[0:100, [0, 2]].values In [11]: x[0:10] Out[11]: array([[5.1, 1.4], [4.9, 1.4], [4.7, 1.3], [4.6, 1.5], [5. , 1.4], [5.4, 1.7], [4.6, 1.4], [5. , 1.5], [4.4, 1.4], [4.9, 1.5]]) # Adicionando a coluna do bias (necess\u00e1rio em algoritmos baseados em perceptron/gradiente) In [12]: x = np.c_[np.ones(x.shape[0]), x] In [13]: x[0:10] Out[13]: array([[1. , 5.1, 1.4], [1. , 4.9, 1.4], [1. , 4.7, 1.3], [1. , 4.6, 1.5], [1. , 5. , 1.4], [1. , 5.4, 1.7], [1. , 4.6, 1.4], [1. , 5. , 1.5], [1. , 4.4, 1.4], [1. , 4.9, 1.5]]) In [14]: x.shape Out[14]: (100, 3) # Visualizando os dados (estamos pulando a coluna do bias) In [15]: plt.scatter(x[:50, 1], x[:50, 2], color='red', marker='o', label='setosa') plt.scatter(x[50:100, 1], x[50:100, 2], color='blue', marker='x', label='versicolor') plt.xlabel('largura da s\u00e9pala [cm]') plt.ylabel('largura da p\u00e9tala [cm]') plt.legend(loc='upper left') plt.show() Out[15]: #Dividindo o dataset em treino e teste. In [16]: x_train, x_test, y_train, y_test = model_selection.train_test_split(x, y, test_size=0.2, random_state=0) In [17]: x_train[:5] Out[17]: array([[1. , 5. , 1.6], [1. , 6. , 4. ], [1. , 4.6, 1.5], [1. , 6.1, 4. ], [1. , 4.8, 1.4]]) In [18]: x_train.shape Out[18]: (80, 3) In [19]: y_train Out[19]: array([-1, 1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, -1, 1, -1, -1, -1, 1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, -1]) In [20]: y_train.shape Out[20]: (80,)","title":"Manipulando os Dados"},{"location":"DATA-SCIENCE/perceptron/#funca-ativacao-somatoria","text":"#Fun\u00e7\u00e3o do \u0177 ou h In [21]: def h(x, thetas): #A fun\u00e7\u00e3o dot faz multiplica\u00e7\u00e3o de matriz #x.dot(thetas) \u00e9 o mesmo que \u03a3(Xi.Wi) #a fun\u00e7\u00e3o where faz o papel da fun\u00e7\u00e3o degrau. Se o #output de x.dot(thetas) for maior que 0.0 retorne 1 #se for menor retorne -1. return np.where(x.dot(thetas) >= 0.0, 1, -1)","title":"Fun\u00e7\u00e3 (Ativa\u00e7\u00e3o) - Somat\u00f3ria"},{"location":"DATA-SCIENCE/perceptron/#fucao-de-pesos","text":"In [22]: def perceptron(x, y, iterations, alpha): #Definindo os pesos = array([0., 0., 0.]) thetas = np.zeros(x_train.shape[1]) #Repetir por dez vezes for i in range(iterations): #Para cada entrada x e sa\u00edda y. for xi, yi in zip(x_train, y_train): #F\u00f3rmula do perceptron para ajuste dos pesos # [w = w + \u03b1 * Et . xi] # [Et = yi - \u0177] para \u0177 = h # \u0177 ou h (\u00e9 o y estimado, ou seja, ) thetas = thetas + alpha * (yi - h(xi, thetas)) * xi return thetas","title":"Fu\u00e7\u00e3o de Pesos"},{"location":"DATA-SCIENCE/perceptron/#treinando-modelo-obtencao-de-pesos","text":"# Treinando nosso modelo... #Itera\u00e7\u00f5es In [23]: iterations = 10 #Coef-Aprend In [24]: alpha = 0.01 #Chamada-Func #Thetas \u00e9 o mesmo que pesos ou w In [25]: thetas = perceptron(x_train, y_train, iterations, alpha) #Pesos de W balanceados. (Equa\u00e7\u00e3o da reta) In [26]: thetasFinal = thetas In [27]: print(thetasFinal) Out[27]: [-0.04 -0.112 0.216]","title":"Treinando Modelo: Obten\u00e7\u00e3o de pesos"},{"location":"DATA-SCIENCE/perceptron/#testando-modelo-predicao-de-valores","text":"In [28]: x_test.shape Out[28]: (20, 3) In [29]: x_test Out[29]: array([[1. , 5. , 1.6], [1. , 6.7, 4.7], [1. , 4.7, 1.3], [1. , 5.7, 4.5], [1. , 6.6, 4.4], [1. , 5. , 3.3], [1. , 5.4, 1.3], [1. , 6.1, 4.7], [1. , 6.5, 4.6], [1. , 5.7, 4.2], [1. , 5.5, 4. ], [1. , 5.8, 4. ], [1. , 6. , 4.5], [1. , 4.3, 1.1], [1. , 5. , 1.5], [1. , 4.8, 1.6], [1. , 4.6, 1. ], [1. , 4.8, 1.9], [1. , 5.5, 1.4], [1. , 4.4, 1.4]]) In [30]: y_test Out[30]: array([-1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1]) Fun\u00e7\u00e3o Ativa\u00e7\u00e3o - Teste #Teste In [31]: def hFinal(x_test, thetasFinal): return np.where(x_test.dot(thetasFinal) >= 0.0, 1, -1) In [32]: y_est = hFinal(x_test, thetasFinal) In [33]: y_est == y_test Out[33]: array([ True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True])","title":"Testando Modelo: Predi\u00e7\u00e3o de valores"},{"location":"DATA-SCIENCE/perceptron/#deletando-colunas-de-uma-matrizarray-numpay","text":"import numpy as np a = np.arange(12).reshape(3, 4) print(a) # [[ 0 1 2 3] # [ 4 5 6 7] # [ 8 9 10 11]] print(np.delete(a, 1, 0)) # [[ 0 1 2 3] # [ 8 9 10 11]] print(np.delete(a, 1, 1)) # [[ 0 2 3] # [ 4 6 7] # [ 8 10 11]] # print(np.delete(a, 1, 2)) # AxisError: axis 2 is out of bounds for array of dimension 2","title":"Deletando colunas de uma matriz(array) numpay."},{"location":"DATA-SCIENCE/perceptron/#referencias","text":"Python Machine Learn - Sebastian Raschka https://www.amazon.com.br/Python-Machine-Learning-Sebastian-Raschka/dp/1789955750/ref=pd_sbs_14_t_0/146-7290337-7783406?_encoding=UTF8&pd_rd_i=1789955750&pd_rd_r=5750d573-f6c1-4f84-acf3-a26698a9fa4c&pd_rd_w=RXeqA&pd_rd_wg=5MTyX&pf_rd_p=adb10074-dc46-4d48-9abd-ebbbd99776aa&pf_rd_r=5X5JXYVPCJ010JQ0EEV3&psc=1&refRID=5X5JXYVPCJ010JQ0EEV3 http://wiki.icmc.usp.br/images/7/7b/Perceptron.pdf https://juliocprocha.blog/2017/07/27/perceptron-para-classificacao-passo-a-passo/","title":"Referencias:"},{"location":"DATA-SCIENCE/pyScrap4/","text":"Web Scraping com Python - A\u00e7\u00f5es do Bradesco Elaborado por: Jonathan Cardoso Lopes Domingos 02/01/2020 O seguinte web screping \u00e9 apenas um material de consulta r\u00e1pida, aqui n\u00e3o apresenta nenhuma an\u00e1lise aprofundade sobre o assunto. Neste material apresento um scraping das a\u00e7\u00f5es do Bradesco. Ambientando Selenium no Windows. Baixar e instalar os programas/pacotes abaixo: Selenium: pip install -U selenium Drivers para browsers: Firefox: https://github.com/mozilla/geckodriver/releases Depois de baixar o arquivo, copie geckodriver.exe para o diret\u00f3rio C: ele ficar\u00e1 assim: \u201cC:\\geckodriver.exe\u201d. Ir em Configura\u00e7\u00f5es Avan\u00e7adas do Sistema => propriedades do sistema => Vari\u00e1veis de ambiente => Vari\u00e1veis de Sistema => Editar => Novo => preencha o caminho do arquivo \u201cC:\\geckodriver.exe\u201d no path. (OBS: path do sistema e n\u00e3o do usu\u00e1rio). Em todos os scripts Selenium incluir o c\u00f3digo abaixo: from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary binary = FirefoxBinary(\u2018C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\u2019) driver = webdriver.Firefox(firefox_binary=binary, executable_path=r\u2019C:\\\\geckodriver.exe\u2019) driver.get(\u2018https://www.google.com') # O modulo time aqui foi utilizado para esperar o carregamento das paginas atraves do firefox # Este m\u00f3dulo n\u00e3o \u00e9 necess\u00e1rio no jupyter lab #import time # o modulo Select sera utilizado para interagir com a caixa de selecao In [1]: from selenium.webdriver.support.ui import Select # modulo utilizado para webScreping Python In [2]: from bs4 import BeautifulSoup # o modulo webdriver e necessario para definir qual navegador sera utilizado para fazer a automacao In [3]: from selenium import webdriver Executa o Navegador In [4]: from selenium.webdriver.firefox.firefox_binary import FirefoxBinary In [5]: binary = FirefoxBinary(\"C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\") # a linha abaixo define qual e o navegador que queremos utilizar. In [6]: driver = webdriver.Firefox(firefox_binary=binary, executable_path=r'C:\\\\geckodriver.exe') Insere o endere\u00e7o WEB # abaixo foi definido qual e o site que quero acessar In [7]: driver.get(\"https://economia.uol.com.br/cotacoes/bolsas/acoes/bvsp-bovespa/bbdc4-sa\") Manipulando a P\u00e1gina # Selecionando o bot\u00e3o que iremos clicar - (Listagem de dados) In [8]: btn10 = driver.find_element_by_css_selector(\".btn-mode > span:nth-child(2)\") # Clicando no bot\u00e3o da p\u00e1gina In [9]: btn10.click() # Selecionando o bot\u00e3o que iremos clicar - (Hist\u00f3rico) In [10]: btn20 = driver.find_element_by_css_selector(\".btn-day > span:nth-child(2)\") # Clicando no bot\u00e3o da p\u00e1gina In [11]: btn20.click() # Selecionando o bot\u00e3o que iremos clicar - (A\u00e7\u00f5es/Ano) In [12]: btn30 = driver.find_element_by_css_selector(\".btn-day-table > span:nth-child(4)\") # Clicando no bot\u00e3o da p\u00e1gina In [13]: btn30.click() Raspando os dados #Armazenando, por um \"id\", a tabela de dados da p\u00e1gina em uma vari\u00e1vel. #.chart-body In [14]: dados = driver.find_element_by_css_selector(\".mod-table\") In [15]: dados Out[15]: <selenium.webdriver.firefox.webelement.FirefoxWebElement (session=\"52a04cdd-5f82-4051-927e-1ded929cbb24\", element=\"748f7f99-dc8d-4f17-a9b6-c01dc555ea76\")> #Pegando os atributos HTML do objeto armazenado na variavel dados. In [16]: html = dados.get_attribute(\"innerHTML\") # Amostra dos atributos In [17]: html Out[17]: '<div class=\"box-scroll\"><div class=\"scroll\" data-scroll=\"{&quot;breakpoints&quot;:[&quot;xs&quot;, &quot;sm&quot;, &quot;md&quot;, &quot;lg&quot;]}\" uolbpack-initialized=\"true\" tabindex=\"0\" style=\"height: 428px;\"><div class=\"scroll-content scroll-animate\"><span class=\"scrollReset\"></span><!-- ngIf: !error --><div class=\"charts-mod-table ng-scope\" ng-if=\"!error\" style=\"display: inline;\"> <div class=\"chart-loading loading-history\" style=\"display: none;\"><div class=\"loading\"> <svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" class=\"loading uil-ring\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"none\" class=\"bk\"></rect><defs><filter id=\"uil-ring-shadow\" x=\"-100%\" y=\"-100%\" width=\"300%\" height=\"300%\"><feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\"></feOffset><feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"0\"></feGaussianBlur><feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"></feBlend></filter></defs><path d=\"M10,50c0,0,0,0.5,0.1,1.4c0,0.5,0.1,1,0.2,1.7c0,0.3,0.1,0.7,0.1,1.1c0.1,0.4,0.1,0.8,0.2,1.2c0.2,0.8,0.3,1.8,0.5,2.8 c0.3,1,0.6,2.1,0.9,3.2c0.3,1.1,0.9,2.3,1.4,3.5c0.5,1.2,1.2,2.4,1.8,3.7c0.3,0.6,0.8,1.2,1.2,1.9c0.4,0.6,0.8,1.3,1.3,1.9 c1,1.2,1.9,2.6,3.1,3.7c2.2,2.5,5,4.7,7.9,6.7c3,2,6.5,3.4,10.1,4.6c3.6,1.1,7.5,1.5,11.2,1.6c4-0.1,7.7-0.6,11.3-1.6 c3.6-1.2,7-2.6,10-4.6c3-2,5.8-4.2,7.9-6.7c1.2-1.2,2.1-2.5,3.1-3.7c0.5-0.6,0.9-1.3,1.3-1.9c0.4-0.6,0.8-1.3,1.2-1.9 c0.6-1.3,1.3-2.5,1.8-3.7c0.5-1.2,1-2.4,1.4-3.5c0.3-1.1,0.6-2.2,0.9-3.2c0.2-1,0.4-1.9,0.5-2.8c0.1-0.4,0.1-0.8,0.2-1.2 c0-0.4,0.1-0.7,0.1-1.1c0.........etc... #Transformando em objeto html para BS4. In [18]: soup = BeautifulSoup(html, \"html.parser\") # Amostra dos atributos In [19]: soup Out[19]: <div class=\"box-scroll\"><div class=\"scroll\" data-scroll='{\"breakpoints\":[\"xs\", \"sm\", \"md\", \"lg\"]}' style=\"height: 428px;\" tabindex=\"0\"uolbpack-initialized=\"true\"><div class=\"scroll-content scroll-animate\"><span class=\"scrollReset\"></span><!-- ngIf: !error --><div class=\"charts-mod-table ng-scope\" ng-if=\"!error\" style=\"display: inline;\"> <div class=\"chart-loading loading-history\" style=\"display: none;\"><div class=\"loading\"> <svg class=\"loading uil-ring\" height=\"100px\" preserveaspectratio=\"xMidYMid\" viewbox=\"0 0 100 100\" width=\"100px\" xmlns=\"http://www.w3.org/2000/svg\"><rect class=\"bk\" fill=\"none\" height=\"100\" width=\"100\" x=\"0\" y=\"0\"></rect><defs><filter height=\"300%\" id=\"uil-ring-shadow\" width=\"300%\" x=\"-100%\" y=\"-100%\"><feoffset dx=\"0\" dy=\"0\" in=\"SourceGraphic\" result=\"offOut\"></feoffset><fegaussianblur in=\"offOut\" result=\"blurOut\" stddeviation=\"0\"></fegaussianblur><feblend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"></feblend></filter></defs><path d=\"M10,50c0,0,0,0.5,0.1,1.4c0,0.5,0.1,,0.2,1.7c0,0.3,0.1,0.7,0.1,1.1c0.1,0.4,0.1,0.8,0.2,1.2c0.2,0.8,0.3,1.8,0.5,2.8 c0.3,1,0.6,2.1,0.9,3.2c0.3,1.1,0.9,2.3,1.4,3.5c0.51.2,1.2,2.4,1.8,3.7c0.3,0.6,0.8,1.2,1.2,1.9c0.4,0.6,0.8,1.3,1.3,1.9 c1,1.2,1.9,2.6,3.1,3.7c2.2,2.5,5,4.7,7.9,6.7c3,2,6.5,3.4,10.14.6c3.6,1.1,7.5,1.5,11.2,1.6c4-0.1,7.7-0.6,11.3-1.6 c3.6-1.2,7-2.6,10-4.6c3-2,5.8-4.2,7.9-6.7c1.2-1.2,2.1-2.5,3.1-3.7c0.5-0.6,0.9-1.3,1.3-1.9c0.4-0.6,0.8-1.3,1.2-1.9 c0.6-1.3,1.3-2.5,1.8-3.7c0.5-1.2..................etc............ #Filtrando os dados, deixando somente os dados que est\u00e3o na tabela. In [20]: table = soup.select_one(\"table\") # Amostra dos atributos In [21]: table Out[21]: <table class=\"tabela-historic\"><thead> <tr><th class=\"data\">DATA</th><th class=\"compra\">COTA\u00c7\u00c3O</th><th class=\"venda hidden-xs\">VOLUME</th><th class=\"ultimapct hidden-xs\"> </th><th class=\"ultima\" colspan=\"2\">VARIA\u00c7\u00c3O</th><th class=\"max hidden-xs hidden-sm hidden-md\">M\u00c1XIMO</th><th class=\"min hidden-xs hidden-sm hidden-md\">M\u00cdNIMO</th></tr> </thead><tbody><!-- ngRepeat: item in dataHistory.docs --><tr class=\"ng-scope\" ng-repeat=\"item in dataHistory.docs\"><td class=\"data ng-binding\" ng-bind=\"item.date\">26/12/2019 00:00</td><td class=\"compra ng-binding\" ng-bind=\"item.bidvalue\">36,36</td><td class=\"venda hidden-xs ng-binding\" ng-bind=\"item.askvalue\">10.453.500</td><td class=\"ultimapct ng-binding alta\" ng-bind=\"(item.variationpercentbidView) + '%'\" ng-class=\"{'alta': item.variationpercentbid &gt;= 0, 'baixa': item.variationpercentbid &lt; 0}\">1,25%</td><td class=\"ultima hidden-xs ng-binding alta\" ng-bind=\"item.variationbidView\" ng-class=\"{'alta': item.variationbid &gt;= 0, 'baixa': item.variationbid &lt; 0}\">0,45</td><td class=\"max hidden-xs hidden-sm hidden-md ng-binding\" ng-bind=\"item.maxbid\">36,49</td><td class=\"min hidden-xs hidden-sm hidden-md ng-binding\" ng-bind=\"item.minbid\">35,82</td></tr><!-- end ngRepeat: item in dataHistory.docs --><tr class=\"ng-scope\" ng-repeat=\"item in dataHistory.docs\"><td class=\"data ng-binding\" ng-bind=\"item.date\">23/12/2019 00:00</td><td class=\"compra ng-binding\" ng-bind=\"item.bidvalue\">35,91</td><td class=\"venda hidden-xs ng-binding\" ng-bind=\"item.askvalue\">10.267.900</td><td class=\"ultimapct ng-binding alta\" ng-bind=\"(item.variationpercentbidView) + '%'\" ng-class=\"{'alta': item.variationpercentbid &gt;= 0, 'baixa': item.var...................etc............... Cabe\u00e7alho da Tabela O objetivo \u00e9 retirar os itens que fazem parte do header <table class=\"tabela-historic\"> <thead> <tr> <th class=\"data\">DATA</th> <th class=\"compra\">COTA\u00c7\u00c3O</th> <th class=\"venda hidden-xs\">VOLUME</th> <th class=\"ultimapct hidden-xs\"> </th> <th class=\"ultima\" colspan=\"2\">VARIA\u00c7\u00c3O</th> <th class=\"max hidden-xs hidden-sm hidden-md\">M\u00c1XIMO</th> <th class=\"min hidden-xs hidden-sm hidden-md\">M\u00cdNIMO</th> </tr> </thead #Armazenando os t\u00edtulos das colunas da tabela em uma vari\u00e1vel headers In [22]: headers = [header.text for header in table.select(\"th\")] In [23]: headers Out[23]: ['DATA', 'COTA\u00c7\u00c3O', 'VOLUME', '\\xa0', 'VARIA\u00c7\u00c3O', 'M\u00c1XIMO', 'M\u00cdNIMO'] Corpo da Tabela O objetivo \u00e9 retirar os itens que fazem parte do corpo da tabela #Armazenando os dados da tabela em uma vari\u00e1vel data1 In [24]: data1 = [d.text for d in table.select (\"tbody > tr > td\")] #Imprimindo uma amostra dos primeiros 20 dados #Descobrindo o padr\u00e3o de 7 #A cada 7 dados a data se repete In [25]: data1[:20] Out[25]: ['27/12/2019 00:00', '36,22', '10.404.000', '-0,39%', '-0,14', '36,65', '36,10', '26/12/2019 00:00', '36,36', '10.453.500', '1,25%', '0,45', '36,49', '35,82', '23/12/2019 00:00', '35,91', '10.267.900', '0,62%', '0,22', '35,92'] #Imprimindo o total de dados In [26]: len(data1) Out[26]: 1729 #Achando o n\u00famero de grupo(linhas) do dataset In [27]: len(data1)/7 Out[27]: 247.0 In [28]: print(data1[0]) Out[28]: 27/12/2019 00:00 In [29]: print(data1[1]) Out[29]: 36,22 Organizando a Matriz O objetivo \u00e9 organizar os dados para transformar uma matriz em um dataFrame(Tabela Python) #Dividindo a lista de dados extra\u00eddos da tabela em sublistas In [30]: n = 247 splited = [] len_l = len(data1) for i in range(n): start = int(i*len_l/n) end = int((i+1)*len_l/n) splited.append(data1[start:end]) #Imprimindo os 5 primeiros conjuntos. #Observar se o grupo corresponde a primeira linha do dataset no site. In [31]: splited[:5] Out[31]: [['27/12/2019 00:00', '36,22', '10.404.000', '-0,39%', '-0,14', '36,65', '36,10'], ['26/12/2019 00:00', '36,36', '10.453.500', '1,25%', '0,45', '36,49', '35,82'], ['23/12/2019 00:00', '35,91', '10.267.900', '0,62%', '0,22', '35,92', '35,48'], ['20/12/2019 00:00', '35,69', '22.379.200', '-0,78%', '-0,28', '35,93', '35,46'], ['19/12/2019 00:00', '36,45', '32.951.700', '1,84%', '0,66', '36,45', '35,68']] #Fazer altera\u00e7\u00e3o no array de header In [32]: headers Out[32]: ['DATA', 'COTA\u00c7\u00c3O', 'VOLUME', '\\xa0', 'VARIA\u00c7\u00c3O', 'M\u00c1XIMO', 'M\u00cdNIMO'] #Corrigindo o t\u00edtulo da tabela '\\xa0' --> VARIA\u00c7\u00c3O-% In [33]: headers[3]=\"VARIA\u00c7\u00c3O(%)\" In [34]: headers Out[34]: ['DATA', 'COTA\u00c7\u00c3O', 'VOLUME', 'VARIA\u00c7\u00c3O(%)', 'VARIA\u00c7\u00c3O', 'M\u00c1XIMO', 'M\u00cdNIMO'] Matriz para DataFrame In [35]: import pandas as pd In [36]: import numpy as np # Transformando a lista de dados e t\u00edtulos em um dataFrame. In [37]: df = pd.DataFrame(np.array(splited).reshape(247,7), columns = list(headers)) In [37]: df Out[37]: Preperando os dados In [38]: df.shape Out[38]:(247, 7) In [39]: df.dtypes Out[39]: DATA object COTA\u00c7\u00c3O object VOLUME object VARIA\u00c7\u00c3O(%) object VARIA\u00c7\u00c3O object M\u00c1XIMO object M\u00cdNIMO object dtype: object In [40]: df['M\u00c1XIMO'] Out[40]: 0 36,65 1 36,49 2 35,92 3 35,93 4 36,45 ... 242 41,20 243 41,29 244 41,27 245 40,89 246 40,79 Name: M\u00c1XIMO, Length: 247, dtype: object Alguns modelos que podem transformar object em numeric. #Valores faltantes completados com NaN (float64) pd.to_numeric(dataName, errors='coerce') #Valores faltantes completados com 0 (float64) pd.to_numeric(dataName, errors='coerce').fillna(0, downcast='infer') #Valores transformados em (inteiro32) pd.to_numeric(s, errors='coerce').astype('Int32') #Valores faltantes completados com NaN (float64) #S\u00f3 altera valores objetos, valores que s\u00e3o int permanecem. df2 = dataName.apply(pd.to_numeric, errors='coerce') #Alterando a coluna maximo bradesco02 = df.M\u00c1XIMO.astype('int64') #Outras Formas df.transform(pd.to_numeric, errors='coerce') df[cols] = df[cols].apply(pd.to_numeric, errors='coerce') pd.Series([1,2,3,4,'.']).convert_objects(convert_numeric=True) Object to Numeric #Primeira tentaiva de transformar os dados que est\u00e3o em objeto. #Transformar em float In [41]: bradesco = df.apply(pd.to_numeric, errors='coerce') #Dados transformados In [42]: bradesco.dtypes Out[42]: DATA float64 COTA\u00c7\u00c3O float64 VOLUME float64 VARIA\u00c7\u00c3O(%) float64 VARIA\u00c7\u00c3O float64 M\u00c1XIMO float64 M\u00cdNIMO float64 dtype: object #N\u00e3o deu certo pois existem caracteres especiais que precisam ser tratados In [43]: bradesco Out[43]: Tratando Caracteres Especiais In [44]: df Out[44]: In [45]: bradescoData = df.copy() Out[45]: bradescoData exemplo de utiliza\u00e7\u00e3o do m\u00e9todo extract Evento: COLUNA [14729\u201315236] [14823\u2013?] [14618\u201315145] Usando Regex: # remover os colchetes removColch = data['COLUNA'].str.extract('\\[(.*?)\\]', expand=False) #Manter apenas os 5 primeiros n\u00fameros extrNume = removColch.str.extract('(\\d{5})', expand=False) #Adicionar a nova coluna no data data['COLUNA'] = pd.to_numeric(extrNume) #Removendo valores duplicados data.duplicated() data.drop_duplicates() M\u00e9todo Replace In [46]: bradescoData[\"COTA\u00c7\u00c3O\"] = [x.replace(\",\", \".\") for x in bradescoData[\"COTA\u00c7\u00c3O\"]] In [47]: bradescoData[\"COTA\u00c7\u00c3O\"] = bradescoData[\"COTA\u00c7\u00c3O\"].astype(float) In [48]: bradescoData[\"VARIA\u00c7\u00c3O\"] = [x.replace(\",\", \".\") for x in bradescoData[\"VARIA\u00c7\u00c3O\"]] In [49]: bradescoData[\"VARIA\u00c7\u00c3O\"] = bradescoData[\"VARIA\u00c7\u00c3O\"].astype(float) In [50]: bradescoData[\"M\u00c1XIMO\"] = [x.replace(\",\", \".\") for x in bradescoData[\"M\u00c1XIMO\"]] In [51]: bradescoData[\"M\u00c1XIMO\"] = bradescoData[\"M\u00c1XIMO\"].astype(float) In [52]: bradescoData[\"M\u00cdNIMO\"] = [x.replace(\",\", \".\") for x in bradescoData[\"M\u00cdNIMO\"]] In [53]: bradescoData[\"M\u00cdNIMO\"] = bradescoData[\"M\u00cdNIMO\"].astype(float) In [54]: bradescoData[\"VOLUME\"] = [x.replace(\".\", \"\") for x in bradescoData[\"VOLUME\"]] In [55]: bradescoData[\"VOLUME\"] = bradescoData[\"VOLUME\"].astype(int) In [56]: bradescoData[\"VARIA\u00c7\u00c3O(%)\"] = [x.replace(\",\", \".\") for x in bradescoData[\"VARIA\u00c7\u00c3O(%)\"]] In [57]: bradescoData[\"VARIA\u00c7\u00c3O(%)\"] = [x.replace(\"%\", \"\") for x in bradescoData[\"VARIA\u00c7\u00c3O(%)\"]] In [58]: bradescoData[\"VARIA\u00c7\u00c3O(%)\"] = bradescoData[\"VARIA\u00c7\u00c3O(%)\"].astype(float) Munipula\u00e7\u00e3o de Data #Tive problema com ordem e formato da data. A hora tamb\u00e9m. (mas foi corrigido) #time data '27/12/2019 10:33' does not match format '%d%b%Y:%H:%M:%S.%f' (match) --> '%m/%d/%Y %H:%M:%S.%f' In [59]: bradescoData['DATA'] = pd.to_datetime(bradescoData['DATA'], format='%d/%m/%Y %H:%M') #DataFrame ap\u00f3s o tratamento dos dados In [60]: bradescoData Out[60]: In [61]: bradescoData.dtypes Out[61]: DATA datetime64[ns] COTA\u00c7\u00c3O float64 VOLUME int32 VARIA\u00c7\u00c3O(%) float64 VARIA\u00c7\u00c3O float64 M\u00c1XIMO float64 M\u00cdNIMO float64 dtype: object Dashboard - A\u00e7\u00f5es do Bradesco In [62]: import seaborn as sns In [63]: import matplotlib.pyplot as plt In [64]: %matplotlib inline In [65]: bradescoData.plot(x ='DATA', y = ['M\u00c1XIMO', 'M\u00cdNIMO'], figsize=(15, 3), title='A\u00e7\u00f5es - Bradesco', grid=True) plt.ylabel('Varia\u00e7\u00e3o') plt.xlabel('Data') plt.legend(loc='best') Out[65]: In [66]: columns = ['M\u00c1XIMO','M\u00cdNIMO', 'COTA\u00c7\u00c3O'] In [67]: bradescoData.plot(x ='DATA', y = columns, figsize=(15, 4), title='A\u00e7\u00f5es - Bradesco', grid=True) Out[67]: In [68]: columns = ['VARIA\u00c7\u00c3O', 'VARIA\u00c7\u00c3O(%)'] In [69]: bradescoData.plot(x ='DATA', y = columns, figsize=(15, 4), title='A\u00e7\u00f5es - Bradesco', grid=True) Out[69]: In [70]: fig, ax1 = plt.subplots(1, 1, figsize=(12, 6)) sns.distplot(bradescoData.COTA\u00c7\u00c3O.dropna(), bins=100, ax=ax1) #fig.savefig('graph2.png') Out[70]: Exemplos Pr\u00e1ticos #Deletando um coluna dataName.drop('ColumName', inplace=True, axis=1) #Ver dados faltantes data.isnull() data.isnull().sum() #Preenchendo valores nulos com m\u00e9dia data.fillna(data.mean(0)) #Alterando o \u00edndice do dataFrame data.set_index('C\u00f3digo', inplace=True) #Acessar por r\u00f3tulos data.loc['001'] Coluna Data para S\u00e9ries Temporais #Removendo o index antigo e colocando a coluna data como index. In [71]: bradescoData.set_index('DATA', inplace=True) In [72]: bradescoData Out[72]: Gr\u00e1ficos com S\u00e9ries Temporais In [73]: fig, ax1 = plt.subplots(1, 1, figsize=(15, 4)) bradescoData['Month'] = bradescoData.index.to_period('m') sns.boxplot('Month', 'COTA\u00c7\u00c3O', data=bradescoData, ax=ax1) Out[73]: In [74]: fig, ax1 = plt.subplots(1, 1, figsize=(25, 8)) bradescoData['Day'] = bradescoData.index.to_period('d') sns.boxplot('Day', 'COTA\u00c7\u00c3O', data=bradescoData, ax=ax1) Out[74]: Manipulando a Coluna data # year = bradescoData.index.to_period('Y') # month = bradescoData.index.to_period('m') # day = bradescoData.index.to_period('d') # hour = bradescoData.index.to_period('h') # minute = bradescoData.index.to_period('T') # second = bradescoData.index.to_period('s') #'T' represents minute based frequency # 'H' represents hourly frequency # 'S' represents secondly frequency # M month #YYYY-MM-DD[*HH[:MM[:SS[.fff[fff]]]][+HH:MM[:SS[.ffffff]]]] In [75]: lm = sns.lmplot('VARIA\u00c7\u00c3O', 'COTA\u00c7\u00c3O', data=bradescoData, aspect=2.5, order=3) #lm.ax.xaxis.set_major_formatter(mdates.DateFormatter('%y-%m-%d')) lm.ax.set_xlabel('Varia\u00e7\u00e3o') Out[75]: Text(0.5, 6.79999999999999, 'Varia\u00e7\u00e3o') In [76]: corr = bradescoData.corr() In [77]: corr Out[77]: In [78]: def plot_corr(corr): # Cortaremos a metade de cima pois \u00e9 o espelho da metade de baixo mask = np.zeros_like(corr, dtype=np.bool) mask[np.triu_indices_from(mask, 1)] = True # Calculando a correla\u00e7\u00e3o sns.heatmap(corr, mask=mask, cmap='RdBu', square=True, linewidths=.5) In [79]: plot_corr(corr) Out[79]: Algumas dicas # Com Pandas - gr\u00e1fico (pie) # bradescoData.VARIA\u00c7\u00c3O.value_counts().plot(kind='pie', autopct='%.2f%%') # plt.axis('equal') In [80]: sns.factorplot('VARIA\u00c7\u00c3O', data=bradescoData, kind='count') Out[80]: # Com Pandas In [81]: df.COTA\u00c7\u00c3O.value_counts().plot(kind='pie', autopct='%.2f%%') plt.axis('equal') Out[81]: # Com Seaborn In [82]: sns.factorplot('COTA\u00c7\u00c3O', data=df, kind='count') Out[82]: Refer\u00eancias: https://medium.com/@carlosbaia/visualiza%C3%A7%C3%A3o-e-an%C3%A1lise-de-dados-811780fd0e9f https://seaborn.pydata.org/ https://matplotlib.org/ https://www.vooo.pro/insights/biblioteca-seaborn-com-o-matplotlib/ https://blog.4linux.com.br/web-scraping-python-selenium-e-beautifulsoup/ https://towardsdatascience.com/web-scraping-using-selenium-and-beautifulsoup-99195cd70a58 https://selenium-python.readthedocs.io/api.html https://pt.stackoverflow.com/questions/337093/problema-click-botao-python-selenium https://datatofish.com/plot-dataframe-pandas/","title":"Web Screping"},{"location":"DATA-SCIENCE/pyScrap4/#web-scraping-com-python-acoes-do-bradesco","text":"Elaborado por: Jonathan Cardoso Lopes Domingos 02/01/2020 O seguinte web screping \u00e9 apenas um material de consulta r\u00e1pida, aqui n\u00e3o apresenta nenhuma an\u00e1lise aprofundade sobre o assunto. Neste material apresento um scraping das a\u00e7\u00f5es do Bradesco. Ambientando Selenium no Windows. Baixar e instalar os programas/pacotes abaixo: Selenium: pip install -U selenium Drivers para browsers: Firefox: https://github.com/mozilla/geckodriver/releases Depois de baixar o arquivo, copie geckodriver.exe para o diret\u00f3rio C: ele ficar\u00e1 assim: \u201cC:\\geckodriver.exe\u201d. Ir em Configura\u00e7\u00f5es Avan\u00e7adas do Sistema => propriedades do sistema => Vari\u00e1veis de ambiente => Vari\u00e1veis de Sistema => Editar => Novo => preencha o caminho do arquivo \u201cC:\\geckodriver.exe\u201d no path. (OBS: path do sistema e n\u00e3o do usu\u00e1rio). Em todos os scripts Selenium incluir o c\u00f3digo abaixo: from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary binary = FirefoxBinary(\u2018C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\u2019) driver = webdriver.Firefox(firefox_binary=binary, executable_path=r\u2019C:\\\\geckodriver.exe\u2019) driver.get(\u2018https://www.google.com') # O modulo time aqui foi utilizado para esperar o carregamento das paginas atraves do firefox # Este m\u00f3dulo n\u00e3o \u00e9 necess\u00e1rio no jupyter lab #import time # o modulo Select sera utilizado para interagir com a caixa de selecao In [1]: from selenium.webdriver.support.ui import Select # modulo utilizado para webScreping Python In [2]: from bs4 import BeautifulSoup # o modulo webdriver e necessario para definir qual navegador sera utilizado para fazer a automacao In [3]: from selenium import webdriver","title":"Web Scraping com Python - A\u00e7\u00f5es do Bradesco"},{"location":"DATA-SCIENCE/pyScrap4/#executa-o-navegador","text":"In [4]: from selenium.webdriver.firefox.firefox_binary import FirefoxBinary In [5]: binary = FirefoxBinary(\"C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\") # a linha abaixo define qual e o navegador que queremos utilizar. In [6]: driver = webdriver.Firefox(firefox_binary=binary, executable_path=r'C:\\\\geckodriver.exe')","title":"Executa o Navegador"},{"location":"DATA-SCIENCE/pyScrap4/#insere-o-endereco-web","text":"# abaixo foi definido qual e o site que quero acessar In [7]: driver.get(\"https://economia.uol.com.br/cotacoes/bolsas/acoes/bvsp-bovespa/bbdc4-sa\")","title":"Insere o endere\u00e7o WEB"},{"location":"DATA-SCIENCE/pyScrap4/#manipulando-a-pagina","text":"# Selecionando o bot\u00e3o que iremos clicar - (Listagem de dados) In [8]: btn10 = driver.find_element_by_css_selector(\".btn-mode > span:nth-child(2)\") # Clicando no bot\u00e3o da p\u00e1gina In [9]: btn10.click() # Selecionando o bot\u00e3o que iremos clicar - (Hist\u00f3rico) In [10]: btn20 = driver.find_element_by_css_selector(\".btn-day > span:nth-child(2)\") # Clicando no bot\u00e3o da p\u00e1gina In [11]: btn20.click() # Selecionando o bot\u00e3o que iremos clicar - (A\u00e7\u00f5es/Ano) In [12]: btn30 = driver.find_element_by_css_selector(\".btn-day-table > span:nth-child(4)\") # Clicando no bot\u00e3o da p\u00e1gina In [13]: btn30.click()","title":"Manipulando a P\u00e1gina"},{"location":"DATA-SCIENCE/pyScrap4/#raspando-os-dados","text":"#Armazenando, por um \"id\", a tabela de dados da p\u00e1gina em uma vari\u00e1vel. #.chart-body In [14]: dados = driver.find_element_by_css_selector(\".mod-table\") In [15]: dados Out[15]: <selenium.webdriver.firefox.webelement.FirefoxWebElement (session=\"52a04cdd-5f82-4051-927e-1ded929cbb24\", element=\"748f7f99-dc8d-4f17-a9b6-c01dc555ea76\")> #Pegando os atributos HTML do objeto armazenado na variavel dados. In [16]: html = dados.get_attribute(\"innerHTML\") # Amostra dos atributos In [17]: html Out[17]: '<div class=\"box-scroll\"><div class=\"scroll\" data-scroll=\"{&quot;breakpoints&quot;:[&quot;xs&quot;, &quot;sm&quot;, &quot;md&quot;, &quot;lg&quot;]}\" uolbpack-initialized=\"true\" tabindex=\"0\" style=\"height: 428px;\"><div class=\"scroll-content scroll-animate\"><span class=\"scrollReset\"></span><!-- ngIf: !error --><div class=\"charts-mod-table ng-scope\" ng-if=\"!error\" style=\"display: inline;\"> <div class=\"chart-loading loading-history\" style=\"display: none;\"><div class=\"loading\"> <svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" class=\"loading uil-ring\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"none\" class=\"bk\"></rect><defs><filter id=\"uil-ring-shadow\" x=\"-100%\" y=\"-100%\" width=\"300%\" height=\"300%\"><feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\"></feOffset><feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"0\"></feGaussianBlur><feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"></feBlend></filter></defs><path d=\"M10,50c0,0,0,0.5,0.1,1.4c0,0.5,0.1,1,0.2,1.7c0,0.3,0.1,0.7,0.1,1.1c0.1,0.4,0.1,0.8,0.2,1.2c0.2,0.8,0.3,1.8,0.5,2.8 c0.3,1,0.6,2.1,0.9,3.2c0.3,1.1,0.9,2.3,1.4,3.5c0.5,1.2,1.2,2.4,1.8,3.7c0.3,0.6,0.8,1.2,1.2,1.9c0.4,0.6,0.8,1.3,1.3,1.9 c1,1.2,1.9,2.6,3.1,3.7c2.2,2.5,5,4.7,7.9,6.7c3,2,6.5,3.4,10.1,4.6c3.6,1.1,7.5,1.5,11.2,1.6c4-0.1,7.7-0.6,11.3-1.6 c3.6-1.2,7-2.6,10-4.6c3-2,5.8-4.2,7.9-6.7c1.2-1.2,2.1-2.5,3.1-3.7c0.5-0.6,0.9-1.3,1.3-1.9c0.4-0.6,0.8-1.3,1.2-1.9 c0.6-1.3,1.3-2.5,1.8-3.7c0.5-1.2,1-2.4,1.4-3.5c0.3-1.1,0.6-2.2,0.9-3.2c0.2-1,0.4-1.9,0.5-2.8c0.1-0.4,0.1-0.8,0.2-1.2 c0-0.4,0.1-0.7,0.1-1.1c0.........etc... #Transformando em objeto html para BS4. In [18]: soup = BeautifulSoup(html, \"html.parser\") # Amostra dos atributos In [19]: soup Out[19]: <div class=\"box-scroll\"><div class=\"scroll\" data-scroll='{\"breakpoints\":[\"xs\", \"sm\", \"md\", \"lg\"]}' style=\"height: 428px;\" tabindex=\"0\"uolbpack-initialized=\"true\"><div class=\"scroll-content scroll-animate\"><span class=\"scrollReset\"></span><!-- ngIf: !error --><div class=\"charts-mod-table ng-scope\" ng-if=\"!error\" style=\"display: inline;\"> <div class=\"chart-loading loading-history\" style=\"display: none;\"><div class=\"loading\"> <svg class=\"loading uil-ring\" height=\"100px\" preserveaspectratio=\"xMidYMid\" viewbox=\"0 0 100 100\" width=\"100px\" xmlns=\"http://www.w3.org/2000/svg\"><rect class=\"bk\" fill=\"none\" height=\"100\" width=\"100\" x=\"0\" y=\"0\"></rect><defs><filter height=\"300%\" id=\"uil-ring-shadow\" width=\"300%\" x=\"-100%\" y=\"-100%\"><feoffset dx=\"0\" dy=\"0\" in=\"SourceGraphic\" result=\"offOut\"></feoffset><fegaussianblur in=\"offOut\" result=\"blurOut\" stddeviation=\"0\"></fegaussianblur><feblend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"></feblend></filter></defs><path d=\"M10,50c0,0,0,0.5,0.1,1.4c0,0.5,0.1,,0.2,1.7c0,0.3,0.1,0.7,0.1,1.1c0.1,0.4,0.1,0.8,0.2,1.2c0.2,0.8,0.3,1.8,0.5,2.8 c0.3,1,0.6,2.1,0.9,3.2c0.3,1.1,0.9,2.3,1.4,3.5c0.51.2,1.2,2.4,1.8,3.7c0.3,0.6,0.8,1.2,1.2,1.9c0.4,0.6,0.8,1.3,1.3,1.9 c1,1.2,1.9,2.6,3.1,3.7c2.2,2.5,5,4.7,7.9,6.7c3,2,6.5,3.4,10.14.6c3.6,1.1,7.5,1.5,11.2,1.6c4-0.1,7.7-0.6,11.3-1.6 c3.6-1.2,7-2.6,10-4.6c3-2,5.8-4.2,7.9-6.7c1.2-1.2,2.1-2.5,3.1-3.7c0.5-0.6,0.9-1.3,1.3-1.9c0.4-0.6,0.8-1.3,1.2-1.9 c0.6-1.3,1.3-2.5,1.8-3.7c0.5-1.2..................etc............ #Filtrando os dados, deixando somente os dados que est\u00e3o na tabela. In [20]: table = soup.select_one(\"table\") # Amostra dos atributos In [21]: table Out[21]: <table class=\"tabela-historic\"><thead> <tr><th class=\"data\">DATA</th><th class=\"compra\">COTA\u00c7\u00c3O</th><th class=\"venda hidden-xs\">VOLUME</th><th class=\"ultimapct hidden-xs\"> </th><th class=\"ultima\" colspan=\"2\">VARIA\u00c7\u00c3O</th><th class=\"max hidden-xs hidden-sm hidden-md\">M\u00c1XIMO</th><th class=\"min hidden-xs hidden-sm hidden-md\">M\u00cdNIMO</th></tr> </thead><tbody><!-- ngRepeat: item in dataHistory.docs --><tr class=\"ng-scope\" ng-repeat=\"item in dataHistory.docs\"><td class=\"data ng-binding\" ng-bind=\"item.date\">26/12/2019 00:00</td><td class=\"compra ng-binding\" ng-bind=\"item.bidvalue\">36,36</td><td class=\"venda hidden-xs ng-binding\" ng-bind=\"item.askvalue\">10.453.500</td><td class=\"ultimapct ng-binding alta\" ng-bind=\"(item.variationpercentbidView) + '%'\" ng-class=\"{'alta': item.variationpercentbid &gt;= 0, 'baixa': item.variationpercentbid &lt; 0}\">1,25%</td><td class=\"ultima hidden-xs ng-binding alta\" ng-bind=\"item.variationbidView\" ng-class=\"{'alta': item.variationbid &gt;= 0, 'baixa': item.variationbid &lt; 0}\">0,45</td><td class=\"max hidden-xs hidden-sm hidden-md ng-binding\" ng-bind=\"item.maxbid\">36,49</td><td class=\"min hidden-xs hidden-sm hidden-md ng-binding\" ng-bind=\"item.minbid\">35,82</td></tr><!-- end ngRepeat: item in dataHistory.docs --><tr class=\"ng-scope\" ng-repeat=\"item in dataHistory.docs\"><td class=\"data ng-binding\" ng-bind=\"item.date\">23/12/2019 00:00</td><td class=\"compra ng-binding\" ng-bind=\"item.bidvalue\">35,91</td><td class=\"venda hidden-xs ng-binding\" ng-bind=\"item.askvalue\">10.267.900</td><td class=\"ultimapct ng-binding alta\" ng-bind=\"(item.variationpercentbidView) + '%'\" ng-class=\"{'alta': item.variationpercentbid &gt;= 0, 'baixa': item.var...................etc...............","title":"Raspando os dados"},{"location":"DATA-SCIENCE/pyScrap4/#cabecalho-da-tabela","text":"O objetivo \u00e9 retirar os itens que fazem parte do header <table class=\"tabela-historic\"> <thead> <tr> <th class=\"data\">DATA</th> <th class=\"compra\">COTA\u00c7\u00c3O</th> <th class=\"venda hidden-xs\">VOLUME</th> <th class=\"ultimapct hidden-xs\"> </th> <th class=\"ultima\" colspan=\"2\">VARIA\u00c7\u00c3O</th> <th class=\"max hidden-xs hidden-sm hidden-md\">M\u00c1XIMO</th> <th class=\"min hidden-xs hidden-sm hidden-md\">M\u00cdNIMO</th> </tr> </thead #Armazenando os t\u00edtulos das colunas da tabela em uma vari\u00e1vel headers In [22]: headers = [header.text for header in table.select(\"th\")] In [23]: headers Out[23]: ['DATA', 'COTA\u00c7\u00c3O', 'VOLUME', '\\xa0', 'VARIA\u00c7\u00c3O', 'M\u00c1XIMO', 'M\u00cdNIMO']","title":"Cabe\u00e7alho da Tabela"},{"location":"DATA-SCIENCE/pyScrap4/#corpo-da-tabela","text":"O objetivo \u00e9 retirar os itens que fazem parte do corpo da tabela #Armazenando os dados da tabela em uma vari\u00e1vel data1 In [24]: data1 = [d.text for d in table.select (\"tbody > tr > td\")] #Imprimindo uma amostra dos primeiros 20 dados #Descobrindo o padr\u00e3o de 7 #A cada 7 dados a data se repete In [25]: data1[:20] Out[25]: ['27/12/2019 00:00', '36,22', '10.404.000', '-0,39%', '-0,14', '36,65', '36,10', '26/12/2019 00:00', '36,36', '10.453.500', '1,25%', '0,45', '36,49', '35,82', '23/12/2019 00:00', '35,91', '10.267.900', '0,62%', '0,22', '35,92'] #Imprimindo o total de dados In [26]: len(data1) Out[26]: 1729 #Achando o n\u00famero de grupo(linhas) do dataset In [27]: len(data1)/7 Out[27]: 247.0 In [28]: print(data1[0]) Out[28]: 27/12/2019 00:00 In [29]: print(data1[1]) Out[29]: 36,22","title":"Corpo da Tabela"},{"location":"DATA-SCIENCE/pyScrap4/#organizando-a-matriz","text":"O objetivo \u00e9 organizar os dados para transformar uma matriz em um dataFrame(Tabela Python) #Dividindo a lista de dados extra\u00eddos da tabela em sublistas In [30]: n = 247 splited = [] len_l = len(data1) for i in range(n): start = int(i*len_l/n) end = int((i+1)*len_l/n) splited.append(data1[start:end]) #Imprimindo os 5 primeiros conjuntos. #Observar se o grupo corresponde a primeira linha do dataset no site. In [31]: splited[:5] Out[31]: [['27/12/2019 00:00', '36,22', '10.404.000', '-0,39%', '-0,14', '36,65', '36,10'], ['26/12/2019 00:00', '36,36', '10.453.500', '1,25%', '0,45', '36,49', '35,82'], ['23/12/2019 00:00', '35,91', '10.267.900', '0,62%', '0,22', '35,92', '35,48'], ['20/12/2019 00:00', '35,69', '22.379.200', '-0,78%', '-0,28', '35,93', '35,46'], ['19/12/2019 00:00', '36,45', '32.951.700', '1,84%', '0,66', '36,45', '35,68']] #Fazer altera\u00e7\u00e3o no array de header In [32]: headers Out[32]: ['DATA', 'COTA\u00c7\u00c3O', 'VOLUME', '\\xa0', 'VARIA\u00c7\u00c3O', 'M\u00c1XIMO', 'M\u00cdNIMO'] #Corrigindo o t\u00edtulo da tabela '\\xa0' --> VARIA\u00c7\u00c3O-% In [33]: headers[3]=\"VARIA\u00c7\u00c3O(%)\" In [34]: headers Out[34]: ['DATA', 'COTA\u00c7\u00c3O', 'VOLUME', 'VARIA\u00c7\u00c3O(%)', 'VARIA\u00c7\u00c3O', 'M\u00c1XIMO', 'M\u00cdNIMO']","title":"Organizando a Matriz"},{"location":"DATA-SCIENCE/pyScrap4/#matriz-para-dataframe","text":"In [35]: import pandas as pd In [36]: import numpy as np # Transformando a lista de dados e t\u00edtulos em um dataFrame. In [37]: df = pd.DataFrame(np.array(splited).reshape(247,7), columns = list(headers)) In [37]: df Out[37]:","title":"Matriz para DataFrame"},{"location":"DATA-SCIENCE/pyScrap4/#preperando-os-dados","text":"In [38]: df.shape Out[38]:(247, 7) In [39]: df.dtypes Out[39]: DATA object COTA\u00c7\u00c3O object VOLUME object VARIA\u00c7\u00c3O(%) object VARIA\u00c7\u00c3O object M\u00c1XIMO object M\u00cdNIMO object dtype: object In [40]: df['M\u00c1XIMO'] Out[40]: 0 36,65 1 36,49 2 35,92 3 35,93 4 36,45 ... 242 41,20 243 41,29 244 41,27 245 40,89 246 40,79 Name: M\u00c1XIMO, Length: 247, dtype: object Alguns modelos que podem transformar object em numeric. #Valores faltantes completados com NaN (float64) pd.to_numeric(dataName, errors='coerce') #Valores faltantes completados com 0 (float64) pd.to_numeric(dataName, errors='coerce').fillna(0, downcast='infer') #Valores transformados em (inteiro32) pd.to_numeric(s, errors='coerce').astype('Int32') #Valores faltantes completados com NaN (float64) #S\u00f3 altera valores objetos, valores que s\u00e3o int permanecem. df2 = dataName.apply(pd.to_numeric, errors='coerce') #Alterando a coluna maximo bradesco02 = df.M\u00c1XIMO.astype('int64') #Outras Formas df.transform(pd.to_numeric, errors='coerce') df[cols] = df[cols].apply(pd.to_numeric, errors='coerce') pd.Series([1,2,3,4,'.']).convert_objects(convert_numeric=True)","title":"Preperando os dados"},{"location":"DATA-SCIENCE/pyScrap4/#object-to-numeric","text":"#Primeira tentaiva de transformar os dados que est\u00e3o em objeto. #Transformar em float In [41]: bradesco = df.apply(pd.to_numeric, errors='coerce') #Dados transformados In [42]: bradesco.dtypes Out[42]: DATA float64 COTA\u00c7\u00c3O float64 VOLUME float64 VARIA\u00c7\u00c3O(%) float64 VARIA\u00c7\u00c3O float64 M\u00c1XIMO float64 M\u00cdNIMO float64 dtype: object #N\u00e3o deu certo pois existem caracteres especiais que precisam ser tratados In [43]: bradesco Out[43]:","title":"Object to Numeric"},{"location":"DATA-SCIENCE/pyScrap4/#tratando-caracteres-especiais","text":"In [44]: df Out[44]: In [45]: bradescoData = df.copy() Out[45]: bradescoData exemplo de utiliza\u00e7\u00e3o do m\u00e9todo extract Evento: COLUNA [14729\u201315236] [14823\u2013?] [14618\u201315145] Usando Regex: # remover os colchetes removColch = data['COLUNA'].str.extract('\\[(.*?)\\]', expand=False) #Manter apenas os 5 primeiros n\u00fameros extrNume = removColch.str.extract('(\\d{5})', expand=False) #Adicionar a nova coluna no data data['COLUNA'] = pd.to_numeric(extrNume) #Removendo valores duplicados data.duplicated() data.drop_duplicates()","title":"Tratando Caracteres Especiais"},{"location":"DATA-SCIENCE/pyScrap4/#metodo-replace","text":"In [46]: bradescoData[\"COTA\u00c7\u00c3O\"] = [x.replace(\",\", \".\") for x in bradescoData[\"COTA\u00c7\u00c3O\"]] In [47]: bradescoData[\"COTA\u00c7\u00c3O\"] = bradescoData[\"COTA\u00c7\u00c3O\"].astype(float) In [48]: bradescoData[\"VARIA\u00c7\u00c3O\"] = [x.replace(\",\", \".\") for x in bradescoData[\"VARIA\u00c7\u00c3O\"]] In [49]: bradescoData[\"VARIA\u00c7\u00c3O\"] = bradescoData[\"VARIA\u00c7\u00c3O\"].astype(float) In [50]: bradescoData[\"M\u00c1XIMO\"] = [x.replace(\",\", \".\") for x in bradescoData[\"M\u00c1XIMO\"]] In [51]: bradescoData[\"M\u00c1XIMO\"] = bradescoData[\"M\u00c1XIMO\"].astype(float) In [52]: bradescoData[\"M\u00cdNIMO\"] = [x.replace(\",\", \".\") for x in bradescoData[\"M\u00cdNIMO\"]] In [53]: bradescoData[\"M\u00cdNIMO\"] = bradescoData[\"M\u00cdNIMO\"].astype(float) In [54]: bradescoData[\"VOLUME\"] = [x.replace(\".\", \"\") for x in bradescoData[\"VOLUME\"]] In [55]: bradescoData[\"VOLUME\"] = bradescoData[\"VOLUME\"].astype(int) In [56]: bradescoData[\"VARIA\u00c7\u00c3O(%)\"] = [x.replace(\",\", \".\") for x in bradescoData[\"VARIA\u00c7\u00c3O(%)\"]] In [57]: bradescoData[\"VARIA\u00c7\u00c3O(%)\"] = [x.replace(\"%\", \"\") for x in bradescoData[\"VARIA\u00c7\u00c3O(%)\"]] In [58]: bradescoData[\"VARIA\u00c7\u00c3O(%)\"] = bradescoData[\"VARIA\u00c7\u00c3O(%)\"].astype(float)","title":"M\u00e9todo Replace"},{"location":"DATA-SCIENCE/pyScrap4/#munipulacao-de-data","text":"#Tive problema com ordem e formato da data. A hora tamb\u00e9m. (mas foi corrigido) #time data '27/12/2019 10:33' does not match format '%d%b%Y:%H:%M:%S.%f' (match) --> '%m/%d/%Y %H:%M:%S.%f' In [59]: bradescoData['DATA'] = pd.to_datetime(bradescoData['DATA'], format='%d/%m/%Y %H:%M') #DataFrame ap\u00f3s o tratamento dos dados In [60]: bradescoData Out[60]: In [61]: bradescoData.dtypes Out[61]: DATA datetime64[ns] COTA\u00c7\u00c3O float64 VOLUME int32 VARIA\u00c7\u00c3O(%) float64 VARIA\u00c7\u00c3O float64 M\u00c1XIMO float64 M\u00cdNIMO float64 dtype: object","title":"Munipula\u00e7\u00e3o de Data"},{"location":"DATA-SCIENCE/pyScrap4/#dashboard-acoes-do-bradesco","text":"In [62]: import seaborn as sns In [63]: import matplotlib.pyplot as plt In [64]: %matplotlib inline In [65]: bradescoData.plot(x ='DATA', y = ['M\u00c1XIMO', 'M\u00cdNIMO'], figsize=(15, 3), title='A\u00e7\u00f5es - Bradesco', grid=True) plt.ylabel('Varia\u00e7\u00e3o') plt.xlabel('Data') plt.legend(loc='best') Out[65]: In [66]: columns = ['M\u00c1XIMO','M\u00cdNIMO', 'COTA\u00c7\u00c3O'] In [67]: bradescoData.plot(x ='DATA', y = columns, figsize=(15, 4), title='A\u00e7\u00f5es - Bradesco', grid=True) Out[67]: In [68]: columns = ['VARIA\u00c7\u00c3O', 'VARIA\u00c7\u00c3O(%)'] In [69]: bradescoData.plot(x ='DATA', y = columns, figsize=(15, 4), title='A\u00e7\u00f5es - Bradesco', grid=True) Out[69]: In [70]: fig, ax1 = plt.subplots(1, 1, figsize=(12, 6)) sns.distplot(bradescoData.COTA\u00c7\u00c3O.dropna(), bins=100, ax=ax1) #fig.savefig('graph2.png') Out[70]: Exemplos Pr\u00e1ticos #Deletando um coluna dataName.drop('ColumName', inplace=True, axis=1) #Ver dados faltantes data.isnull() data.isnull().sum() #Preenchendo valores nulos com m\u00e9dia data.fillna(data.mean(0)) #Alterando o \u00edndice do dataFrame data.set_index('C\u00f3digo', inplace=True) #Acessar por r\u00f3tulos data.loc['001']","title":"Dashboard - A\u00e7\u00f5es do Bradesco"},{"location":"DATA-SCIENCE/pyScrap4/#coluna-data-para-series-temporais","text":"#Removendo o index antigo e colocando a coluna data como index. In [71]: bradescoData.set_index('DATA', inplace=True) In [72]: bradescoData Out[72]:","title":"Coluna Data para S\u00e9ries Temporais"},{"location":"DATA-SCIENCE/pyScrap4/#graficos-com-series-temporais","text":"In [73]: fig, ax1 = plt.subplots(1, 1, figsize=(15, 4)) bradescoData['Month'] = bradescoData.index.to_period('m') sns.boxplot('Month', 'COTA\u00c7\u00c3O', data=bradescoData, ax=ax1) Out[73]: In [74]: fig, ax1 = plt.subplots(1, 1, figsize=(25, 8)) bradescoData['Day'] = bradescoData.index.to_period('d') sns.boxplot('Day', 'COTA\u00c7\u00c3O', data=bradescoData, ax=ax1) Out[74]: Manipulando a Coluna data # year = bradescoData.index.to_period('Y') # month = bradescoData.index.to_period('m') # day = bradescoData.index.to_period('d') # hour = bradescoData.index.to_period('h') # minute = bradescoData.index.to_period('T') # second = bradescoData.index.to_period('s') #'T' represents minute based frequency # 'H' represents hourly frequency # 'S' represents secondly frequency # M month #YYYY-MM-DD[*HH[:MM[:SS[.fff[fff]]]][+HH:MM[:SS[.ffffff]]]] In [75]: lm = sns.lmplot('VARIA\u00c7\u00c3O', 'COTA\u00c7\u00c3O', data=bradescoData, aspect=2.5, order=3) #lm.ax.xaxis.set_major_formatter(mdates.DateFormatter('%y-%m-%d')) lm.ax.set_xlabel('Varia\u00e7\u00e3o') Out[75]: Text(0.5, 6.79999999999999, 'Varia\u00e7\u00e3o') In [76]: corr = bradescoData.corr() In [77]: corr Out[77]: In [78]: def plot_corr(corr): # Cortaremos a metade de cima pois \u00e9 o espelho da metade de baixo mask = np.zeros_like(corr, dtype=np.bool) mask[np.triu_indices_from(mask, 1)] = True # Calculando a correla\u00e7\u00e3o sns.heatmap(corr, mask=mask, cmap='RdBu', square=True, linewidths=.5) In [79]: plot_corr(corr) Out[79]: Algumas dicas # Com Pandas - gr\u00e1fico (pie) # bradescoData.VARIA\u00c7\u00c3O.value_counts().plot(kind='pie', autopct='%.2f%%') # plt.axis('equal') In [80]: sns.factorplot('VARIA\u00c7\u00c3O', data=bradescoData, kind='count') Out[80]: # Com Pandas In [81]: df.COTA\u00c7\u00c3O.value_counts().plot(kind='pie', autopct='%.2f%%') plt.axis('equal') Out[81]: # Com Seaborn In [82]: sns.factorplot('COTA\u00c7\u00c3O', data=df, kind='count') Out[82]:","title":"Gr\u00e1ficos com S\u00e9ries Temporais"},{"location":"DATA-SCIENCE/pyScrap4/#referencias","text":"https://medium.com/@carlosbaia/visualiza%C3%A7%C3%A3o-e-an%C3%A1lise-de-dados-811780fd0e9f https://seaborn.pydata.org/ https://matplotlib.org/ https://www.vooo.pro/insights/biblioteca-seaborn-com-o-matplotlib/ https://blog.4linux.com.br/web-scraping-python-selenium-e-beautifulsoup/ https://towardsdatascience.com/web-scraping-using-selenium-and-beautifulsoup-99195cd70a58 https://selenium-python.readthedocs.io/api.html https://pt.stackoverflow.com/questions/337093/problema-click-botao-python-selenium https://datatofish.com/plot-dataframe-pandas/","title":"Refer\u00eancias:"},{"location":"DATA-SCIENCE/pythonDados/","text":"PYTHON AINDA EM CONSTRU\u00c7\u00c3O Como toda boa an\u00e1lise de dados, \u00e9 necess\u00e1rio uma boa ferramenta de manipula\u00e7\u00e3o destes dados. Nesta documenta\u00e7\u00e3o falaremos o tempo todo em ferramentas de manipula\u00e7\u00e3o de dados. Logo, recomendo fortemente que voc\u00ea tenha instalado a distribui\u00e7\u00e3o anaconda, pois ela j\u00e1 vem munida da linguagem de programa\u00e7\u00e3o python e sua principais bibliotecas, como pandas, numpy, matplotlib, seaborn etc. Caso contr\u00e1rio, voc\u00ea poder\u00e1 instalar o python e as bibliotecas separadamente. Segue o link do Anaconda e do python. Observa\u00e7\u00e3o: Recomendo que instale o pack anaconda, assim n\u00e3o precisar\u00e1 instalar mais nada. ANACONDA PYTHON COMANDOS \u00daTEIS Lista de comandos para an\u00e1lise de dados em python Para entender o Jupyter Dois modos modo edi\u00e7\u00e3o: escreve em uma c\u00e9lula modo comando: movimenta as c\u00e9lulas Dois tipos de c\u00e9lulas c\u00f3digo (esc, depois y) markdown (esc, depois m) Modo comando (azul) m - muda c\u00e9lula para markdown y - muda c\u00e9lula para python a - cria c\u00e9lula acima (above) b - cria c\u00e9lula abaixo (bellow) v - cola c\u00e9lula c - copia c\u00e9lula x - recorta/apaga c\u00e9lula f - pesquisar e substituir palavras l - mostra n\u00fameros das linhas h - lista de atalhos 00 (zero duas vezes) - reinicia o notebook SHIFT - M: mescla c\u00e9lulas CTRL + SHIFT + (sinal de menos): divide c\u00e9lula Modo edi\u00e7\u00e3o (verde) SHIFT-ENTER - executa os comandos que est\u00e3o dentro da c\u00e9lula objeto. - sugest\u00f5es de m\u00e9todos Alguns comandos %matplotlib inline - para que os gr\u00e1ficos apare\u00e7am no documento (um resqu\u00edcio de vers\u00f5es antigas) import pandas as pd - carrega algum pacote (p. ex., pandas) como alguma sigla (p. ex., pd) x = [209, 32, 4, 23, 45] - cria um objeto chamado x contendo uma lista com os n\u00fameros 209, 32, 4, 23 e 45. Aten\u00e7\u00e3o: o python come\u00e7a a contar em zero. x[0] - mostra o primeiro elemento da lista (209), x[1] mostra o segundo elemento (32) etc. x[1:4] - mostra os n\u00fameros nas posi\u00e7\u00f5es 1, 2, 3 (32, 4 e 23) x[:2] - mostra todos os elementos at\u00e9 o terceiro (209 e 32), n\u00e3o incluindo o terceiro (intervalo aberto). x[3:] - mostra todos os elementos a partir do quarto (23 e 45), incluindo o quarto. x[:] - mostra todos os elementos da lista. len(x) - mostra o tamanho de x. Nesse caso, 3. sum([209, 32, 4, 23 e 45]) ou sum(x) - soma os valores. min(x) e max(x) - mostra os valores m\u00ednimos e m\u00e1ximos. Operadores matem\u00e1ticos 3 * 2 (multiplica\u00e7\u00e3o) 6 / 3 (divis\u00e3o) 2 ** 3 (potencia\u00e7\u00e3o (p. ex, dois elevado a tr\u00eas)) = (atribui\u00e7\u00e3o (p. ex., x recebe 3)) == (teste de igualdade (p. ex., \u2018munic\u00edpio == \u201cVarginha\u201d\u2019 testa se o munic\u00edpio \u00e9 Varginha)). != (teste de desigualdade (p. ex., \u2018munic\u00edpio != \u201cVarginha\u201d\u2019 testa se o munic\u00edpio n\u00e3o \u00e9 Varginha). & ( operador l\u00f3gico e) | (operador l\u00f3gico ou) <= >= (menor ou igual que, maior ou igual que) Ler dados e mostrar informa\u00e7\u00f5es b\u00e1sicas Os exemplos a seguir foram elaborados com uma base em dados do pnad (Pesquisa Nacional por Amostra de Domic\u00edlios - IBGE), isso explica a utiliza\u00e7\u00e3o do pnad na maioria dos comandos. pnad = pd.read_csv('pnad022017.csv') - l\u00ea o arquivo csv e o transforma em um objeto dataframe chamado pnad pnad = pd.read_excel('pnad022017.xls') - l\u00ea o arquivo do Excel (xls ou xlsx) e o transforma em um objeto dataframe. pnad.shape - mostra o n\u00famero de linhas e colunas do dataframe. Obs: nesse caso n\u00e3o \u00e9 preciso abrir e fechar par\u00eantesis. pnad.columns - mostra o nome das colunas (vari\u00e1veis). Obs: nesse caso n\u00e3o \u00e9 preciso abrir e fechar par\u00eantesis. pnad.head(10) - mostra as primeiras dez linhas do dataframe, o padr\u00e3o \u00e9 mostrar 5. pnad.tail(10) - mostra as \u00faltimas dez linhas do dataframe. pnad.info() - mostra os tipos das vari\u00e1veis e o tamanho do dataframe na mem\u00f3ria. pnad.loc[ :, ['sexo', 'idade', 'renda']] - subsele\u00e7\u00e3o por r\u00f3tulos (labels), mostra todas as linhas, apenas das vari\u00e1veis indicadas. pnad.iloc[ :10, [3, 4, 5]] - subsele\u00e7\u00e3o por posi\u00e7\u00e3o (i). No exemplo, mostra apenas as primeiras das vari\u00e1veis nas posi\u00e7\u00f5es indicadas. Aten\u00e7\u00e3o: note o uso de dois pares de colchetes em .loc e .iloc. O primeiro deles deriva do fato de que fun\u00e7\u00f5es usam colchetes ao inv\u00e9s pois s\u00e3o subsele\u00e7\u00f5es, como no caso das listas explicado acima. O segundo par de colchete \u00e9 usado quando queremos indicar mais de um elemento, situa\u00e7\u00e3o em que \u00e9 preciso criar uma lista. Estat\u00edsticas b\u00e1sicas pnad.describe() - mostra o resumo estat\u00edstico (m\u00ednimo, m\u00e1ximo, m\u00e9dia, mediana e quartis) de todas as vari\u00e1veis do dataframe. pnad.min() - mostra o valor m\u00ednimo de todas as vari\u00e1veis. O mesmo pode ser feito com todos os comandos abaixo. pnad.renda.describe() - mostra o resumo estat\u00edstico da vari\u00e1vel selecionada. pnad.renda.min() - mostra a observa\u00e7\u00e3o com a menor renda. pnad.renda.max() - a maior renda. pnad.renda.mean() - a m\u00e9dia da renda. pnad.renda.std() - o desvio padr\u00e3o da renda. pnad.renda.var() - a vari\u00e2ncia da renda. pnad.renda.mad() - o desvio absoluto m\u00e9dio da renda. pnad.renda.sum() - o somat\u00f3rio da renda. pnad.renda.cumsum() - a soma acumulada da renda. pnad.cov( ) - a matriz de covari\u00e2ncias pnad.corr( ) - a matriz de correla\u00e7\u00f5es. pnad.loc[ :, [\u2018renda\u2019, \u2018idade\u2019, \u2018estudo\u2019]].corr() - a correla\u00e7\u00e3o entre a renda, a idade e anos de estudo. Opera\u00e7\u00f5es com dataframes pd.ocup_cod.unique() - mostra todos os valores n\u00e3o repetidos da vari\u00e1vel ocup_cod (c\u00f3digo da ocupa\u00e7\u00e3o). pd.sexo.value_counts() - mostra quantas observa\u00e7\u00f5es h\u00e1 em cada um valores da vari\u00e1vel sexo. pnad.query(\u2018renda > 10000\u2019) - seleciona apenas as observa\u00e7\u00f5es com renda maior do que 10 mil. pnad.query(\u2018renda > 10000 & idade < 60 & sexo == 2\u2019) - apenas observa\u00e7\u00f5es com renda maior do que 10 mil, idade menor do que 60 e que sejam mulheres (o sexo feminino foi codificado como 2). pnad.groupby('sexo').idade.mean() - agrupa as observa\u00e7\u00f5es por sexo e mostra a m\u00e9dia de idade de cada um dos sexos. pnad.sort_values(by='renda', ascending=False) - ordena as observa\u00e7\u00f5es por renda, em ordem decrescente. Ajuda - SHIFT-TAB quando o curso estiver em algum comando. Segure o SHIFT e v\u00e1 apertando o TAB at\u00e9 quatro vezes para ir aumentando o tamanho da ajuda. pnad.head? - o mesmo que apertar SHIFT-TAB quatro vezes, mostra a documenta\u00e7\u00e3o do comando .head(). pnad.head?? - mostra o c\u00f3digo usado pela fun\u00e7\u00e3o .head(). Numpy (Introdu\u00e7\u00e3o ao Numpy) O NumPy \u00e9 uma poderosa biblioteca da linguagem de programa\u00e7\u00e3o Python, que permite trabalhar com efici\u00eancia vetores, matrizes, arranjos e permite diversas fun\u00e7\u00f5es e opera\u00e7\u00f5es matem\u00e1ticas. Assim como no python, o Numpy possui um sintaxe clara e objetiva. Dentro da matem\u00e1tica, esta biblioteca permite trabalhar, de forma aplicada, com arranjos multidimensionais, matrizes de n dimens\u00f5es, \u00e1lgebra linear, gera\u00e7\u00e3o de n\u00fameros aleat\u00f3rios etc. Para mais informa\u00e7\u00f5es sobre o Numpy clique aqui . Instala\u00e7\u00e3o - NumPy Essa biblioteca n\u00e3o \u00e9 nativa do Python, logo voc\u00ea precisar\u00e1 instalar. Se voc\u00ea baixou o pacote Anaconda, como recomendado, o numpy j\u00e1 estar\u00e1 incluso. Caso contr\u00e1rio, voc\u00ea dever\u00e1 utilizar a ferramenta pip do seu python. Digite o seguinte comando no seu terminal linux ou prompt windowns. pip install numpy Ttutorial Importando a biblioteca Utilizando o editor de sua prefer\u00eancia como o vsCode, atom ou Pycharme, importe a biblioteca. import numpy as np Criando uma Array(Matriz) No c\u00f3digo abaixo podemos observar um exemplo de uma list, pois o python n\u00e3o oferece suporte para arrays, por\u00e9m o Numpy permite que tratemos uma list como um array, como ser\u00e1 observado no exemplo 2. Exemplo 1: List In [1]: lista = [10,20,40,30] In [2]: type (lista) Out[2]: list Exemplo 2: Numpay Array In [1]: Matriz = [10,20,40,30] In [2]: type (Matriz) Out[2]: numpy.ndarray Manipulando Arrays Criando uma matriz In [1]: m2 = np.array ([[1, 2], [3, 4]]) In [2]: m2 Out[2]: array([[1, 2], [3, 4]]) Selecionando elementos de uma matriz In [3]: print(m2[0]) Out[3]: [1 2] In [4]: print(m2[1]) Out[4]: [3 4] In [5]: print(m2[1][0]) Out[5]: 3 Matriz transposta In [3]: print(m2.transpose()) Out[5]: [[1 3] [2 4]] Criando novas matrizes In [6]: m3 = np.array([[5,6], [7,8]]) In [7]: m4 = np.array([[1,2], [3,4]]) Somando matrizes OBS: a soma, a subtra\u00e7\u00e3o e a multiplica\u00e7\u00e3o funcionam como na geometria. Para manipula\u00e7\u00f5es de dados de modo convencional do python, utilizar uma list. In [8] print(m3 + m4) Out[8] [[ 6 8] [10 12]] Somando todos os elementos OBS: foram somados os elementos da matriz m3, criada logo acima. In [9] print (m3.sum()) Out[9] 26 M\u00e9dia Aritm\u00e9tica In [10]: print (m4.mean()) Out[10]: 2.5 Fatiamento de Array Criando nova matriz In [11]: m4 = np.array([[1,2,5,10], [3,4,6,8],[5,7,6,8],[3,2,0,4]]) In [12]: m4 Out[12]: [[ 1, 2, 5, 10], [ 3, 4, 6, 8], [ 5, 7, 6, 8], [ 3, 2, 0, 4]] Fatiando a Matriz In [13]: print(m4[1:3]) Out[13]: [[3, 4, 6, 8], [5, 7, 6, 8]] In [14]: print(m4[::2]) Out[14]: [[ 1, 2, 5, 10], [ 5, 7, 6, 8]] In [15]: np.array_split(x8,2,axis=0) Out[15]: [array([[ 1, 2, 5, 10]]), array([[5, 7, 6, 8]])] Manipulando termos da Array Criando nova matriz In [16]: m5 = np.array([[12,2,27,12],[31,4,5,25]]) In [17]: print(m5) Out[17]: [[12, 2, 27, 12], [31, 4, 5, 25]] Trocando um termo da matriz In [18]: m5[0,0] = 100 In [19]: print(m5) Out[19]: [[100, 2, 27, 12] [ 31, 4, 5, 25]] Criando duas matrizes In [20]: m6 = np.array([1,2,3]) In [21]: m61 = np.array([4,5,8]) anexar apenas um termo In [22]: Result = np.insert(m6, 1, 10) In [23]: print(Result) Out[23]: [ 1 10 2 3] anexar v\u00e1rios termos In [22]: varios = np.append(m6, [10,15,16]) In [23]: print(varios) Out[23]: [ 1, 2, 3, 10, 15, 16] concatenar dois arrays In [24]: Result2 = np.concatenate((m6, m61), axis=0) In [25]: print(Result2) Out[25]: [1 2 3 4 5 8] anexar em dimens\u00f5es de eixo 0 In [26]: m7 = np.array([[1,2,3],[5,8,7]]) In [27]: np.append(m7, [[8,8,8]], axis=0) Out[27]: array([[1, 2, 3], [5, 8, 7], [8, 8, 8]]) anexar em dimens\u00f5es de eixo 1 In [28]: m8 = np.array([[1,2,3],[5,9,7]]) In [29]: np.append(m8, [[8],[8]], axis=1) Out[29]: array([[1, 2, 3, 8], [5, 9, 7, 8]]) deletar termo de uma matriz In [30]: m9 = np.array([[1,2],[3,4],[5,6]]) #deletando em axis 0 In [31]: np.delete(m9, 1, 0) Out[31]: array([[1, 2], [5, 6]]) #deletando em fatiamento(com raz\u00e3o 2) In [32]: m10 = np.array([[1,2,3],[3,4,7],[5,6,4]0,[4,5,9]]) In [33]: np.delete(m10,np.s_[::2],0) Out[32]: array([[1, 2], [5, 6]]) MATPLOTLIB Segundo a documenta\u00e7\u00e3o oficial, o Matplotlib \u00e9 uma biblioteca de plotagem 2D do Python que produz in\u00fameros gr\u00e1ficos de qualidade em uma variedade de formatos e ambientes interativos. O Matplotlib pode ser usado em scripts Python, nos shells do Python e do IPython, no notebook Jupyter, nos servidores de aplicativos da web e em kits de ferramentas de interface gr\u00e1fica do usu\u00e1rio. Para mais informa\u00e7\u00f5es sobre esta biblioteca, clicar aqui . Neste tutorial, o matplotlib ser\u00e1 utilizado com o aux\u00edio do numpy e do data-set iris, que pode ser encontrado aqui . OBS: cliclar na op\u00e7\u00e3o iris.data Instala\u00e7\u00e3o - Matplotlib Essa biblioteca n\u00e3o \u00e9 nativa do Python, logo voc\u00ea precisar\u00e1 instalar. Se voc\u00ea baixou o pacote Anaconda, como recomendado nesta documenta\u00e7\u00e3o, o matplotlib j\u00e1 estar\u00e1 incluso Caso contr\u00e1rio, voc\u00ea dever\u00e1 utilizar a ferramenta pip do seu python. Digite o seguinte comando no seu terminal linux ou prompt windowns. pip install matplotlib Tutorial Importando as bibliotecas Utilizando o editor de sua prefer\u00eancia como o vsCode, atom ou Pycharm, importe as bibliotecas. import numpy as np import matplotlib.pyplot as plt %matplotlib inline O uso do matplotlib inline \u00e9 recomendado para quem estiver utilizando o jupyter, para que o gr\u00e1fico seja plotado em sua linha de comando. Quem estiver utilizando o shell, terminal ou ipython, recomenda-se colocar o plt.show() no final de cada chamada de gr\u00e1fico. Lendo o data set Aten\u00e7\u00e3o: o caminho ../_DATASET corresponde ao local em que est\u00e1 salvo o meu arquivo iris.data. In [1]: data = np.genfromtxt('../_DATASET/iris.data', delimiter=',', usecols=(0,1,2,3)) In [2]: data Out[2]: array ([[5.1, 3.5, 1.4, 0.2], [4.9, 3. , 1.4, 0.2], [4.7, 3.2, 1.3, 0.2], [4.6, 3.1, 1.5, 0.2], [5. , 3.6, 1.4, 0.2], [5.4, 3.9, 1.7, 0.4], [4.6, 3.4, 1.4, 0.3], [5. , 3.4, 1.5, 0.2], [4.4, 2.9, 1.4, 0.2], [4.9, 3.1, 1.5, 0.1], [5.4, 3.7, 1.5, 0.2], [4.8, 3.4, 1.6, 0.2], [4.8, 3. , 1.4, 0.1], [4.3, 3. , 1.1, 0.1], [5.8, 4. , 1.2, 0.2], [5.7, 4.4, 1.5, 0.4], [5.4, 3.9, 1.3, 0.4], [5.1, 3.5, 1.4, 0.3], [5.7, 3.8, 1.7, 0.3], [5.1, 3.8, 1.5, 0.3], [5.4, 3.4, 1.7, 0.2], [5.1, 3.7, 1.5, 0.4], [4.6, 3.6, 1. , 0.2], [5.1, 3.3, 1.7, 0.5], [4.8, 3.4, 1.9, 0.2], [5. , 3. , 1.6, 0.2], [5. , 3.4, 1.6, 0.4], [5.2, 3.5, 1.5, 0.2], [5.2, 3.4, 1.4, 0.2], [4.7, 3.2, 1.6, 0.2], [4.8, 3.1, 1.6, 0.2], [5.4, 3.4, 1.5, 0.4], [5.2, 4.1, 1.5, 0.1], [5.5, 4.2, 1.4, 0.2], [4.9, 3.1, 1.5, 0.1], [5. , 3.2, 1.2, 0.2], [5.5, 3.5, 1.3, 0.2], [4.9, 3.1, 1.5, 0.1], [4.4, 3. , 1.3, 0.2], [5.1, 3.4, 1.5, 0.2], [5. , 3.5, 1.3, 0.3], [4.5, 2.3, 1.3, 0.3], [4.4, 3.2, 1.3, 0.2], [5. , 3.5, 1.6, 0.6], [5.1, 3.8, 1.9, 0.4], [4.8, 3. , 1.4, 0.3], [5.1, 3.8, 1.6, 0.2], [4.6, 3.2, 1.4, 0.2], [5.3, 3.7, 1.5, 0.2], [5. , 3.3, 1.4, 0.2], [7. , 3.2, 4.7, 1.4], [6.4, 3.2, 4.5, 1.5], [6.9, 3.1, 4.9, 1.5], [5.5, 2.3, 4. , 1.3], [6.5, 2.8, 4.6, 1.5], [5.7, 2.8, 4.5, 1.3], [6.3, 3.3, 4.7, 1.6], [4.9, 2.4, 3.3, 1. ], [6.6, 2.9, 4.6, 1.3], [5.2, 2.7, 3.9, 1.4], [5. , 2. , 3.5, 1. ], [5.9, 3. , 4.2, 1.5], [6. , 2.2, 4. , 1. ], [6.1, 2.9, 4.7, 1.4], [5.6, 2.9, 3.6, 1.3], [6.7, 3.1, 4.4, 1.4], [5.6, 3. , 4.5, 1.5], [5.8, 2.7, 4.1, 1. ], [6.2, 2.2, 4.5, 1.5], [5.6, 2.5, 3.9, 1.1], [5.9, 3.2, 4.8, 1.8], [6.1, 2.8, 4. , 1.3], [6.3, 2.5, 4.9, 1.5], [6.1, 2.8, 4.7, 1.2], [6.4, 2.9, 4.3, 1.3], [6.6, 3. , 4.4, 1.4], [6.8, 2.8, 4.8, 1.4], [6.7, 3. , 5. , 1.7], [6. , 2.9, 4.5, 1.5], [5.7, 2.6, 3.5, 1. ], [5.5, 2.4, 3.8, 1.1], [5.5, 2.4, 3.7, 1. ], [5.8, 2.7, 3.9, 1.2], [6. , 2.7, 5.1, 1.6], [5.4, 3. , 4.5, 1.5], [6. , 3.4, 4.5, 1.6], [6.7, 3.1, 4.7, 1.5], [6.3, 2.3, 4.4, 1.3], [5.6, 3. , 4.1, 1.3], [5.5, 2.5, 4. , 1.3], [5.5, 2.6, 4.4, 1.2], [6.1, 3. , 4.6, 1.4], [5.8, 2.6, 4. , 1.2], [5. , 2.3, 3.3, 1. ], [5.6, 2.7, 4.2, 1.3], [5.7, 3. , 4.2, 1.2], [5.7, 2.9, 4.2, 1.3], [6.2, 2.9, 4.3, 1.3], [5.1, 2.5, 3. , 1.1], [5.7, 2.8, 4.1, 1.3], [6.3, 3.3, 6. , 2.5], [5.8, 2.7, 5.1, 1.9], [7.1, 3. , 5.9, 2.1], [6.3, 2.9, 5.6, 1.8], [6.5, 3. , 5.8, 2.2], [7.6, 3. , 6.6, 2.1], [4.9, 2.5, 4.5, 1.7], [7.3, 2.9, 6.3, 1.8], [6.7, 2.5, 5.8, 1.8], [7.2, 3.6, 6.1, 2.5], [6.5, 3.2, 5.1, 2. ], [6.4, 2.7, 5.3, 1.9], [6.8, 3. , 5.5, 2.1], [5.7, 2.5, 5. , 2. ], [5.8, 2.8, 5.1, 2.4], [6.4, 3.2, 5.3, 2.3], [6.5, 3. , 5.5, 1.8], [7.7, 3.8, 6.7, 2.2], [7.7, 2.6, 6.9, 2.3], [6. , 2.2, 5. , 1.5], [6.9, 3.2, 5.7, 2.3], [5.6, 2.8, 4.9, 2. ], [7.7, 2.8, 6.7, 2. ], [6.3, 2.7, 4.9, 1.8], [6.7, 3.3, 5.7, 2.1], [7.2, 3.2, 6. , 1.8], [6.2, 2.8, 4.8, 1.8], [6.1, 3. , 4.9, 1.8], [6.4, 2.8, 5.6, 2.1], [7.2, 3. , 5.8, 1.6], [7.4, 2.8, 6.1, 1.9], [7.9, 3.8, 6.4, 2. ], [6.4, 2.8, 5.6, 2.2], [6.3, 2.8, 5.1, 1.5], [6.1, 2.6, 5.6, 1.4], [7.7, 3. , 6.1, 2.3], [6.3, 3.4, 5.6, 2.4], [6.4, 3.1, 5.5, 1.8], [6. , 3. , 4.8, 1.8], [6.9, 3.1, 5.4, 2.1], [6.7, 3.1, 5.6, 2.4], [6.9, 3.1, 5.1, 2.3], [5.8, 2.7, 5.1, 1.9], [6.8, 3.2, 5.9, 2.3], [6.7, 3.3, 5.7, 2.5], [6.7, 3. , 5.2, 2.3], [6.3, 2.5, 5. , 1.9], [6.5, 3. , 5.2, 2. ], [6.2, 3.4, 5.4, 2.3], [5.9, 3. , 5.1, 1.8]]) Selecionar somente a coluna, ou seja, selecionar somente o comprimento das sepolas In [3]: data[:,0] Out[3]: array([5.1, 4.9, 4.7, 4.6, 5. , 5.4, 4.6, 5. , 4.4, 4.9, 5.4, 4.8, 4.8, 4.3, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 4.6, 5.1, 4.8, 5. , 5. , 5.2, 5.2, 4.7, 4.8, 5.4, 5.2, 5.5, 4.9, 5. , 5.5, 4.9, 4.4, 5.1, 5. , 4.5, 4.4, 5. , 5.1, 4.8, 5.1, 4.6, 5.3, 5. , 7. , 6.4, 6.9, 5.5, 6.5, 5.7, 6.3, 4.9, 6.6, 5.2, 5. , 5.9, 6. , 6.1, 5.6, 6.7, 5.6, 5.8, 6.2, 5.6, 5.9, 6.1, 6.3, 6.1, 6.4, 6.6, 6.8, 6.7, 6. , 5.7, 5.5, 5.5, 5.8, 6. , 5.4, 6. , 6.7, 6.3, 5.6, 5.5, 5.5, 6.1, 5.8, 5. , 5.6, 5.7, 5.7, 6.2, 5.1, 5.7, 6.3, 5.8, 7.1, 6.3, 6.5, 7.6, 4.9, 7.3, 6.7, 7.2, 6.5, 6.4, 6.8, 5.7, 5.8, 6.4, 6.5, 7.7, 7.7, 6. , 6.9, 5.6, 7.7, 6.3, 6.7, 7.2, 6.2, 6.1, 6.4, 7.2, 7.4, 7.9, 6.4, 6.3, 6.1, 7.7, 6.3, 6.4, 6. , 6.9, 6.7, 6.9, 5.8, 6.8, 6.7, 6.7, 6.3, 6.5, 6.2, 5.9]) Selecionar a primeira coluna, somente os 50 primeiros dados, ou seja, Iris Setosa In [4]: data[:50,0] Out[4]: array([5.1, 4.9, 4.7, 4.6, 5. , 5.4, 4.6, 5. , 4.4, 4.9, 5.4, 4.8, 4.8, 4.3, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 4.6, 5.1, 4.8, 5. , 5. , 5.2, 5.2, 4.7, 4.8, 5.4, 5.2, 5.5, 4.9, 5. , 5.5, 4.9, 4.4, 5.1, 5. , 4.5, 4.4, 5. , 5.1, 4.8, 5.1, 4.6, 5.3, 5. ]) Plotando Gr\u00e1ficos Plotando o gr\u00e1fico das 50 primeiras iris(iris setosa)(coluna 1) In [5]: plt.plot(data[:50,0], c='Red', ls=':', marker='s', ms=8) Out[5]: [<matplotlib.lines.Line2D at 0x7f2844d13940>] Gr\u00e1fico plotado. OBS: Caso n\u00e3o esteja usando o jupyter, voc\u00ea dever\u00e1 colocar plt.show(), como no exemplo abaixo: In [6]: plt.plot(data[:50,0], c='Red', ls=':', marker='s', ms=8) In [7]: plt.show() Selecionar a primeira coluna, somente dos 50 a 100, ou seja, Iris Versicolor In [8]: data[50:100,0] Out[8]: array([7. , 6.4, 6.9, 5.5, 6.5, 5.7, 6.3, 4.9, 6.6, 5.2, 5. , 5.9, 6. , 6.1, 5.6, 6.7, 5.6, 5.8, 6.2, 5.6, 5.9, 6.1, 6.3, 6.1, 6.4, 6.6, 6.8, 6.7, 6. , 5.7, 5.5, 5.5, 5.8, 6. , 5.4, 6. , 6.7, 6.3, 5.6, 5.5, 5.5, 6.1, 5.8, 5. , 5.6, 5.7, 5.7, 6.2, 5.1, 5.7]) Plotando um gr\u00e1fico comparativo das petolas da: Iris Setosa e Iris Versicolor In [8]: plt.plot(data[:50,0], c='Red', ls=':', marker='s', ms=8, label='Comp. S\u00e9pala Iris-Setosa') plt.plot(data[50:100,0], c='Black', ls=':', marker='o', ms=8, label='Comp. S\u00e9pala Iris-Versicolor') plt.legend() plt.show() Gr\u00e1fico plotado.","title":"PythonDados"},{"location":"DATA-SCIENCE/pythonDados/#python","text":"AINDA EM CONSTRU\u00c7\u00c3O Como toda boa an\u00e1lise de dados, \u00e9 necess\u00e1rio uma boa ferramenta de manipula\u00e7\u00e3o destes dados. Nesta documenta\u00e7\u00e3o falaremos o tempo todo em ferramentas de manipula\u00e7\u00e3o de dados. Logo, recomendo fortemente que voc\u00ea tenha instalado a distribui\u00e7\u00e3o anaconda, pois ela j\u00e1 vem munida da linguagem de programa\u00e7\u00e3o python e sua principais bibliotecas, como pandas, numpy, matplotlib, seaborn etc. Caso contr\u00e1rio, voc\u00ea poder\u00e1 instalar o python e as bibliotecas separadamente. Segue o link do Anaconda e do python. Observa\u00e7\u00e3o: Recomendo que instale o pack anaconda, assim n\u00e3o precisar\u00e1 instalar mais nada. ANACONDA PYTHON","title":"PYTHON"},{"location":"DATA-SCIENCE/pythonDados/#comandos-uteis","text":"Lista de comandos para an\u00e1lise de dados em python","title":"COMANDOS \u00daTEIS"},{"location":"DATA-SCIENCE/pythonDados/#numpy","text":"(Introdu\u00e7\u00e3o ao Numpy) O NumPy \u00e9 uma poderosa biblioteca da linguagem de programa\u00e7\u00e3o Python, que permite trabalhar com efici\u00eancia vetores, matrizes, arranjos e permite diversas fun\u00e7\u00f5es e opera\u00e7\u00f5es matem\u00e1ticas. Assim como no python, o Numpy possui um sintaxe clara e objetiva. Dentro da matem\u00e1tica, esta biblioteca permite trabalhar, de forma aplicada, com arranjos multidimensionais, matrizes de n dimens\u00f5es, \u00e1lgebra linear, gera\u00e7\u00e3o de n\u00fameros aleat\u00f3rios etc. Para mais informa\u00e7\u00f5es sobre o Numpy clique aqui .","title":"Numpy"},{"location":"DATA-SCIENCE/pythonDados/#matplotlib","text":"Segundo a documenta\u00e7\u00e3o oficial, o Matplotlib \u00e9 uma biblioteca de plotagem 2D do Python que produz in\u00fameros gr\u00e1ficos de qualidade em uma variedade de formatos e ambientes interativos. O Matplotlib pode ser usado em scripts Python, nos shells do Python e do IPython, no notebook Jupyter, nos servidores de aplicativos da web e em kits de ferramentas de interface gr\u00e1fica do usu\u00e1rio. Para mais informa\u00e7\u00f5es sobre esta biblioteca, clicar aqui . Neste tutorial, o matplotlib ser\u00e1 utilizado com o aux\u00edio do numpy e do data-set iris, que pode ser encontrado aqui . OBS: cliclar na op\u00e7\u00e3o iris.data Instala\u00e7\u00e3o - Matplotlib Essa biblioteca n\u00e3o \u00e9 nativa do Python, logo voc\u00ea precisar\u00e1 instalar. Se voc\u00ea baixou o pacote Anaconda, como recomendado nesta documenta\u00e7\u00e3o, o matplotlib j\u00e1 estar\u00e1 incluso Caso contr\u00e1rio, voc\u00ea dever\u00e1 utilizar a ferramenta pip do seu python. Digite o seguinte comando no seu terminal linux ou prompt windowns. pip install matplotlib","title":"MATPLOTLIB"},{"location":"DATABASES/mongoDB/","text":"MONGO_DB MongoDB \u00e9 um banco de dados orientado a documentos, \u00e9 de c\u00f3digo aberto, gratuito e de alta performance. Foi escrito na linguagem de programa\u00e7\u00e3o C++, o que o torna multiplataforma. Classificado como um programa de banco de dados NoSQL, o MongoDB usa documentos semelhantes a JSON com esquemas. \u00c9 desenvolvido pela MongoDB Inc. e publicado sob uma combina\u00e7\u00e3o da GNU Affero General Public License e Licen\u00e7a Apache. Suas caracter\u00edsticas permitem com que as aplica\u00e7\u00f5es modelem informa\u00e7\u00f5es de modo muito mais natural, pois os dados podem ser aninhados em hierarquias complexas e continuar a ser index\u00e1veis e f\u00e1ceis de buscar. MONGO - LOGIN MONGO - HOME Acesse meu github para consultar a documenta\u00e7\u00e3o completa, l\u00e1 voc\u00ea encontrar\u00e1, al\u00e9m desta documenta\u00e7\u00e3o, alguns exemplos de python funcional utilizando o mongoDB e a pymongo. GITHUB OBS: Para esta documenta\u00e7\u00e3o foi utilizado um cluster no mongodb cloud. Install # No terminal $ python -m pip install pymongo $ python -m pip install pymongo[srv] Import from pymongo import MongoClient from pprint import pprint OBS: A biblioteca pprint foi utilizada para que o outputs fossem estilizados semelhantes formato json. Connect connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") Create - DB Criando o banco de dados \"moonlightDB\" e instanciando uma variavel de mesmo nome a ele. #Estabelecendo a conex\u00e3o connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") #Criando um DB moonlightDB = connection[\"moonlightDB\"] Create - Collection Criando uma cole\u00e7\u00e3o (Tabela) \"heroes\" e instanciando uma variavel de mesmo nome a esta cole\u00e7\u00e3o. #Estabelecendo a conex\u00e3o connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") #Criando um DB moonlightDB = connection[\"moonlightDB\"] #Criando uma colection heroes = moonlightDB[\"heroes\"] OBS: No MongoDB, um banco de dados e uma cole\u00e7\u00e3o n\u00e3o \u00e9 criada at\u00e9 obter conte\u00fado! O MongoDB aguarda at\u00e9 que voc\u00ea tenha inserido um documento antes que ele realmente crie a cole\u00e7\u00e3o. Create - document Criando um documento (Paladino) e inserindo ele em uma cole\u00e7\u00e3o (heroes): #Estabelecendo a conex\u00e3o connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") #Criando um DB moonlightDB = connection[\"moonlightDB\"] #Criando uma colection heroes = moonlightDB[\"heroes\"] #Criando um documento Paladino = { \"name\": \"Jonathan\", \"Classe\": \"paladino\", \"for\u00e7a\": 21, \"defesa\": 19, \"arma\": \"espada longa\", \"poder1\": \"ataque divino\", \"poder2\": \"cura pelas m\u00e3os\" } inserCole\u00e7ao = heroes.insert_one(Paladino) print(inserCole\u00e7ao.inserted_id) Criando v\u00e1rios documentos e inserindo eles em uma cole\u00e7\u00e3o (Tabela): variosHerois = [{ \"name\": \"Leda\", \"Classe\": \"mago de fogo\", \"for\u00e7a\": 18, \"defesa\": 13, \"arma\": \"cajado\", \"poder1\": \"bola de fogo\", \"poder2\": \"chuva de meteoro\" }, { \"name\": \"Anny\", \"Classe\": \"animal\", \"for\u00e7a\": 11, \"defesa\": 15, \"arma\": \"guarra\", \"poder1\": \"furtividade\", \"poder2\": \"guarras afiadas\" }, { \"name\": \"Nick\", \"Classe\": \"animal\", \"for\u00e7a\": 15, \"defesa\": 14, \"arma\": \"mordida\", \"poder1\": \"velocidade\", \"poder2\": \"mordida frontal\" }, ] inserindoTudo = heroes.insert_many(variosHerois) print(inserindoTudo.inserted_ids) Criando um documento com ID. Lembre-se, dois documentos N\u00c3O podem ter o mesmo ID. # Paladino = { \"_id\": 1, # \"name\": \"Jonathan\", # \"Classe\": \"paladino\", # \"for\u00e7a\": 24, # \"defesa\": 19, # \"arma\": \"espada longa\", # \"poder1\": \"ataque divino\", # \"poder2\": \"cura pelas m\u00e3os\" } # inserCole\u00e7ao = heroes.insert_one(Paladino) # print(inserCole\u00e7ao.inserted_id) Posso criar documentos com mais {chave: valor} em uma mesma colection. Paladino = { \"_id\": 2, \"name\": \"Trevor\", \"Classe\": \"Knight\", \"for\u00e7a\": 24, \"defesa\": 19, \"arma\": \"espada longa\", \"poder1\": \"ataque divino\", \"poder2\": \"cura pelas m\u00e3os\", \"poder3\": \"Espada da noite\" } inserCole\u00e7ao = heroes.insert_one(Paladino) print(inserCole\u00e7ao.inserted_id) Select - Data Base Listando e buscando banco de dados em minha conta mongoDB. Lembrando que minha conex\u00e3o est\u00e1 com o nome de \"coonection\" pprint (connection.list_database_names()) dblist = connection.list_database_names() if \"moonlightDB\" in dblist: print(\"O banco de dados existe.\") else: print (\"O banco de dados n\u00e3o existe.\") Select - Collection Listando e buscando cole\u00e7\u00f5es (Tabelas) no meu banco de dados \"moonlight\". pprint (moonlightDB.list_collection_names()) collist = moonlightDB.list_collection_names() if \"heroes\" in collist: print(\"A cole\u00e7\u00e3o existe.\") Contando o n\u00famero de documentos dentro da minha colection pprint(heroes.count_documents({})) Select - Docment Selecionando o primeiro documento da cole\u00e7\u00e3o (heroes) pprint(heroes.find_one()) Selecionando um documento por {chave: Valor}: pprint(heroes.find_one({\"arma\": \"mordida\"})) Selecionando todos os documentos da minha cole\u00e7\u00e3o: for personagens in heroes.find(): pprint(personagens) Selecionando todos os documentos da minha cole\u00e7\u00e3o (N\u00famero limitado) selLimite = heroes.find().limit(5) for x in selLimite: pprint(x) Selecionando todos os documentos que possuem uma mesma {chave:valor} selecionada: for animais in heroes.find({\"classe\": \"animal\"}): pprint(animais) Selecionando o nome e a arma de todos os documentos. S\u00f3 posso atribuir falso (0) para o id, pois ele \u00e9 o unico que aparece mesmo quando n\u00e3o mensionado. for nomes in heroes.find({},{ \"_id\": 0, \"name\": 1, \"arma\": 1 }): pprint(nomes) #Neste caso o ID, aparecer\u00e1 tamb\u00e9m. for armas in heroes.find({},{ \"name\": 1, \"arma\": 1 }): pprint(armas) #Neste caso o id n\u00e3o aparecer\u00e1. for classes in heroes.find({},{ \"_id\": 0, \"classe\": 1, \"name\": 1, \"arma\": 1 }): pprint(classes) Instanciando uma busca. cajado = { \"arma\": \"cajado\" } busca = heroes.find(cajado) for x in busca: pprint(x) Buscar os documento em que o valor da chave nome comessem com a letra T ou posterior no alfabeto. (T, U, V, ...). Lembrando que os nomes est\u00e3o em mai\u00fascula. A mesma busca pode ser feita por regex: letraJ = { \"name\": { \"$regex\": \"^S\" } } letraJ = { \"name\": { \"$gt\": \"T\" } } busca = heroes.find(letraJ) for x in busca: pprint(x) # >>>>>> Selecionando os documentos por ordem alfab\u00e9tica (nome): nomePorOredem = heroes.find().sort(\"name\") for x in nomePorOredem: pprint(x) # >>>>>> Selecionando por ordem decrescente. Para o caso de ordem crescente substituir o -1 por 1. ordemDecrescente = heroes.find().sort(\"name\", -1) for x in ordemDecrescente: pprint(x) Delete - Document Deleta o primeiro documento com o nome selecionado delNome = { \"name\": \"Jonathan\" } heroes.delete_one(delNome) Deletando v\u00e1rios documentos e retornando o n\u00famero de documentos deletados. delVarios = { \"name\": {\"$regex\": \"^N\"} } deletados = heroes.delete_many(delVarios) print(deletados.deleted_count) Deletando todos os documentos de uma cole\u00e7\u00e3o: delTodos = heroes.delete_many({}) print(delTodos.deleted_count) Delete - Collection heores.drop() Update - Values Alterando valores de um documento: valorAntigo = { \"name\": \"Trevor\" } novoValor = { \"$set\": { \"name\": \"Belmont\" } } heroes.update_one(valorAntigo, novoValor) Refer\u00eancias: https://pt.wikipedia.org/wiki/MongoDB https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/ https://codehandbook.org/pymongo-tutorial-crud-operation-mongodb/ https://www.w3schools.com/python/python_mongodb_getstarted.asp https://imasters.com.br/banco-de-dados/mongodb-para-iniciantes-em-nosql https://api.mongodb.com/python/current/tutorial.html https://pypi.org/project/pymongo/","title":"MongoDB"},{"location":"DATABASES/mongoDB/#mongo_db","text":"MongoDB \u00e9 um banco de dados orientado a documentos, \u00e9 de c\u00f3digo aberto, gratuito e de alta performance. Foi escrito na linguagem de programa\u00e7\u00e3o C++, o que o torna multiplataforma. Classificado como um programa de banco de dados NoSQL, o MongoDB usa documentos semelhantes a JSON com esquemas. \u00c9 desenvolvido pela MongoDB Inc. e publicado sob uma combina\u00e7\u00e3o da GNU Affero General Public License e Licen\u00e7a Apache. Suas caracter\u00edsticas permitem com que as aplica\u00e7\u00f5es modelem informa\u00e7\u00f5es de modo muito mais natural, pois os dados podem ser aninhados em hierarquias complexas e continuar a ser index\u00e1veis e f\u00e1ceis de buscar. MONGO - LOGIN MONGO - HOME Acesse meu github para consultar a documenta\u00e7\u00e3o completa, l\u00e1 voc\u00ea encontrar\u00e1, al\u00e9m desta documenta\u00e7\u00e3o, alguns exemplos de python funcional utilizando o mongoDB e a pymongo. GITHUB OBS: Para esta documenta\u00e7\u00e3o foi utilizado um cluster no mongodb cloud.","title":"MONGO_DB"},{"location":"DATABASES/mongoDB/#install","text":"# No terminal $ python -m pip install pymongo $ python -m pip install pymongo[srv]","title":"Install"},{"location":"DATABASES/mongoDB/#import","text":"from pymongo import MongoClient from pprint import pprint OBS: A biblioteca pprint foi utilizada para que o outputs fossem estilizados semelhantes formato json.","title":"Import"},{"location":"DATABASES/mongoDB/#connect","text":"connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\")","title":"Connect"},{"location":"DATABASES/mongoDB/#create-db","text":"Criando o banco de dados \"moonlightDB\" e instanciando uma variavel de mesmo nome a ele. #Estabelecendo a conex\u00e3o connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") #Criando um DB moonlightDB = connection[\"moonlightDB\"]","title":"Create - DB"},{"location":"DATABASES/mongoDB/#create-collection","text":"Criando uma cole\u00e7\u00e3o (Tabela) \"heroes\" e instanciando uma variavel de mesmo nome a esta cole\u00e7\u00e3o. #Estabelecendo a conex\u00e3o connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") #Criando um DB moonlightDB = connection[\"moonlightDB\"] #Criando uma colection heroes = moonlightDB[\"heroes\"] OBS: No MongoDB, um banco de dados e uma cole\u00e7\u00e3o n\u00e3o \u00e9 criada at\u00e9 obter conte\u00fado! O MongoDB aguarda at\u00e9 que voc\u00ea tenha inserido um documento antes que ele realmente crie a cole\u00e7\u00e3o.","title":"Create - Collection"},{"location":"DATABASES/mongoDB/#create-document","text":"Criando um documento (Paladino) e inserindo ele em uma cole\u00e7\u00e3o (heroes): #Estabelecendo a conex\u00e3o connection = MongoClient(\"mongodb+srv://login:senha@cluster0-5ueib.mongodb.net/test?retryWrites=true&w=majority\") #Criando um DB moonlightDB = connection[\"moonlightDB\"] #Criando uma colection heroes = moonlightDB[\"heroes\"] #Criando um documento Paladino = { \"name\": \"Jonathan\", \"Classe\": \"paladino\", \"for\u00e7a\": 21, \"defesa\": 19, \"arma\": \"espada longa\", \"poder1\": \"ataque divino\", \"poder2\": \"cura pelas m\u00e3os\" } inserCole\u00e7ao = heroes.insert_one(Paladino) print(inserCole\u00e7ao.inserted_id) Criando v\u00e1rios documentos e inserindo eles em uma cole\u00e7\u00e3o (Tabela): variosHerois = [{ \"name\": \"Leda\", \"Classe\": \"mago de fogo\", \"for\u00e7a\": 18, \"defesa\": 13, \"arma\": \"cajado\", \"poder1\": \"bola de fogo\", \"poder2\": \"chuva de meteoro\" }, { \"name\": \"Anny\", \"Classe\": \"animal\", \"for\u00e7a\": 11, \"defesa\": 15, \"arma\": \"guarra\", \"poder1\": \"furtividade\", \"poder2\": \"guarras afiadas\" }, { \"name\": \"Nick\", \"Classe\": \"animal\", \"for\u00e7a\": 15, \"defesa\": 14, \"arma\": \"mordida\", \"poder1\": \"velocidade\", \"poder2\": \"mordida frontal\" }, ] inserindoTudo = heroes.insert_many(variosHerois) print(inserindoTudo.inserted_ids) Criando um documento com ID. Lembre-se, dois documentos N\u00c3O podem ter o mesmo ID. # Paladino = { \"_id\": 1, # \"name\": \"Jonathan\", # \"Classe\": \"paladino\", # \"for\u00e7a\": 24, # \"defesa\": 19, # \"arma\": \"espada longa\", # \"poder1\": \"ataque divino\", # \"poder2\": \"cura pelas m\u00e3os\" } # inserCole\u00e7ao = heroes.insert_one(Paladino) # print(inserCole\u00e7ao.inserted_id) Posso criar documentos com mais {chave: valor} em uma mesma colection. Paladino = { \"_id\": 2, \"name\": \"Trevor\", \"Classe\": \"Knight\", \"for\u00e7a\": 24, \"defesa\": 19, \"arma\": \"espada longa\", \"poder1\": \"ataque divino\", \"poder2\": \"cura pelas m\u00e3os\", \"poder3\": \"Espada da noite\" } inserCole\u00e7ao = heroes.insert_one(Paladino) print(inserCole\u00e7ao.inserted_id)","title":"Create - document"},{"location":"DATABASES/mongoDB/#select-data-base","text":"Listando e buscando banco de dados em minha conta mongoDB. Lembrando que minha conex\u00e3o est\u00e1 com o nome de \"coonection\" pprint (connection.list_database_names()) dblist = connection.list_database_names() if \"moonlightDB\" in dblist: print(\"O banco de dados existe.\") else: print (\"O banco de dados n\u00e3o existe.\")","title":"Select - Data Base"},{"location":"DATABASES/mongoDB/#select-collection","text":"Listando e buscando cole\u00e7\u00f5es (Tabelas) no meu banco de dados \"moonlight\". pprint (moonlightDB.list_collection_names()) collist = moonlightDB.list_collection_names() if \"heroes\" in collist: print(\"A cole\u00e7\u00e3o existe.\") Contando o n\u00famero de documentos dentro da minha colection pprint(heroes.count_documents({}))","title":"Select - Collection"},{"location":"DATABASES/mongoDB/#select-docment","text":"Selecionando o primeiro documento da cole\u00e7\u00e3o (heroes) pprint(heroes.find_one()) Selecionando um documento por {chave: Valor}: pprint(heroes.find_one({\"arma\": \"mordida\"})) Selecionando todos os documentos da minha cole\u00e7\u00e3o: for personagens in heroes.find(): pprint(personagens) Selecionando todos os documentos da minha cole\u00e7\u00e3o (N\u00famero limitado) selLimite = heroes.find().limit(5) for x in selLimite: pprint(x) Selecionando todos os documentos que possuem uma mesma {chave:valor} selecionada: for animais in heroes.find({\"classe\": \"animal\"}): pprint(animais) Selecionando o nome e a arma de todos os documentos. S\u00f3 posso atribuir falso (0) para o id, pois ele \u00e9 o unico que aparece mesmo quando n\u00e3o mensionado. for nomes in heroes.find({},{ \"_id\": 0, \"name\": 1, \"arma\": 1 }): pprint(nomes) #Neste caso o ID, aparecer\u00e1 tamb\u00e9m. for armas in heroes.find({},{ \"name\": 1, \"arma\": 1 }): pprint(armas) #Neste caso o id n\u00e3o aparecer\u00e1. for classes in heroes.find({},{ \"_id\": 0, \"classe\": 1, \"name\": 1, \"arma\": 1 }): pprint(classes) Instanciando uma busca. cajado = { \"arma\": \"cajado\" } busca = heroes.find(cajado) for x in busca: pprint(x) Buscar os documento em que o valor da chave nome comessem com a letra T ou posterior no alfabeto. (T, U, V, ...). Lembrando que os nomes est\u00e3o em mai\u00fascula. A mesma busca pode ser feita por regex: letraJ = { \"name\": { \"$regex\": \"^S\" } } letraJ = { \"name\": { \"$gt\": \"T\" } } busca = heroes.find(letraJ) for x in busca: pprint(x) # >>>>>> Selecionando os documentos por ordem alfab\u00e9tica (nome): nomePorOredem = heroes.find().sort(\"name\") for x in nomePorOredem: pprint(x) # >>>>>> Selecionando por ordem decrescente. Para o caso de ordem crescente substituir o -1 por 1. ordemDecrescente = heroes.find().sort(\"name\", -1) for x in ordemDecrescente: pprint(x)","title":"Select - Docment"},{"location":"DATABASES/mongoDB/#delete-document","text":"Deleta o primeiro documento com o nome selecionado delNome = { \"name\": \"Jonathan\" } heroes.delete_one(delNome) Deletando v\u00e1rios documentos e retornando o n\u00famero de documentos deletados. delVarios = { \"name\": {\"$regex\": \"^N\"} } deletados = heroes.delete_many(delVarios) print(deletados.deleted_count) Deletando todos os documentos de uma cole\u00e7\u00e3o: delTodos = heroes.delete_many({}) print(delTodos.deleted_count)","title":"Delete - Document"},{"location":"DATABASES/mongoDB/#delete-collection","text":"heores.drop()","title":"Delete - Collection"},{"location":"DATABASES/mongoDB/#update-values","text":"Alterando valores de um documento: valorAntigo = { \"name\": \"Trevor\" } novoValor = { \"$set\": { \"name\": \"Belmont\" } } heroes.update_one(valorAntigo, novoValor) Refer\u00eancias: https://pt.wikipedia.org/wiki/MongoDB https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/ https://codehandbook.org/pymongo-tutorial-crud-operation-mongodb/ https://www.w3schools.com/python/python_mongodb_getstarted.asp https://imasters.com.br/banco-de-dados/mongodb-para-iniciantes-em-nosql https://api.mongodb.com/python/current/tutorial.html https://pypi.org/project/pymongo/","title":"Update - Values"},{"location":"DATABASES/mysql/","text":"MySQL O MySQL \u00e9 um sistema gerenciador de banco de dados relacional de c\u00f3digo aberto. O servi\u00e7o utiliza a linguagem SQL (Structured Query Language \u2013 Linguagem de Consulta Estruturada), que \u00e9 a linguagem mais popular para inserir, acessar e gerenciar o conte\u00fado armazenado num banco de dados. O MySQL \u00e9 um produto regido pela licen\u00e7a GPL (General Public License). Portanto, \u00e9 \"parcialmente\" Open Source. Nesta documenta\u00e7\u00e3o utilizarei o LAMP, um acr\u00f4nimo para Linux, Apache, MySQL e Perl/PHP/Python. Nesse conjunto de aplica\u00e7\u00f5es, inclui-se, respectivamente, um sistema operacional, um servidor web, um sistema gerenciador de banco de dados e uma linguagem de programa\u00e7\u00e3o. Instala\u00e7\u00e3o OBS: O sistema operacional utilizado \u00e9 o Linux Ubuntu. Executar em ordem, no terminal: Instalando o Apache sudo apt update sudo apt upgrade -y sudo apt install -y apache2 Para testar se o Apache est\u00e1 funcionando corretamente, devemos digitar localhost na barra de endere\u00e7os do navegador de sua prefer\u00eancia. Instalando o PHP sudo apt install -y php php-cli php-common php-gd php-mbstring php-intl php-xml php-zip php-pear libapache2-mod-php Testando o PHP echo \u201c<?php phpinfo(); ?>\u201d | sudo tee /var/www/html/test.php | sudo service apache2 restart Para testar o PHP no navegador, digite na p\u00e1gina de endere\u00e7os: localhost/test.php Instalando o MySQL sudo apt install -y mysql-server mysql-client php-mysql Acessar o MySQL no Terminal sudo mysql Configura\u00e7\u00e3o Criar novo usu\u00e1rio sudo mysql #Ou somente mysql(depende de seu acesso) CREATE USER 'seu_usuario'@'localhost' IDENTIFIED BY 'sua_senha'; GRANT ALL PRIVILEGES ON *.* TO 'seu_usuario'@'localhost' WITH GRANT OPTION; Entrando com o usu\u00e1rio criado sudo mysql -u seu_usuario -p #exit (para sair) Instalando o phpMyAdmin sudo apt install -y phpmyadmin Para test\u00e1-lo no navegador, digite na barra de endere\u00e7os: localhost/phpmyadmin Digite seu usu\u00e1rio e senha registrados na configura\u00e7\u00e3o do MySQL. Instala\u00e7\u00e3o do MySQL WorkBench Caso tenha algum resqu\u00edcio de alguma instala\u00e7\u00e3o do MySQL WorkBench, realize o comando: sudo apt remove --purge mysql-workbench* Instalando a depend\u00eancia do programa: sudo apt install libgtkmm-3.0-1v5 Instalando o MySQL WorkBench: sudo apt install mysql-workbench* Entre no MySQL WorkBench e depois edite a conex\u00e3o. Troque o nome do usu\u00e1rio (username) root para o seu_usuario. Feche o programa e depois entre novamente. Digite a sua senha e o MySQL WorkBench estar\u00e1 funcionando normalmente. MYSQL B\u00c1SICOS CREATE DATABASES CREATE DATABASE meu_banco default character set utf8 default collate utf8_general_ci; SHOW DATABASES SHOW DATABASES; +--------------------+ | Database | +--------------------+ | information_schema | | crudaplication | | formulariopdi | | mysql | | performance_schema | | sys | | testando | +--------------------+ USE USE meu_banco; CREATE TABLE Antes de criar uma tabela ou realizar qualquer opera\u00e7\u00e3o, \u00e9 necess\u00e1rio selecionar o banco de dados que vai ser usado: CREATE TABLE `clientes` ( `idCliente` mediumint(8) unsigned NOT NULL auto_increment, `nomeEmpresa` varchar(255), `nomeDiretor` varchar(255) default NULL, `numEmpregados` mediumint default NULL, PRIMARY KEY (`idCliente`) ) AUTO_INCREMENT=1; SHOW ENGINES SHOW ENGINES; Geralmente o MySQL vem com a engine InnoDB (um mecanismo mantido pela Oracle). Dentre outras fun\u00e7\u00f5es, o InnoDB permite a cria\u00e7\u00e3o de tabela com suporte para chaves estrangeiras. A XtraDB tamb\u00e9m oferece esse suporte. Enfim, estas duas engines satisfazem a condi\u00e7\u00e3o ACID, ao passo que a MyISAN n\u00e3o. 1. Atomicidade: N\u00e3o pode ser dividida em subtarefas. 1. Consist\u00eancia: Um banco de dados consistente deve permanecer consistente ap\u00f3s a transa\u00e7\u00e3o. 1. Isolamento: Duas transa\u00e7\u00f5es acorrem em paralelo, isoladas. 1. Durabilidade: Durar o tempo que for necess\u00e1rio. SHOW TABLE STATUS Ver em qual engine foi criado a tabela. SHOW TABLE STATUS; (Normalmente usa-se InnoDB por default) Para mudar a engine basta digitar, no final do create table, engine=NomeDoEngine CREATE TABLE `cursos` ( `idcurso` INT(11) NOT NULL DEFAULT '0', 'nome' varchar(30) NOT NULL, 'descricao' text, 'carga' int(10) unsigned DEFAULT NULL, 'totaulas' int(10) unsigned DEFAULT NULL, 'ano' year(4) DEFAULT '2016', PRIMARY KEY ('idcurso'), UNIQUE KEY 'nome' ('nome') ENGINE=InnoDB DEFAULT CHARSET=utf8; SHOW TABLES Sempre que quiser usar o SHOW tables deve selecionar o banco de dados primeiro. SHOW tables; +--------------------+ | Tables_in_testando | +--------------------+ | clientes | +--------------------+ DESCRIBE DESC clientes; DESCRIBE clientes; +---------------+-----------------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------+-----------------------+------+-----+---------+----------------+ | idCliente | mediumint(8) unsigned | NO | PRI | NULL | auto_increment | | nomeEmpresa | varchar(255) | YES | | NULL | | | nomeDiretor | varchar(255) | YES | | NULL | | | numEmpregados | mediumint(9) | YES | | NULL | | +---------------+-----------------------+------+-----+---------+----------------+ INSERT INTO INSERT INTO `clientes` (`nomeEmpresa`,`nomeDiretor`,`numEmpregados`) VALUES (\"Malesuada Inc.\",\"Johnny Pedd\",4847); Note que no exemplo n\u00e3o tem o campo idCliente, pois foi criado com o par\u00e2metro auto_increment. Seu preenchimento \u00e9 autom\u00e1tico. SELECT SELECT * FROM clientes; Para ver colunas selecionadas: SELECT nomeDiretor FROM clientes; +-------------------+ | nomeDiretor | +-------------------+ | Macaulay Bulkin | | Jonathan Domingos | | Leda Grasiele | +-------------------+ DELETE DELETE FROM clientes WHERE nomeDiretor = 'Jonathan Domingos'; Neste caso, deletei todos os registros ligado ao Jonathan. Minha tabela ficou assim: SELECT * FROM clientes; +-----------+-------------+-----------------+---------------+ | idCliente | nomeEmpresa | nomeDiretor | numEmpregados | +-----------+-------------+-----------------+---------------+ | 1 | In Company | Macaulay Bulkin | 4440 | | 3 | MinasSA | Leda Grasiele | 340 | +-----------+-------------+-----------------+---------------+ Cuidado: A comando DELETE acima deletar\u00e1 todos registros relacionados a Jonathan. Caso queira deletar apenas uma \u00fanica linha, identificar pelo id: DELETE FROM clientes WHERE idCliente = 7; DROP TABLE Eliminar uma tabela: DROP TABLE nome_da_tabela; DROP DATABASE Elimina um banco de dados: DROP DATABASE nome_do_banco; TRUNCATE Para limpar uma tabela, use o comando TRUNCATE. Internamente, ele remove a tabela primeiro e, depois, a recria com a mesma estrutura \u2013 s\u00f3 que sem os dados. Se houver um contador AUTO_INCREMENT, na tabela em quest\u00e3o, ele \u00e9 zerado e recolocado. Veja como funciona: TRUNCATE TABLE nome_da_tabela; UPDATE UPDATE clientes SET numEmpregados=1999 WHERE idCliente = 1; MYSQL EXEMPLOS CREATE TABLE CREATE TABLE `pessoas` ( `id` int NOT NULL AUTO_INCREMENT, `nome` varchar(30) NOT NULL, `nascimento` date, `sexo` enum('M','F'), `peso` decimal (5,2), `altura` decimal (3,2), `nacionalidade` varchar(20) DEFAULT 'Brasil', PRIMARY KEY (id) ) DEFAULT CHARSET = utf8; Outro Exemplo: CREATE TABLE IF NOT EXISTS `cursos` ( `nome` varchar(30) NOT NULL UNIQUE, `descricao` text, `carga` int UNSIGNED, `totaulas` int UNSIGNED, `ano` year DEFAULT '2016', ) DEFAULT CHARSET = utf8; INSERT INTO INSERT INTO `pessoas` (`nome`, `nascimento`, `sexo`,`peso`, `altura`, `nacionalidade`) VALUES ('Godofredo', '1984-01-02', 'M', '78.5', '1.83', 'Brasil'); INSERT INTO `pessoas` (`id`, `nome`, `nascimento`, `sexo`,`peso`, `altura`, `nacionalidade`) VALUES (DEFAULT, 'Creuza', '1999-01-02', 'F', '78.5', '1.83', 'Argentina'), (DEFAULT, 'Carlos', '1999-01-02', 'M', '80.5', '1.83', 'Uruguai'); SELECT ALL SELECT * FROM pessoas; +----+-----------+------------+------+-------+--------+---------------+ | id | nome | nascimento | sexo | peso | altura | nacionalidade | +----+-----------+------------+------+-------+--------+---------------+ | 1 | Godofredo | 1984-01-02 | M | 78.50 | 1.83 | Brasil | | 2 | Maria | 1999-01-02 | F | 78.50 | 1.83 | Portugal | | 3 | Creuza | 1999-01-02 | F | 78.50 | 1.83 | Argentina | | 4 | Carlos | 1999-01-02 | M | 80.50 | 1.83 | Uruguai | +----+-----------+------------+------+-------+--------+---------------+ DESCRIBE DESC pessoas; +---------------+---------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------+---------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | nome | varchar(30) | NO | | NULL | | | nascimento | date | YES | | NULL | | | sexo | enum('M','F') | YES | | NULL | | | peso | decimal(5,2) | YES | | NULL | | | altura | decimal(3,2) | YES | | NULL | | | nacionalidade | varchar(20) | YES | | Brasil | | +---------------+---------------+------+-----+---------+----------------+ ADD COLUMN Adicionar uma coluna em minha tabela: ALTER TABLE pessoas ADD COLUMN profissao varchar(10); DESC pessoas; +---------------+---------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------+---------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | nome | varchar(30) | NO | | NULL | | | nascimento | date | YES | | NULL | | | sexo | enum('M','F') | YES | | NULL | | | peso | decimal(5,2) | YES | | NULL | | | altura | decimal(3,2) | YES | | NULL | | | nacionalidade | varchar(20) | YES | | Brasil | | | profissao | varchar(10) | YES | | NULL | | +---------------+---------------+------+-----+---------+----------------+ ADD COLUMN 2 Adicionar uma coluna em minha tabela, escolhendo a posi\u00e7\u00e3o: ALTER TABLE pessoas ADD COLUMN profissao varchar(10) after nome; ADD COLUMN 3 Adicionar uma coluna em minha tabela, escolhendo a primeira posi\u00e7\u00e3o: ALTER TABLE pessoas ADD COLUMN c\u00f3digo INT first; MODIFY COLUMN Modificando o tipo primitivo e as constraints. No caso abaixo troquei varchar(10) por varchar(30). ALTER TABLE pessoas MODIFY COLUMN profissao varchar(20) not null default ''; CHANGE COLUMN Renomear a coluna. ALTER TABLE pessoas CHANGE COLUMN profissao prof varchar(20) not null default ''; OBS: o uso do not null defaul '' \u00e9 para permitir ter uma coluna not null. RENAME TO Renomear a tabela. ALTER TABLE pessoas RENAME TO pessoal; ADD PRIMARY KEY ALTER TABLE cursos ADD COLUMN id INT first; ALTER TABLE cursos ADD PRIMARY KEY (id); DROP COLUMN Apagar uma coluna em minha tabela: ALTER TABLE pessoas DROP COLUMN profissao; SQL - UNICAMP Este cheat Sheet foi elaborado com o intuito de ser meu material de r\u00e1pida consulta sql. Todos os c\u00f3digos descritos aqui podem ser encontrados no material do professor Andr\u00e9 Santanch\u00e8 disponibilizados em seu site. Inclusive, l\u00e1 voc\u00ea encontrar\u00e1 o material completo dispon\u00edvel para download. Algumas Observa\u00e7\u00f5es: FOREIHN KEY = Chave estrangeira que aponta para a chave prim\u00e1ria de outro campo.A\u00e7\u00f5es em rela\u00e7\u00e3o \u00e0 tabela a qual estou referenciando, ou seja, a tabela que possui a primary key. NO ACTION = impede a a\u00e7\u00e3o na tabela mestre (tabela_ref) CASCADE = propaga a a\u00e7\u00e3o da tabela mestre (Apaga tudo ou altera tudo) SET NULL = valores de refer\u00eancias alterados para nulo. SET DEFAULT = valores de refer\u00eancias alterados para default. CREATE TABLE CREATE TABLE Taxi ( Placa VARCHAR(7) NOT NULL, Marca VARCHAR(30) NOT NULL, Modelo VARCHAR(30) NOT NULL, AnoFab INTEGER, Licenca VARCHAR(9), PRIMARY KEY(Placa) ); CREATE TABLE Cliente ( CliId VARCHAR(4) NOT NULL, Nome VARCHAR(80) NOT NULL, CPF VARCHAR(14) NOT NULL, PRIMARY KEY(CliId) ); CREATE TABLE Corrida ( CliId VARCHAR(4) NOT NULL, Placa VARCHAR(7) NOT NULL, DataPedido DATE NOT NULL, PRIMARY KEY(CliId, Placa, DataPedido), FOREIGN KEY(CliId) REFERENCES Cliente(CliId) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(Placa) REFERENCES Taxi(Placa) ON DELETE NO ACTION ON UPDATE NO ACTION ); CREATE TABLE Motorista ( CNH VARCHAR(6) NOT NULL, Nome VARCHAR(80) NOT NULL, CNHValid INTEGER, Placa VARCHAR(7) NOT NULL, PRIMARY KEY(CNH), FOREIGN KEY(Placa) REFERENCES Taxi(Placa) ON DELETE NO ACTION ON UPDATE NO ACTION ); CREATE TABLE Zona ( Zona VARCHAR(40) NOT NULL, PRIMARY KEY(Zona) ); CREATE TABLE Fila ( Zona VARCHAR(40) NOT NULL, CNH VARCHAR(6) NOT NULL, DataHoraIn TIMESTAMP, DataHoraOut TIMESTAMP, KmIn INTEGER, PRIMARY KEY (Zona, CNH), FOREIGN KEY(Zona) REFERENCES Zona(Zona) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(CNH) REFERENCES Motorista(CNH) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO INSERT INTO Cliente VALUES ('1532', 'Asdr\ufffdbal', '448.754.253-65'); INSERT INTO Taxi VALUES ('DAE6534', 'Ford', 'Fiesta', 1999, 'MN572345'); INSERT INTO Corrida VALUES ('1755', 'DAE6534', '2003-02-15'); INSERT INTO Motorista VALUES ('657483', 'Asdrubal', 1, 'DXF5263'); INSERT INTO Zona VALUES ('Unicamp'); INSERT INTO Fila VALUES ('Bar\ufffdo Geraldo', '567892', '2002-06-05 09:00:00', '2002-06-05 09:30:00', 4630); SELECT SELECT * FROM Taxi; SELECT Marca, Modelo FROM Taxi; SELECT * FROM Taxi WHERE AnoFab > 2000; -- Placas que comecem com DK SELECT * FROM Taxi WHERE placa LIKE 'DK%'; ''' % (encontra qualquer cadeia com 0 a n caracteres). _ (encontra exatamente um caractere (qualquer)). = (caractere de escape) ''' -- Placas com '7' na penultima posicao SELECT * FROM Taxi WHERE placa LIKE '%7_'; -- Produto cartesiano Cliente x Corrida SELECT Cliente.CliId, Cliente.Nome, Corrida.CliId, Corrida.Placa, Corrida.DataPedido FROM Cliente, Corrida; -- Join (1) Cliente x Corrida SELECT Cliente.CliId, Cliente.Nome, Corrida.CliId, Corrida.Placa, Corrida.DataPedido FROM Cliente, Corrida WHERE Cliente.CliId = Corrida.CliId; -- Clientes (id e nome) e respectivas corridas (placa e data do pedido) SELECT Cliente.CliId, Cliente.Nome, Corrida.Placa, Corrida.DataPedido FROM Cliente, Corrida WHERE Cliente.CliId = Corrida.CliId; -- Alias (apelido) com o AS SELECT Cl.CliId, Cl.Nome, Co.Placa, Co.DataPedido FROM Cliente AS Cl, Corrida AS Co WHERE Cl.CliId = Co.CliId; -- Alias sem o AS SELECT Cl.CliId, Cl.Nome, Co.Placa, Co.DataPedido FROM Cliente Cl, Corrida Co WHERE Cl.CliId = Co.CliId; -- Alias dos campos com o AS SELECT Cl.CliId AS id_cliente, Cl.Nome AS nome_cliente, Co.Placa AS placa, Co.DataPedido AS data_pedido FROM Cliente Cl, Corrida Co WHERE Cl.CliId = Co.CliId; -- Alias dos campos sem o AS SELECT Cl.CliId id_cliente, Cl.Nome nome_cliente, Co.Placa placa, Co.DataPedido data_pedido FROM Cliente Cl, Corrida Co WHERE Cl.CliId = Co.CliId; -- Modelo de taxi para cada corrida SELECT Co.DataPedido, Co.Placa, T.Modelo FROM Corrida Co, Taxi T WHERE Co.Placa = T.Placa; -- Modelos de taxi tomados por cada cliente -- (estagio 1) SELECT Cl.Nome, Co.DataPedido, Co.Placa, T.Modelo FROM Cliente Cl, Corrida Co, Taxi T WHERE Cl.CliId = Co.CliId AND Co.Placa = T.Placa; -- (estagio 2) - mais preciso para esta quest\u00e3o SELECT DISTINCT Cl.Nome, T.Modelo FROM Cliente Cl, Corrida Co, Taxi T WHERE Cl.CliId = Co.CliId AND Co.Placa = T.Placa; ''' DISTINCT (N\u00e3o retorna tuplas duplicadas(iguais)) ''' -- CNH e Nome dos motoristas que jah estiveram e estao na fila SELECT DISTINCT M.CNH, M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH; -- CNH e Nome dos motoristas que estao na fila SELECT M.CNH, M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH AND DataHoraIn = DataHoraOut; -- Placa dos taxis que jah estiveram e estao na fila SELECT M.Placa FROM Motorista M, Fila F WHERE M.CNH = F.CNH; -- Data/Hora entrada, nome e modelo dos taxis -- que jah estiveram e estao na fila SELECT Fila.DataHoraIn, Motorista.Nome, Taxi.Modelo FROM Fila, Motorista, Taxi WHERE Motorista.CNH = Fila.CNH AND Motorista.Placa = Taxi.Placa; -- Marca e modelo dos taxis que jah estiveram e estao na fila SELECT T.Marca, T.Modelo FROM Taxi T, Motorista M, Fila F WHERE T.Placa = M.Placa AND M.CNH = F.CNH; -- Marca e modelo dos taxis que jah estiveram e estao na fila -- (sem repeticao) SELECT DISTINCT T.Marca, T.Modelo FROM Taxi T, Motorista M, Fila F WHERE T.Placa = M.Placa AND M.CNH = F.CNH; -- Nome dos taxistas que jah estiveram e estao na fila -- em ordem alfabetica SELECT DISTINCT M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH ORDER BY M.Nome; -- Operadores avancados de comparacao -- ---------------------------------- -- Motoristas cujo nome comeca com a letra A SELECT * FROM Motorista WHERE nome LIKE 'A%'; -- Motoristas com 'a' na penultima letra SELECT * FROM Motorista WHERE nome LIKE '%a_'; -- Nome dos motoristas que jah estiveram e estao na fila -- e cujo nome inicia com A SELECT DISTINCT M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH AND M.Nome LIKE 'A%'; -- CNH dos motoristas que jah estiveram ou estao -- nas filas das zonas Taquaral ou Unicamp SELECT DISTINCT cnh, zona FROM Fila WHERE zona IN ('Taquaral', 'Unicamp'); -- CNH dos motoristas que nunca estiveram nem estao -- nas filas das zonas Taquaral ou Unicamp SELECT DISTINCT cnh, zona FROM Fila WHERE zona NOT IN ('Taquaral', 'Unicamp'); -- Entradas na fila entre 05 e 06/06/2002 SELECT * FROM Fila WHERE DataHoraIn BETWEEN '2002-06-05 00:00:00' AND '2002-06-06 23:59:59'; -- Agregacao -- --------- -- Quais as zonas que tem ou tiveram algum taxi na fila (com repeticao) SELECT Fila.zona FROM Fila; -- Quais as zonas que tem ou tiveram algum taxi na fila (sem repeticao) SELECT DISTINCT Fila.Zona FROM Fila; -- Quais as zonas que tem ou tiveram algum taxi na fila (sem repeticao) SELECT Zona FROM Fila GROUP BY Zona; -- Para cada zona atendida, quantos taxis jah passaram pela fila -- (contando com os que estao atualmente) SELECT zona, COUNT(*) FROM Fila GROUP BY zona; -- Quantos entradas de taxi tem/tiveram cada fila das zonas atendidas -- (coluna COUNT com nome) SELECT Zona, COUNT(*) Quantidade FROM Fila GROUP BY Zona; -- Marca e modelo dos taxis que estao/estiveram -- em alguma fila com quantidades SELECT T.Marca, T.Modelo, COUNT(*) FROM Taxi T, Motorista M, Fila F WHERE T.Placa = M.Placa AND M.CNH = F.CNH GROUP BY T.Marca, T.Modelo; -- Zona, quilometragem e data/hora de cada taxi que esta/esteve em uma fila SELECT Zona, KmIn, DataHoraIn FROM Fila; -- Menor quilometragem de entrada em cada zona SELECT Zona, MIN(KmIn) FROM Fila GROUP BY Zona; -- Zona, data e hora de entrada do proximo taxi a ser chamado em cada zona -- (menor data/hora entrada) SELECT Zona, MIN(DataHoraIn) FROM Fila WHERE DataHoraIn = DataHoraOut GROUP BY Zona; -- Maior data/hora de entrada para cada zona SELECT Zona, MAX(DataHoraIn) FROM Fila GROUP BY Zona; -- Zona, menor km, media km, maior data/hora para cada zona SELECT Zona, MIN(KmIn), AVG(KmIn), MAX(DataHoraIn) FROM Fila GROUP BY Zona; -- Maior data/hora dentre os taxis de cada zona com km <= 5000 SELECT Zona, MAX(DataHoraIn) FROM Fila WHERE KmIn <= 5000 GROUP BY Zona; -- Maior data/hora apenas para zonas cuja maxima km <= 5000 SELECT Zona, MAX(DataHoraIn) FROM Fila GROUP BY Zona HAVING MAX(KmIn) <= 5000; -- Zonas que tem/tiveram mais de um taxi na fila SELECT Zona FROM Fila GROUP BY Zona HAVING COUNT(*)>1; -- Visoes -- ------ -- Para cada zona atendida, quantos taxis passaram pela fila CREATE VIEW QuantidadeFila AS SELECT zona, COUNT(*) quantidade FROM Fila GROUP BY zona; SELECT * FROM QuantidadeFila; DROP VIEW QuantidadeFila; UPDATE -- atualize a hora de entrada para o taxi cujo motorista tem CNH 452635 UPDATE Fila SET DataHoraOut = '2002-06-02 10:00:00' WHERE CNH='452635' AND DataHoraIn='2002-06-02 08:00:00'; JOIN -- Taxis e respectivas corridas (para taxis que fizeram corrida) SELECT Tx.placa, Co.cliid FROM Taxi Tx, Corrida Co WHERE Tx.placa = Co.placa; -- Taxis e respectivas corridas (para taxis que fizeram corrida) SELECT Tx.placa, Co.cliid FROM Taxi Tx JOIN Corrida Co ON Tx.placa = Co.placa; -- Taxis e respectivas corridas (para taxis que fizeram corrida) SELECT Tx.placa, Co.cliid FROM Taxi Tx NATURAL JOIN Corrida Co; -- Taxis e respectivas corridas (para todos os taxis) SELECT Tx.placa, Co.cliid FROM Taxi Tx LEFT JOIN Corrida Co ON Tx.placa = Co.placa; -- CNH de quem esta na fila e todas as zonas SELECT F.cnh, Z.zona FROM Fila F RIGHT JOIN Zona Z ON F.zona = Z.zona; SELECT C.cliid, M.placa, M.nome FROM Corrida C FULL JOIN Motorista M ON C.placa = M.placa; SELECT ANINHADO SELECT * FROM Zona; SELECT * FROM Fila; -- Zonas que receberam algum taxi na fila (sem aninhamento) SELECT DISTINCT Z.zona FROM Zona Z, Fila F WHERE Z.zona = F.zona; -- Zonas que receberam algum taxi na fila (com aninhamento / IN) SELECT Z.zona FROM Zona Z WHERE Z.zona IN (SELECT DISTINCT F.zona FROM Fila F); -- Zonas que receberam algum taxi na fila (com aninhamento / EXISTS) SELECT Z.zona FROM Zona Z WHERE EXISTS (SELECT * FROM Fila F WHERE F.zona = Z.zona); -- Zonas que nao receberam algum taxi na fila (com aninhamento / NOT IN) SELECT Z.zona FROM Zona Z WHERE Z.zona NOT IN (SELECT DISTINCT F.zona FROM Fila F); -- Zonas que nao receberam algum taxi na fila (com aninhamento / NOT EXISTS) SELECT Z.zona FROM Zona Z WHERE NOT EXISTS (SELECT * FROM Fila F WHERE F.zona = Z.zona); -- Taxis modelo Fiesta SELECT T.placa, T.modelo FROM Taxi T WHERE T.modelo = 'Fiesta'; -- Nome dos clientes que andaram nos taxis modelo Fiesta (sem aninhamento) SELECT DISTINCT Cl.nome FROM Cliente Cl, Corrida Co, Taxi Tx WHERE Cl.cliid = Co.cliid AND Co.placa = Tx.placa AND Tx.modelo = 'Fiesta'; -- Nome dos clientes que andaram nos taxis modelo Fiesta (com aninhamento) SELECT DISTINCT Cl.nome FROM Cliente Cl, Corrida Co WHERE Cl.cliid = Co.cliid AND Co.placa IN (SELECT Tx.placa FROM Taxi Tx WHERE Tx.modelo = 'Fiesta'); -- Nome dos clientes que andaram no taxi dirigido por Bonerges SELECT DISTINCT Cl.nome FROM Cliente Cl, Corrida Co WHERE Cl.cliid = Co.cliid AND Co.placa = (SELECT Tx.placa FROM Taxi Tx, Motorista Mo WHERE Tx.placa = Mo.placa AND Mo.nome = 'Bonerges'); -- Taxis que entraram na fila antes da primeira entrada de Alcebiades SELECT Mo.placa, Fi.datahorain FROM Motorista Mo, Fila Fi WHERE Mo.cnh = Fi.cnh AND Fi.datahorain < (SELECT MIN(F.datahorain) FROM Motorista M, Fila F WHERE M.cnh = F.cnh AND M.nome = 'Alcebiades'); -- Quem foi o primeiro motorista a entrar em qualquer uma das filas SELECT Mo.nome, Fi.datahorain FROM Motorista Mo, Fila Fi WHERE Mo.cnh = Fi.cnh AND Fi.datahorain <= ALL (SELECT datahorain FROM Fila); -- Quem nao foi o primeiro motorista a entrar em qualquer uma das filas SELECT Mo.nome, Fi.datahorain FROM Motorista Mo, Fila Fi WHERE Mo.cnh = Fi.cnh AND Fi.datahorain > ANY (SELECT DataHoraIn FROM Fila); UNION SELECT cliid, nome FROM Cliente; SELECT cliid, nome FROM ClienteEmpresa; -- Uniao de todos os clientes particulares e empresas SELECT cliid, nome FROM Cliente UNION SELECT cliid, nome FROM ClienteEmpresa; -- UNION - INTERSECT - EXCEPT Exerc\u00edcio completo CREATE TABLE Virus ( virusid VARCHAR(5) NOT NULL, nome VARCHAR(100), PRIMARY KEY (virusid) ); INSERT INTO Virus VALUES ('101', 'Quackrax'); INSERT INTO Virus VALUES ('102', 'X45'); INSERT INTO Virus VALUES ('301', 'Tubitubi'); CREATE TABLE Medicamento ( medicamentoid VARCHAR(5) NOT NULL, nome VARCHAR(100), PRIMARY KEY (medicamentoid) ); INSERT INTO Medicamento VALUES ('AspH', 'Aspargorim H'); INSERT INTO Medicamento VALUES ('Bon2', 'Bonergex Duplex'); INSERT INTO Medicamento VALUES ('AspM', 'Aspargorum M'); INSERT INTO Medicamento VALUES ('Bon3', 'Bonergex Triplex'); INSERT INTO Medicamento VALUES ('PinN', 'Pinicilina Ninja'); CREATE TABLE Trata ( medicamentoid VARCHAR(5) NOT NULL, virusid VARCHAR(5) NOT NULL, PRIMARY KEY (medicamentoid, virusid), FOREIGN KEY(medicamentoid) REFERENCES Medicamento(medicamentoid) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(virusid) REFERENCES Virus(virusid) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO Trata VALUES ('AspH', '101'); INSERT INTO Trata VALUES ('AspM', '101'); INSERT INTO Trata VALUES ('PinN', '101'); INSERT INTO Trata VALUES ('Bon2', '102'); INSERT INTO Trata VALUES ('Bon3', '102'); INSERT INTO Trata VALUES ('PinN', '102'); INSERT INTO Trata VALUES ('AspH', '301'); INSERT INTO Trata VALUES ('Bon2', '301'); INSERT INTO Trata VALUES ('Bon3', '301'); CREATE TABLE Sequencia ( seqid VARCHAR(5) NOT NULL, virustratado VARCHAR(5) NOT NULL, PRIMARY KEY (seqid), FOREIGN KEY(virustratado) REFERENCES Virus(virusid) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO Sequencia VALUES ('001', '101'); INSERT INTO Sequencia VALUES ('002', '101'); INSERT INTO Sequencia VALUES ('003', '101'); INSERT INTO Sequencia VALUES ('004', '301'); INSERT INTO Sequencia VALUES ('005', '301'); INSERT INTO Sequencia VALUES ('006', '102'); CREATE TABLE MedicamentosSequencia ( seqid VARCHAR(5) NOT NULL, ordem INTEGER NOT NULL, medicamentoid VARCHAR(5) NOT NULL, melhora INTEGER NOT NULL, PRIMARY KEY (seqid, ordem), FOREIGN KEY(seqid) REFERENCES Sequencia(seqid) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(medicamentoid) REFERENCES Medicamento(medicamentoid) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO MedicamentosSequencia VALUES ('001', 1, 'AspH', 2); INSERT INTO MedicamentosSequencia VALUES ('001', 2, 'AspM', 1); INSERT INTO MedicamentosSequencia VALUES ('001', 3, 'PinN', 1); INSERT INTO MedicamentosSequencia VALUES ('002', 1, 'AspM', 3); INSERT INTO MedicamentosSequencia VALUES ('002', 2, 'AspH', 3); INSERT INTO MedicamentosSequencia VALUES ('002', 3, 'PinN', 1); INSERT INTO MedicamentosSequencia VALUES ('003', 1, 'PinN', 5); INSERT INTO MedicamentosSequencia VALUES ('003', 2, 'AspH', 3); INSERT INTO MedicamentosSequencia VALUES ('003', 3, 'AspM', 1); INSERT INTO MedicamentosSequencia VALUES ('004', 1, 'AspH', 1); INSERT INTO MedicamentosSequencia VALUES ('004', 2, 'Bon2', 1); INSERT INTO MedicamentosSequencia VALUES ('004', 3, 'Bon3', 2); INSERT INTO MedicamentosSequencia VALUES ('005', 1, 'Bon2', 7); INSERT INTO MedicamentosSequencia VALUES ('005', 2, 'AspH', 2); INSERT INTO MedicamentosSequencia VALUES ('005', 3, 'Bon3', 2); INSERT INTO MedicamentosSequencia VALUES ('006', 1, 'AspH', 1); INSERT INTO MedicamentosSequencia VALUES ('006', 2, 'Bon2', 2); INSERT INTO MedicamentosSequencia VALUES ('006', 3, 'PinN', 2); -- relacao de sequencia de tratamentos (2 b) SELECT V.nome, S.seqid, MS.ordem, M.nome, MS.melhora FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid; -- relacao de sequencia de tratamentos (2 c) SELECT V.nome, S.seqid, MS.ordem, M.nome, MS.melhora FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid ORDER BY S.seqid, MS.ordem; -- total de melhora por sequencia de tratamento (2 d) SELECT S.seqid, SUM(MS.melhora) FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid GROUP BY S.seqid; -- total de melhora por sequencia de tratamento (2 d) SELECT S.virustratado virust, S.seqid seq, SUM(MS.melhora) totalmelhora FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid GROUP BY S.virustratado, S.seqid; -- maior total de melhora por virus (2 e) CREATE VIEW SomasSequencias AS SELECT S.virustratado virust, SUM(MS.melhora) totalmelhora FROM MedicamentosSequencia MS, Sequencia S WHERE MS.seqid = S.seqid GROUP BY S.virustratado, S.seqid; SELECT * FROM SomasSequencias; SELECT virust, MAX(totalmelhora) FROM SomasSequencias GROUP BY virust; DROP VIEW SomasSequencias; -- tratamentos com indice de melhora errado (acima de 10) (2 f) SELECT S.seqid, S.virustratado FROM MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.seqid = S.seqid AND S.virustratado = V.virusid AND MS.melhora > 4 GROUP BY S.seqid, S.virustratado; -- tratamentos com indice de melhora errado (acima de 10) (2 g) SELECT S.seqid, S.virustratado, SUM(MS.melhora) FROM MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.seqid = S.seqid AND S.virustratado = V.virusid GROUP BY S.seqid, S.virustratado HAVING SUM(MS.melhora) > 10; -- maior total de melhora por virus (2 e) usando inner SELECT Sq.virustratado virust, SUM(MSq.melhora) totalmelhora FROM MedicamentosSequencia MSq, Sequencia Sq WHERE MSq.seqid = Sq.seqid GROUP BY Sq.virustratado, Sq.seqid HAVING SUM(MSq.melhora) >= ALL (SELECT SUM(MS.melhora) FROM MedicamentosSequencia MS, Sequencia S WHERE MS.seqid = S.seqid AND S.virustratado = Sq.virustratado GROUP BY S.virustratado, S.seqid);","title":"MySQL"},{"location":"DATABASES/mysql/#mysql","text":"O MySQL \u00e9 um sistema gerenciador de banco de dados relacional de c\u00f3digo aberto. O servi\u00e7o utiliza a linguagem SQL (Structured Query Language \u2013 Linguagem de Consulta Estruturada), que \u00e9 a linguagem mais popular para inserir, acessar e gerenciar o conte\u00fado armazenado num banco de dados. O MySQL \u00e9 um produto regido pela licen\u00e7a GPL (General Public License). Portanto, \u00e9 \"parcialmente\" Open Source. Nesta documenta\u00e7\u00e3o utilizarei o LAMP, um acr\u00f4nimo para Linux, Apache, MySQL e Perl/PHP/Python. Nesse conjunto de aplica\u00e7\u00f5es, inclui-se, respectivamente, um sistema operacional, um servidor web, um sistema gerenciador de banco de dados e uma linguagem de programa\u00e7\u00e3o.","title":"MySQL"},{"location":"DATABASES/mysql/#instalacao","text":"OBS: O sistema operacional utilizado \u00e9 o Linux Ubuntu. Executar em ordem, no terminal: Instalando o Apache sudo apt update sudo apt upgrade -y sudo apt install -y apache2 Para testar se o Apache est\u00e1 funcionando corretamente, devemos digitar localhost na barra de endere\u00e7os do navegador de sua prefer\u00eancia. Instalando o PHP sudo apt install -y php php-cli php-common php-gd php-mbstring php-intl php-xml php-zip php-pear libapache2-mod-php Testando o PHP echo \u201c<?php phpinfo(); ?>\u201d | sudo tee /var/www/html/test.php | sudo service apache2 restart Para testar o PHP no navegador, digite na p\u00e1gina de endere\u00e7os: localhost/test.php Instalando o MySQL sudo apt install -y mysql-server mysql-client php-mysql Acessar o MySQL no Terminal sudo mysql","title":"Instala\u00e7\u00e3o"},{"location":"DATABASES/mysql/#configuracao","text":"Criar novo usu\u00e1rio sudo mysql #Ou somente mysql(depende de seu acesso) CREATE USER 'seu_usuario'@'localhost' IDENTIFIED BY 'sua_senha'; GRANT ALL PRIVILEGES ON *.* TO 'seu_usuario'@'localhost' WITH GRANT OPTION; Entrando com o usu\u00e1rio criado sudo mysql -u seu_usuario -p #exit (para sair)","title":"Configura\u00e7\u00e3o"},{"location":"DATABASES/mysql/#create-databases","text":"CREATE DATABASE meu_banco default character set utf8 default collate utf8_general_ci;","title":"CREATE DATABASES"},{"location":"DATABASES/mysql/#show-databases","text":"SHOW DATABASES; +--------------------+ | Database | +--------------------+ | information_schema | | crudaplication | | formulariopdi | | mysql | | performance_schema | | sys | | testando | +--------------------+","title":"SHOW DATABASES"},{"location":"DATABASES/mysql/#use","text":"USE meu_banco;","title":"USE"},{"location":"DATABASES/mysql/#create-table","text":"Antes de criar uma tabela ou realizar qualquer opera\u00e7\u00e3o, \u00e9 necess\u00e1rio selecionar o banco de dados que vai ser usado: CREATE TABLE `clientes` ( `idCliente` mediumint(8) unsigned NOT NULL auto_increment, `nomeEmpresa` varchar(255), `nomeDiretor` varchar(255) default NULL, `numEmpregados` mediumint default NULL, PRIMARY KEY (`idCliente`) ) AUTO_INCREMENT=1;","title":"CREATE TABLE"},{"location":"DATABASES/mysql/#show-engines","text":"SHOW ENGINES; Geralmente o MySQL vem com a engine InnoDB (um mecanismo mantido pela Oracle). Dentre outras fun\u00e7\u00f5es, o InnoDB permite a cria\u00e7\u00e3o de tabela com suporte para chaves estrangeiras. A XtraDB tamb\u00e9m oferece esse suporte. Enfim, estas duas engines satisfazem a condi\u00e7\u00e3o ACID, ao passo que a MyISAN n\u00e3o. 1. Atomicidade: N\u00e3o pode ser dividida em subtarefas. 1. Consist\u00eancia: Um banco de dados consistente deve permanecer consistente ap\u00f3s a transa\u00e7\u00e3o. 1. Isolamento: Duas transa\u00e7\u00f5es acorrem em paralelo, isoladas. 1. Durabilidade: Durar o tempo que for necess\u00e1rio.","title":"SHOW ENGINES"},{"location":"DATABASES/mysql/#show-table-status","text":"Ver em qual engine foi criado a tabela. SHOW TABLE STATUS; (Normalmente usa-se InnoDB por default) Para mudar a engine basta digitar, no final do create table, engine=NomeDoEngine CREATE TABLE `cursos` ( `idcurso` INT(11) NOT NULL DEFAULT '0', 'nome' varchar(30) NOT NULL, 'descricao' text, 'carga' int(10) unsigned DEFAULT NULL, 'totaulas' int(10) unsigned DEFAULT NULL, 'ano' year(4) DEFAULT '2016', PRIMARY KEY ('idcurso'), UNIQUE KEY 'nome' ('nome') ENGINE=InnoDB DEFAULT CHARSET=utf8;","title":"SHOW TABLE STATUS"},{"location":"DATABASES/mysql/#show-tables","text":"Sempre que quiser usar o SHOW tables deve selecionar o banco de dados primeiro. SHOW tables; +--------------------+ | Tables_in_testando | +--------------------+ | clientes | +--------------------+","title":"SHOW TABLES"},{"location":"DATABASES/mysql/#describe","text":"DESC clientes; DESCRIBE clientes; +---------------+-----------------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------+-----------------------+------+-----+---------+----------------+ | idCliente | mediumint(8) unsigned | NO | PRI | NULL | auto_increment | | nomeEmpresa | varchar(255) | YES | | NULL | | | nomeDiretor | varchar(255) | YES | | NULL | | | numEmpregados | mediumint(9) | YES | | NULL | | +---------------+-----------------------+------+-----+---------+----------------+","title":"DESCRIBE"},{"location":"DATABASES/mysql/#insert-into","text":"INSERT INTO `clientes` (`nomeEmpresa`,`nomeDiretor`,`numEmpregados`) VALUES (\"Malesuada Inc.\",\"Johnny Pedd\",4847); Note que no exemplo n\u00e3o tem o campo idCliente, pois foi criado com o par\u00e2metro auto_increment. Seu preenchimento \u00e9 autom\u00e1tico.","title":"INSERT INTO"},{"location":"DATABASES/mysql/#delete","text":"DELETE FROM clientes WHERE nomeDiretor = 'Jonathan Domingos'; Neste caso, deletei todos os registros ligado ao Jonathan. Minha tabela ficou assim: SELECT * FROM clientes; +-----------+-------------+-----------------+---------------+ | idCliente | nomeEmpresa | nomeDiretor | numEmpregados | +-----------+-------------+-----------------+---------------+ | 1 | In Company | Macaulay Bulkin | 4440 | | 3 | MinasSA | Leda Grasiele | 340 | +-----------+-------------+-----------------+---------------+ Cuidado: A comando DELETE acima deletar\u00e1 todos registros relacionados a Jonathan. Caso queira deletar apenas uma \u00fanica linha, identificar pelo id: DELETE FROM clientes WHERE idCliente = 7;","title":"DELETE"},{"location":"DATABASES/mysql/#drop-table","text":"Eliminar uma tabela: DROP TABLE nome_da_tabela;","title":"DROP TABLE"},{"location":"DATABASES/mysql/#truncate","text":"Para limpar uma tabela, use o comando TRUNCATE. Internamente, ele remove a tabela primeiro e, depois, a recria com a mesma estrutura \u2013 s\u00f3 que sem os dados. Se houver um contador AUTO_INCREMENT, na tabela em quest\u00e3o, ele \u00e9 zerado e recolocado. Veja como funciona: TRUNCATE TABLE nome_da_tabela;","title":"TRUNCATE"},{"location":"DATABASES/mysql/#update","text":"UPDATE clientes SET numEmpregados=1999 WHERE idCliente = 1;","title":"UPDATE"},{"location":"DATABASES/mysql/#mysql-exemplos","text":"","title":"MYSQL EXEMPLOS"},{"location":"DATABASES/mysql/#sql-unicamp","text":"Este cheat Sheet foi elaborado com o intuito de ser meu material de r\u00e1pida consulta sql. Todos os c\u00f3digos descritos aqui podem ser encontrados no material do professor Andr\u00e9 Santanch\u00e8 disponibilizados em seu site. Inclusive, l\u00e1 voc\u00ea encontrar\u00e1 o material completo dispon\u00edvel para download. Algumas Observa\u00e7\u00f5es: FOREIHN KEY = Chave estrangeira que aponta para a chave prim\u00e1ria de outro campo.A\u00e7\u00f5es em rela\u00e7\u00e3o \u00e0 tabela a qual estou referenciando, ou seja, a tabela que possui a primary key. NO ACTION = impede a a\u00e7\u00e3o na tabela mestre (tabela_ref) CASCADE = propaga a a\u00e7\u00e3o da tabela mestre (Apaga tudo ou altera tudo) SET NULL = valores de refer\u00eancias alterados para nulo. SET DEFAULT = valores de refer\u00eancias alterados para default.","title":"SQL - UNICAMP"},{"location":"DATABASES/mysql/#create-table_1","text":"CREATE TABLE Taxi ( Placa VARCHAR(7) NOT NULL, Marca VARCHAR(30) NOT NULL, Modelo VARCHAR(30) NOT NULL, AnoFab INTEGER, Licenca VARCHAR(9), PRIMARY KEY(Placa) ); CREATE TABLE Cliente ( CliId VARCHAR(4) NOT NULL, Nome VARCHAR(80) NOT NULL, CPF VARCHAR(14) NOT NULL, PRIMARY KEY(CliId) ); CREATE TABLE Corrida ( CliId VARCHAR(4) NOT NULL, Placa VARCHAR(7) NOT NULL, DataPedido DATE NOT NULL, PRIMARY KEY(CliId, Placa, DataPedido), FOREIGN KEY(CliId) REFERENCES Cliente(CliId) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(Placa) REFERENCES Taxi(Placa) ON DELETE NO ACTION ON UPDATE NO ACTION ); CREATE TABLE Motorista ( CNH VARCHAR(6) NOT NULL, Nome VARCHAR(80) NOT NULL, CNHValid INTEGER, Placa VARCHAR(7) NOT NULL, PRIMARY KEY(CNH), FOREIGN KEY(Placa) REFERENCES Taxi(Placa) ON DELETE NO ACTION ON UPDATE NO ACTION ); CREATE TABLE Zona ( Zona VARCHAR(40) NOT NULL, PRIMARY KEY(Zona) ); CREATE TABLE Fila ( Zona VARCHAR(40) NOT NULL, CNH VARCHAR(6) NOT NULL, DataHoraIn TIMESTAMP, DataHoraOut TIMESTAMP, KmIn INTEGER, PRIMARY KEY (Zona, CNH), FOREIGN KEY(Zona) REFERENCES Zona(Zona) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(CNH) REFERENCES Motorista(CNH) ON DELETE NO ACTION ON UPDATE NO ACTION );","title":"CREATE TABLE"},{"location":"DATABASES/mysql/#insert-into_1","text":"INSERT INTO Cliente VALUES ('1532', 'Asdr\ufffdbal', '448.754.253-65'); INSERT INTO Taxi VALUES ('DAE6534', 'Ford', 'Fiesta', 1999, 'MN572345'); INSERT INTO Corrida VALUES ('1755', 'DAE6534', '2003-02-15'); INSERT INTO Motorista VALUES ('657483', 'Asdrubal', 1, 'DXF5263'); INSERT INTO Zona VALUES ('Unicamp'); INSERT INTO Fila VALUES ('Bar\ufffdo Geraldo', '567892', '2002-06-05 09:00:00', '2002-06-05 09:30:00', 4630);","title":"INSERT INTO"},{"location":"DATABASES/mysql/#select","text":"SELECT * FROM Taxi; SELECT Marca, Modelo FROM Taxi; SELECT * FROM Taxi WHERE AnoFab > 2000; -- Placas que comecem com DK SELECT * FROM Taxi WHERE placa LIKE 'DK%'; ''' % (encontra qualquer cadeia com 0 a n caracteres). _ (encontra exatamente um caractere (qualquer)). = (caractere de escape) ''' -- Placas com '7' na penultima posicao SELECT * FROM Taxi WHERE placa LIKE '%7_'; -- Produto cartesiano Cliente x Corrida SELECT Cliente.CliId, Cliente.Nome, Corrida.CliId, Corrida.Placa, Corrida.DataPedido FROM Cliente, Corrida; -- Join (1) Cliente x Corrida SELECT Cliente.CliId, Cliente.Nome, Corrida.CliId, Corrida.Placa, Corrida.DataPedido FROM Cliente, Corrida WHERE Cliente.CliId = Corrida.CliId; -- Clientes (id e nome) e respectivas corridas (placa e data do pedido) SELECT Cliente.CliId, Cliente.Nome, Corrida.Placa, Corrida.DataPedido FROM Cliente, Corrida WHERE Cliente.CliId = Corrida.CliId; -- Alias (apelido) com o AS SELECT Cl.CliId, Cl.Nome, Co.Placa, Co.DataPedido FROM Cliente AS Cl, Corrida AS Co WHERE Cl.CliId = Co.CliId; -- Alias sem o AS SELECT Cl.CliId, Cl.Nome, Co.Placa, Co.DataPedido FROM Cliente Cl, Corrida Co WHERE Cl.CliId = Co.CliId; -- Alias dos campos com o AS SELECT Cl.CliId AS id_cliente, Cl.Nome AS nome_cliente, Co.Placa AS placa, Co.DataPedido AS data_pedido FROM Cliente Cl, Corrida Co WHERE Cl.CliId = Co.CliId; -- Alias dos campos sem o AS SELECT Cl.CliId id_cliente, Cl.Nome nome_cliente, Co.Placa placa, Co.DataPedido data_pedido FROM Cliente Cl, Corrida Co WHERE Cl.CliId = Co.CliId; -- Modelo de taxi para cada corrida SELECT Co.DataPedido, Co.Placa, T.Modelo FROM Corrida Co, Taxi T WHERE Co.Placa = T.Placa; -- Modelos de taxi tomados por cada cliente -- (estagio 1) SELECT Cl.Nome, Co.DataPedido, Co.Placa, T.Modelo FROM Cliente Cl, Corrida Co, Taxi T WHERE Cl.CliId = Co.CliId AND Co.Placa = T.Placa; -- (estagio 2) - mais preciso para esta quest\u00e3o SELECT DISTINCT Cl.Nome, T.Modelo FROM Cliente Cl, Corrida Co, Taxi T WHERE Cl.CliId = Co.CliId AND Co.Placa = T.Placa; ''' DISTINCT (N\u00e3o retorna tuplas duplicadas(iguais)) ''' -- CNH e Nome dos motoristas que jah estiveram e estao na fila SELECT DISTINCT M.CNH, M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH; -- CNH e Nome dos motoristas que estao na fila SELECT M.CNH, M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH AND DataHoraIn = DataHoraOut; -- Placa dos taxis que jah estiveram e estao na fila SELECT M.Placa FROM Motorista M, Fila F WHERE M.CNH = F.CNH; -- Data/Hora entrada, nome e modelo dos taxis -- que jah estiveram e estao na fila SELECT Fila.DataHoraIn, Motorista.Nome, Taxi.Modelo FROM Fila, Motorista, Taxi WHERE Motorista.CNH = Fila.CNH AND Motorista.Placa = Taxi.Placa; -- Marca e modelo dos taxis que jah estiveram e estao na fila SELECT T.Marca, T.Modelo FROM Taxi T, Motorista M, Fila F WHERE T.Placa = M.Placa AND M.CNH = F.CNH; -- Marca e modelo dos taxis que jah estiveram e estao na fila -- (sem repeticao) SELECT DISTINCT T.Marca, T.Modelo FROM Taxi T, Motorista M, Fila F WHERE T.Placa = M.Placa AND M.CNH = F.CNH; -- Nome dos taxistas que jah estiveram e estao na fila -- em ordem alfabetica SELECT DISTINCT M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH ORDER BY M.Nome; -- Operadores avancados de comparacao -- ---------------------------------- -- Motoristas cujo nome comeca com a letra A SELECT * FROM Motorista WHERE nome LIKE 'A%'; -- Motoristas com 'a' na penultima letra SELECT * FROM Motorista WHERE nome LIKE '%a_'; -- Nome dos motoristas que jah estiveram e estao na fila -- e cujo nome inicia com A SELECT DISTINCT M.Nome FROM Motorista M, Fila F WHERE M.CNH = F.CNH AND M.Nome LIKE 'A%'; -- CNH dos motoristas que jah estiveram ou estao -- nas filas das zonas Taquaral ou Unicamp SELECT DISTINCT cnh, zona FROM Fila WHERE zona IN ('Taquaral', 'Unicamp'); -- CNH dos motoristas que nunca estiveram nem estao -- nas filas das zonas Taquaral ou Unicamp SELECT DISTINCT cnh, zona FROM Fila WHERE zona NOT IN ('Taquaral', 'Unicamp'); -- Entradas na fila entre 05 e 06/06/2002 SELECT * FROM Fila WHERE DataHoraIn BETWEEN '2002-06-05 00:00:00' AND '2002-06-06 23:59:59'; -- Agregacao -- --------- -- Quais as zonas que tem ou tiveram algum taxi na fila (com repeticao) SELECT Fila.zona FROM Fila; -- Quais as zonas que tem ou tiveram algum taxi na fila (sem repeticao) SELECT DISTINCT Fila.Zona FROM Fila; -- Quais as zonas que tem ou tiveram algum taxi na fila (sem repeticao) SELECT Zona FROM Fila GROUP BY Zona; -- Para cada zona atendida, quantos taxis jah passaram pela fila -- (contando com os que estao atualmente) SELECT zona, COUNT(*) FROM Fila GROUP BY zona; -- Quantos entradas de taxi tem/tiveram cada fila das zonas atendidas -- (coluna COUNT com nome) SELECT Zona, COUNT(*) Quantidade FROM Fila GROUP BY Zona; -- Marca e modelo dos taxis que estao/estiveram -- em alguma fila com quantidades SELECT T.Marca, T.Modelo, COUNT(*) FROM Taxi T, Motorista M, Fila F WHERE T.Placa = M.Placa AND M.CNH = F.CNH GROUP BY T.Marca, T.Modelo; -- Zona, quilometragem e data/hora de cada taxi que esta/esteve em uma fila SELECT Zona, KmIn, DataHoraIn FROM Fila; -- Menor quilometragem de entrada em cada zona SELECT Zona, MIN(KmIn) FROM Fila GROUP BY Zona; -- Zona, data e hora de entrada do proximo taxi a ser chamado em cada zona -- (menor data/hora entrada) SELECT Zona, MIN(DataHoraIn) FROM Fila WHERE DataHoraIn = DataHoraOut GROUP BY Zona; -- Maior data/hora de entrada para cada zona SELECT Zona, MAX(DataHoraIn) FROM Fila GROUP BY Zona; -- Zona, menor km, media km, maior data/hora para cada zona SELECT Zona, MIN(KmIn), AVG(KmIn), MAX(DataHoraIn) FROM Fila GROUP BY Zona; -- Maior data/hora dentre os taxis de cada zona com km <= 5000 SELECT Zona, MAX(DataHoraIn) FROM Fila WHERE KmIn <= 5000 GROUP BY Zona; -- Maior data/hora apenas para zonas cuja maxima km <= 5000 SELECT Zona, MAX(DataHoraIn) FROM Fila GROUP BY Zona HAVING MAX(KmIn) <= 5000; -- Zonas que tem/tiveram mais de um taxi na fila SELECT Zona FROM Fila GROUP BY Zona HAVING COUNT(*)>1; -- Visoes -- ------ -- Para cada zona atendida, quantos taxis passaram pela fila CREATE VIEW QuantidadeFila AS SELECT zona, COUNT(*) quantidade FROM Fila GROUP BY zona; SELECT * FROM QuantidadeFila; DROP VIEW QuantidadeFila;","title":"SELECT"},{"location":"DATABASES/mysql/#update_1","text":"-- atualize a hora de entrada para o taxi cujo motorista tem CNH 452635 UPDATE Fila SET DataHoraOut = '2002-06-02 10:00:00' WHERE CNH='452635' AND DataHoraIn='2002-06-02 08:00:00';","title":"UPDATE"},{"location":"DATABASES/mysql/#join","text":"-- Taxis e respectivas corridas (para taxis que fizeram corrida) SELECT Tx.placa, Co.cliid FROM Taxi Tx, Corrida Co WHERE Tx.placa = Co.placa; -- Taxis e respectivas corridas (para taxis que fizeram corrida) SELECT Tx.placa, Co.cliid FROM Taxi Tx JOIN Corrida Co ON Tx.placa = Co.placa; -- Taxis e respectivas corridas (para taxis que fizeram corrida) SELECT Tx.placa, Co.cliid FROM Taxi Tx NATURAL JOIN Corrida Co; -- Taxis e respectivas corridas (para todos os taxis) SELECT Tx.placa, Co.cliid FROM Taxi Tx LEFT JOIN Corrida Co ON Tx.placa = Co.placa; -- CNH de quem esta na fila e todas as zonas SELECT F.cnh, Z.zona FROM Fila F RIGHT JOIN Zona Z ON F.zona = Z.zona; SELECT C.cliid, M.placa, M.nome FROM Corrida C FULL JOIN Motorista M ON C.placa = M.placa;","title":"JOIN"},{"location":"DATABASES/mysql/#select-aninhado","text":"SELECT * FROM Zona; SELECT * FROM Fila; -- Zonas que receberam algum taxi na fila (sem aninhamento) SELECT DISTINCT Z.zona FROM Zona Z, Fila F WHERE Z.zona = F.zona; -- Zonas que receberam algum taxi na fila (com aninhamento / IN) SELECT Z.zona FROM Zona Z WHERE Z.zona IN (SELECT DISTINCT F.zona FROM Fila F); -- Zonas que receberam algum taxi na fila (com aninhamento / EXISTS) SELECT Z.zona FROM Zona Z WHERE EXISTS (SELECT * FROM Fila F WHERE F.zona = Z.zona); -- Zonas que nao receberam algum taxi na fila (com aninhamento / NOT IN) SELECT Z.zona FROM Zona Z WHERE Z.zona NOT IN (SELECT DISTINCT F.zona FROM Fila F); -- Zonas que nao receberam algum taxi na fila (com aninhamento / NOT EXISTS) SELECT Z.zona FROM Zona Z WHERE NOT EXISTS (SELECT * FROM Fila F WHERE F.zona = Z.zona); -- Taxis modelo Fiesta SELECT T.placa, T.modelo FROM Taxi T WHERE T.modelo = 'Fiesta'; -- Nome dos clientes que andaram nos taxis modelo Fiesta (sem aninhamento) SELECT DISTINCT Cl.nome FROM Cliente Cl, Corrida Co, Taxi Tx WHERE Cl.cliid = Co.cliid AND Co.placa = Tx.placa AND Tx.modelo = 'Fiesta'; -- Nome dos clientes que andaram nos taxis modelo Fiesta (com aninhamento) SELECT DISTINCT Cl.nome FROM Cliente Cl, Corrida Co WHERE Cl.cliid = Co.cliid AND Co.placa IN (SELECT Tx.placa FROM Taxi Tx WHERE Tx.modelo = 'Fiesta'); -- Nome dos clientes que andaram no taxi dirigido por Bonerges SELECT DISTINCT Cl.nome FROM Cliente Cl, Corrida Co WHERE Cl.cliid = Co.cliid AND Co.placa = (SELECT Tx.placa FROM Taxi Tx, Motorista Mo WHERE Tx.placa = Mo.placa AND Mo.nome = 'Bonerges'); -- Taxis que entraram na fila antes da primeira entrada de Alcebiades SELECT Mo.placa, Fi.datahorain FROM Motorista Mo, Fila Fi WHERE Mo.cnh = Fi.cnh AND Fi.datahorain < (SELECT MIN(F.datahorain) FROM Motorista M, Fila F WHERE M.cnh = F.cnh AND M.nome = 'Alcebiades'); -- Quem foi o primeiro motorista a entrar em qualquer uma das filas SELECT Mo.nome, Fi.datahorain FROM Motorista Mo, Fila Fi WHERE Mo.cnh = Fi.cnh AND Fi.datahorain <= ALL (SELECT datahorain FROM Fila); -- Quem nao foi o primeiro motorista a entrar em qualquer uma das filas SELECT Mo.nome, Fi.datahorain FROM Motorista Mo, Fila Fi WHERE Mo.cnh = Fi.cnh AND Fi.datahorain > ANY (SELECT DataHoraIn FROM Fila);","title":"SELECT ANINHADO"},{"location":"DATABASES/mysql/#union","text":"SELECT cliid, nome FROM Cliente; SELECT cliid, nome FROM ClienteEmpresa; -- Uniao de todos os clientes particulares e empresas SELECT cliid, nome FROM Cliente UNION SELECT cliid, nome FROM ClienteEmpresa; -- UNION - INTERSECT - EXCEPT","title":"UNION"},{"location":"DATABASES/mysql/#exercicio-completo","text":"CREATE TABLE Virus ( virusid VARCHAR(5) NOT NULL, nome VARCHAR(100), PRIMARY KEY (virusid) ); INSERT INTO Virus VALUES ('101', 'Quackrax'); INSERT INTO Virus VALUES ('102', 'X45'); INSERT INTO Virus VALUES ('301', 'Tubitubi'); CREATE TABLE Medicamento ( medicamentoid VARCHAR(5) NOT NULL, nome VARCHAR(100), PRIMARY KEY (medicamentoid) ); INSERT INTO Medicamento VALUES ('AspH', 'Aspargorim H'); INSERT INTO Medicamento VALUES ('Bon2', 'Bonergex Duplex'); INSERT INTO Medicamento VALUES ('AspM', 'Aspargorum M'); INSERT INTO Medicamento VALUES ('Bon3', 'Bonergex Triplex'); INSERT INTO Medicamento VALUES ('PinN', 'Pinicilina Ninja'); CREATE TABLE Trata ( medicamentoid VARCHAR(5) NOT NULL, virusid VARCHAR(5) NOT NULL, PRIMARY KEY (medicamentoid, virusid), FOREIGN KEY(medicamentoid) REFERENCES Medicamento(medicamentoid) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(virusid) REFERENCES Virus(virusid) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO Trata VALUES ('AspH', '101'); INSERT INTO Trata VALUES ('AspM', '101'); INSERT INTO Trata VALUES ('PinN', '101'); INSERT INTO Trata VALUES ('Bon2', '102'); INSERT INTO Trata VALUES ('Bon3', '102'); INSERT INTO Trata VALUES ('PinN', '102'); INSERT INTO Trata VALUES ('AspH', '301'); INSERT INTO Trata VALUES ('Bon2', '301'); INSERT INTO Trata VALUES ('Bon3', '301'); CREATE TABLE Sequencia ( seqid VARCHAR(5) NOT NULL, virustratado VARCHAR(5) NOT NULL, PRIMARY KEY (seqid), FOREIGN KEY(virustratado) REFERENCES Virus(virusid) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO Sequencia VALUES ('001', '101'); INSERT INTO Sequencia VALUES ('002', '101'); INSERT INTO Sequencia VALUES ('003', '101'); INSERT INTO Sequencia VALUES ('004', '301'); INSERT INTO Sequencia VALUES ('005', '301'); INSERT INTO Sequencia VALUES ('006', '102'); CREATE TABLE MedicamentosSequencia ( seqid VARCHAR(5) NOT NULL, ordem INTEGER NOT NULL, medicamentoid VARCHAR(5) NOT NULL, melhora INTEGER NOT NULL, PRIMARY KEY (seqid, ordem), FOREIGN KEY(seqid) REFERENCES Sequencia(seqid) ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY(medicamentoid) REFERENCES Medicamento(medicamentoid) ON DELETE NO ACTION ON UPDATE NO ACTION ); INSERT INTO MedicamentosSequencia VALUES ('001', 1, 'AspH', 2); INSERT INTO MedicamentosSequencia VALUES ('001', 2, 'AspM', 1); INSERT INTO MedicamentosSequencia VALUES ('001', 3, 'PinN', 1); INSERT INTO MedicamentosSequencia VALUES ('002', 1, 'AspM', 3); INSERT INTO MedicamentosSequencia VALUES ('002', 2, 'AspH', 3); INSERT INTO MedicamentosSequencia VALUES ('002', 3, 'PinN', 1); INSERT INTO MedicamentosSequencia VALUES ('003', 1, 'PinN', 5); INSERT INTO MedicamentosSequencia VALUES ('003', 2, 'AspH', 3); INSERT INTO MedicamentosSequencia VALUES ('003', 3, 'AspM', 1); INSERT INTO MedicamentosSequencia VALUES ('004', 1, 'AspH', 1); INSERT INTO MedicamentosSequencia VALUES ('004', 2, 'Bon2', 1); INSERT INTO MedicamentosSequencia VALUES ('004', 3, 'Bon3', 2); INSERT INTO MedicamentosSequencia VALUES ('005', 1, 'Bon2', 7); INSERT INTO MedicamentosSequencia VALUES ('005', 2, 'AspH', 2); INSERT INTO MedicamentosSequencia VALUES ('005', 3, 'Bon3', 2); INSERT INTO MedicamentosSequencia VALUES ('006', 1, 'AspH', 1); INSERT INTO MedicamentosSequencia VALUES ('006', 2, 'Bon2', 2); INSERT INTO MedicamentosSequencia VALUES ('006', 3, 'PinN', 2); -- relacao de sequencia de tratamentos (2 b) SELECT V.nome, S.seqid, MS.ordem, M.nome, MS.melhora FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid; -- relacao de sequencia de tratamentos (2 c) SELECT V.nome, S.seqid, MS.ordem, M.nome, MS.melhora FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid ORDER BY S.seqid, MS.ordem; -- total de melhora por sequencia de tratamento (2 d) SELECT S.seqid, SUM(MS.melhora) FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid GROUP BY S.seqid; -- total de melhora por sequencia de tratamento (2 d) SELECT S.virustratado virust, S.seqid seq, SUM(MS.melhora) totalmelhora FROM Medicamento M, MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.medicamentoid = M.medicamentoid AND MS.seqid = S.seqid AND S.virustratado = V.virusid GROUP BY S.virustratado, S.seqid; -- maior total de melhora por virus (2 e) CREATE VIEW SomasSequencias AS SELECT S.virustratado virust, SUM(MS.melhora) totalmelhora FROM MedicamentosSequencia MS, Sequencia S WHERE MS.seqid = S.seqid GROUP BY S.virustratado, S.seqid; SELECT * FROM SomasSequencias; SELECT virust, MAX(totalmelhora) FROM SomasSequencias GROUP BY virust; DROP VIEW SomasSequencias; -- tratamentos com indice de melhora errado (acima de 10) (2 f) SELECT S.seqid, S.virustratado FROM MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.seqid = S.seqid AND S.virustratado = V.virusid AND MS.melhora > 4 GROUP BY S.seqid, S.virustratado; -- tratamentos com indice de melhora errado (acima de 10) (2 g) SELECT S.seqid, S.virustratado, SUM(MS.melhora) FROM MedicamentosSequencia MS, Sequencia S, Virus V WHERE MS.seqid = S.seqid AND S.virustratado = V.virusid GROUP BY S.seqid, S.virustratado HAVING SUM(MS.melhora) > 10; -- maior total de melhora por virus (2 e) usando inner SELECT Sq.virustratado virust, SUM(MSq.melhora) totalmelhora FROM MedicamentosSequencia MSq, Sequencia Sq WHERE MSq.seqid = Sq.seqid GROUP BY Sq.virustratado, Sq.seqid HAVING SUM(MSq.melhora) >= ALL (SELECT SUM(MS.melhora) FROM MedicamentosSequencia MS, Sequencia S WHERE MS.seqid = S.seqid AND S.virustratado = Sq.virustratado GROUP BY S.virustratado, S.seqid);","title":"Exerc\u00edcio completo"},{"location":"DMPS/dmps01/","text":"DMPS - TUTORIAL 01 Elaborado por: Jonathan Cardoso Lopes Domingos 02/01/2020 Neste exemplo iremos importar um CSV via http. O csv pertence ao site do Minist\u00e9rio do Turismo . Este csv cont\u00e9m, dentre outras, as informa\u00e7\u00f5es sobre emendas parlamentares destinadas a alguns munic\u00edpios brasileiros. Importando CSV via http. Obs: para esta s\u00e9rie de atividades, estarei utilizando o DMPS em uma m\u00e1quina virtual na AWS. Tela inicial do login do DMPS Plataforma de Trabalho do DMPS Iniciando um novo Job Adicionar nome e descri\u00e7\u00e3o No lado esquerdo temos os job steps, que s\u00e3o estapas do nosso fluxo de decis\u00e3o. Job Step: http-inbound Para importar um CSV de um link HTTP usaremos o job step http-inbound . Basta segurar e arrastar o job para o centro da mesa de trabalho. Dando um duplo clique sobre o job step, voc\u00ea pode come\u00e7ar a configur\u00e1-lo. Siga o passo das imagens abaixo. Obs: O DMPS obriga voc\u00ea a escolher uma autentica\u00e7\u00e3o, mesmo que o link seja livre. No nosso caso usaremos um link livre. Logo em Username e Password voc\u00ea poder\u00e1 colocar qualquer caractere. Eu optei por colocar admin no Username e admin no Password. Link para o arquivo csv: http://dados.turismo.gov.br/images/csv/emendas/2017-emendas.csv Antes de colocar nosso pr\u00f3ximo job step, observe o nosso dataset: Nossa tabela apresenta algumas inconsist\u00eancias nos dados que, \u00e0 medida que avan\u00e7amos com os tutoriais, iremos corrigindo. Job Step: csv-unpack Este job faz um \"reconhecimento\" de uma linha do nosso dataset. Assim podemos trabalhar com \u00edndices. Job Step: csv-normalization Este job nos mostra quais coluna(dados) iremos utilizar em nosso fluxo. Obs: sempre ver qual \u00e9 o delimitador do seu CSV. Pegando os dados da coluna 0 (N\u00ba Conv\u00eanio) do nosso dataset e atribuindo o nome de numeroConvenio. Neste caso, estamos dizendo para o nosso fluxo utilizar a coluna zero do nosso dataset, por\u00e9m ela receber\u00e1 dentro do DMPS o nome de numeroConvenio. Como vamos trabalhar com mais dados do nosso csv, iremos adicionar quantas itera\u00e7\u00f5es forem necess\u00e1rias. Cada itera\u00e7\u00e3o corresponde a uma coluna que iremos trabalhar. Para este job, iremos utilizar as seguintes colunas com os seguintes nomes: iterations: 0 = numeroConvenio 1 = modalidade 2 = uf 3 = local 4 = valorGlobal Lembre-se de salvar seu progresso com frequ\u00eancia: Observe que no exemplo a seguir, o valorGlobal receber\u00e1 o tipo de string. Isso acontece por que a nota\u00e7\u00e3o da coluna Valor Global est\u00e1 com um ponto como separador do n\u00famero (295.500). Neste caso, teremos que tratar este dado (o que faremos mais adiante) para que ele se torne um n\u00famero inteiro. Se voc\u00ea tentar converter sem tratar, o DMPS ir\u00e1 mant\u00ea-lo como string. Ele n\u00e3o ir\u00e1 transformar o arquivo em Float pois tem dados que possuem dois pontos (1.239.346). Job Step: Script Neste job step iremos tratar o problema com os dados valorGlobal. Iremos retirar o ponto e transformar o tipo de string para integer. Voc\u00ea pode escolher entre Python e JavaScript. Eu recomendo utilizar o Python, reza a lenda que ele \u00e9 infinitas vezes melhor que JS. Selecione a vari\u00e1vel que iremos tratar. Nomeie uma nova vari\u00e1vel de sa\u00edda. Neste caso, a vari\u00e1vel valorGlobal do tipo string ir\u00e1 sair como novoValorGlobal do tipo integer. Criando um c\u00f3digo python para retirar as inconsist\u00eancias dos dados. Lembre-se: SALVAR Job Step: Visualization-Store Agora iremos colocar um job step que permite visualizar os resultados do nosso processo de streaming de dados. Job Step: Visualization-Store (Erro) Iremos adicionar outro visualization-store para as sa\u00eddas de erros. Todo job que possui c\u00f3digos est\u00e1 sujeito a uma s\u00e9rie de erros, logo a visualization de erro nos permite ter um log de erros. Antes de testar nosso job, iremos fazer um filtro das vari\u00e1veis que queremos que siga o nosso fluxo. D\u00ea um duplo clique no fluxo (SHUFFLE) que est\u00e1 entre tratamentoDados e resultados e desmarque as seguintes op\u00e7\u00f5es. Testando o Fluxo: Ap\u00f3s todo o processo de constru\u00e7\u00e3o do fluxo, faremos um teste: clicar em salvar, verificar o c\u00f3digo e por fim clicar em enviar. Ap\u00f3s enviar, voc\u00ea poder\u00e1 verificar que o seu job estar\u00e1 em situa\u00e7\u00e3o de configurado. Agora basta rodar o job e esperar que esteja tudo pronto. Algumas informa\u00e7\u00f5es podem indicar que seu job est\u00e1 funcionando. Observe as imagens a seguir: Visualizando Resultados V\u00e1 na aba visualization e clique em jobs Selecione o nome do seu Job Os resultados das suas vari\u00e1veis ir\u00e3o aparecer. Podemos observar que o novoValorGlobal foi alterado para inteiro. Podemos observar, tamb\u00e9m, que um valor n\u00e3o est\u00e1 correto. A vari\u00e1vel local est\u00e1 recebendo o valor da coluna Valor Global do nosso csv. Corrigindo o ERRO Para corrigir o erro devemos voltar ao job step que pega as colunas do csv. Mas para isso devemos parar o nosso job. Ir em configure job Dar um duplo clique no job extrairColunas e procurar a iteration que est\u00e1 com problema. Neste caso, \u00e9 a iteration 4. Voc\u00ea dever\u00e1 mudar o field position para 3. Por que isso ocorre? Observe a imagem a seguir: A nossa iteration 4 \u00e9 a variav\u00e9l local e no nosso csv a vari\u00e1vel local est\u00e1 com 3. Isso ocorre por que no csv a primeira coluna \u00e9 a coluna 0 e as itera\u00e7\u00f5es come\u00e7am do 1. Ap\u00f3s a altera\u00e7\u00e3o, devemos salvar o que foi feito. Para que as altera\u00e7\u00f5es sejam de fato visualizadas no nosso visualization job, devemos deletar o cash. Ir na aba visualization e clicar em jobs. Ir na op\u00e7\u00e3o stores Em stores clique em atualizar, digite o nome do seu job, clique nos tr\u00eas pontinhos e, por fim, clique em deletar. Ap\u00f3s deletar o cash do seu job, v\u00e1 na aba JOBS, clique em All, digite o nome do seu job e clique sobre ele. Agora basta ir em rodar. Se tudo deu certo, seu job apresentar\u00e1 os comportamentos normais, como j\u00e1 visualizado anteriormente. Agora basta ir em visualization - jobs - discover e selecionar o seu job. Podemos observar que a vari\u00e1vel local est\u00e1 corrigida. Agora ela apresenta o nome do munic\u00edpio.","title":"TUTORIAL 01"},{"location":"DMPS/dmps01/#dmps-tutorial-01","text":"Elaborado por: Jonathan Cardoso Lopes Domingos 02/01/2020 Neste exemplo iremos importar um CSV via http. O csv pertence ao site do Minist\u00e9rio do Turismo . Este csv cont\u00e9m, dentre outras, as informa\u00e7\u00f5es sobre emendas parlamentares destinadas a alguns munic\u00edpios brasileiros.","title":"DMPS - TUTORIAL 01"},{"location":"DMPS/dmps01/#importando-csv-via-http","text":"Obs: para esta s\u00e9rie de atividades, estarei utilizando o DMPS em uma m\u00e1quina virtual na AWS. Tela inicial do login do DMPS Plataforma de Trabalho do DMPS Iniciando um novo Job Adicionar nome e descri\u00e7\u00e3o No lado esquerdo temos os job steps, que s\u00e3o estapas do nosso fluxo de decis\u00e3o.","title":"Importando CSV via http."},{"location":"DMPS/dmps01/#job-step-http-inbound","text":"Para importar um CSV de um link HTTP usaremos o job step http-inbound . Basta segurar e arrastar o job para o centro da mesa de trabalho. Dando um duplo clique sobre o job step, voc\u00ea pode come\u00e7ar a configur\u00e1-lo. Siga o passo das imagens abaixo. Obs: O DMPS obriga voc\u00ea a escolher uma autentica\u00e7\u00e3o, mesmo que o link seja livre. No nosso caso usaremos um link livre. Logo em Username e Password voc\u00ea poder\u00e1 colocar qualquer caractere. Eu optei por colocar admin no Username e admin no Password. Link para o arquivo csv: http://dados.turismo.gov.br/images/csv/emendas/2017-emendas.csv Antes de colocar nosso pr\u00f3ximo job step, observe o nosso dataset: Nossa tabela apresenta algumas inconsist\u00eancias nos dados que, \u00e0 medida que avan\u00e7amos com os tutoriais, iremos corrigindo.","title":"Job Step: http-inbound"},{"location":"DMPS/dmps01/#job-step-csv-unpack","text":"Este job faz um \"reconhecimento\" de uma linha do nosso dataset. Assim podemos trabalhar com \u00edndices.","title":"Job Step: csv-unpack"},{"location":"DMPS/dmps01/#job-step-csv-normalization","text":"Este job nos mostra quais coluna(dados) iremos utilizar em nosso fluxo. Obs: sempre ver qual \u00e9 o delimitador do seu CSV. Pegando os dados da coluna 0 (N\u00ba Conv\u00eanio) do nosso dataset e atribuindo o nome de numeroConvenio. Neste caso, estamos dizendo para o nosso fluxo utilizar a coluna zero do nosso dataset, por\u00e9m ela receber\u00e1 dentro do DMPS o nome de numeroConvenio. Como vamos trabalhar com mais dados do nosso csv, iremos adicionar quantas itera\u00e7\u00f5es forem necess\u00e1rias. Cada itera\u00e7\u00e3o corresponde a uma coluna que iremos trabalhar. Para este job, iremos utilizar as seguintes colunas com os seguintes nomes: iterations: 0 = numeroConvenio 1 = modalidade 2 = uf 3 = local 4 = valorGlobal Lembre-se de salvar seu progresso com frequ\u00eancia: Observe que no exemplo a seguir, o valorGlobal receber\u00e1 o tipo de string. Isso acontece por que a nota\u00e7\u00e3o da coluna Valor Global est\u00e1 com um ponto como separador do n\u00famero (295.500). Neste caso, teremos que tratar este dado (o que faremos mais adiante) para que ele se torne um n\u00famero inteiro. Se voc\u00ea tentar converter sem tratar, o DMPS ir\u00e1 mant\u00ea-lo como string. Ele n\u00e3o ir\u00e1 transformar o arquivo em Float pois tem dados que possuem dois pontos (1.239.346).","title":"Job Step: csv-normalization"},{"location":"DMPS/dmps01/#job-step-script","text":"Neste job step iremos tratar o problema com os dados valorGlobal. Iremos retirar o ponto e transformar o tipo de string para integer. Voc\u00ea pode escolher entre Python e JavaScript. Eu recomendo utilizar o Python, reza a lenda que ele \u00e9 infinitas vezes melhor que JS. Selecione a vari\u00e1vel que iremos tratar. Nomeie uma nova vari\u00e1vel de sa\u00edda. Neste caso, a vari\u00e1vel valorGlobal do tipo string ir\u00e1 sair como novoValorGlobal do tipo integer. Criando um c\u00f3digo python para retirar as inconsist\u00eancias dos dados. Lembre-se: SALVAR","title":"Job Step: Script"},{"location":"DMPS/dmps01/#job-step-visualization-store","text":"Agora iremos colocar um job step que permite visualizar os resultados do nosso processo de streaming de dados.","title":"Job Step: Visualization-Store"},{"location":"DMPS/dmps01/#job-step-visualization-store-erro","text":"Iremos adicionar outro visualization-store para as sa\u00eddas de erros. Todo job que possui c\u00f3digos est\u00e1 sujeito a uma s\u00e9rie de erros, logo a visualization de erro nos permite ter um log de erros. Antes de testar nosso job, iremos fazer um filtro das vari\u00e1veis que queremos que siga o nosso fluxo. D\u00ea um duplo clique no fluxo (SHUFFLE) que est\u00e1 entre tratamentoDados e resultados e desmarque as seguintes op\u00e7\u00f5es.","title":"Job Step: Visualization-Store (Erro)"},{"location":"DMPS/dmps01/#testando-o-fluxo","text":"Ap\u00f3s todo o processo de constru\u00e7\u00e3o do fluxo, faremos um teste: clicar em salvar, verificar o c\u00f3digo e por fim clicar em enviar. Ap\u00f3s enviar, voc\u00ea poder\u00e1 verificar que o seu job estar\u00e1 em situa\u00e7\u00e3o de configurado. Agora basta rodar o job e esperar que esteja tudo pronto. Algumas informa\u00e7\u00f5es podem indicar que seu job est\u00e1 funcionando. Observe as imagens a seguir:","title":"Testando o Fluxo:"},{"location":"DMPS/dmps01/#visualizando-resultados","text":"V\u00e1 na aba visualization e clique em jobs Selecione o nome do seu Job Os resultados das suas vari\u00e1veis ir\u00e3o aparecer. Podemos observar que o novoValorGlobal foi alterado para inteiro. Podemos observar, tamb\u00e9m, que um valor n\u00e3o est\u00e1 correto. A vari\u00e1vel local est\u00e1 recebendo o valor da coluna Valor Global do nosso csv.","title":"Visualizando Resultados"},{"location":"DMPS/dmps01/#corrigindo-o-erro","text":"Para corrigir o erro devemos voltar ao job step que pega as colunas do csv. Mas para isso devemos parar o nosso job. Ir em configure job Dar um duplo clique no job extrairColunas e procurar a iteration que est\u00e1 com problema. Neste caso, \u00e9 a iteration 4. Voc\u00ea dever\u00e1 mudar o field position para 3. Por que isso ocorre? Observe a imagem a seguir: A nossa iteration 4 \u00e9 a variav\u00e9l local e no nosso csv a vari\u00e1vel local est\u00e1 com 3. Isso ocorre por que no csv a primeira coluna \u00e9 a coluna 0 e as itera\u00e7\u00f5es come\u00e7am do 1. Ap\u00f3s a altera\u00e7\u00e3o, devemos salvar o que foi feito. Para que as altera\u00e7\u00f5es sejam de fato visualizadas no nosso visualization job, devemos deletar o cash. Ir na aba visualization e clicar em jobs. Ir na op\u00e7\u00e3o stores Em stores clique em atualizar, digite o nome do seu job, clique nos tr\u00eas pontinhos e, por fim, clique em deletar. Ap\u00f3s deletar o cash do seu job, v\u00e1 na aba JOBS, clique em All, digite o nome do seu job e clique sobre ele. Agora basta ir em rodar. Se tudo deu certo, seu job apresentar\u00e1 os comportamentos normais, como j\u00e1 visualizado anteriormente. Agora basta ir em visualization - jobs - discover e selecionar o seu job. Podemos observar que a vari\u00e1vel local est\u00e1 corrigida. Agora ela apresenta o nome do munic\u00edpio.","title":"Corrigindo o ERRO"},{"location":"RESUMOS/css/","text":"CSS - Cheat Sheet AINDA EM CONSTRU\u00c7\u00c3O Esta documenta\u00e7\u00e3o \u00e9 apenas um guia r\u00e1pido de CSS b\u00e1sico que utilizo no dia-a-dia. 1 - Estrutura de \u00e1rea: 2 - No CSS temos tr\u00eas formas de elaborar uma formata\u00e7\u00e3o: -------------------- Formata\u00e7\u00e3o incorporada: <head> <title> Incorporado </title> <style type=\"text/css\"> h1{ color: rgb(8, 14, 41); padding: 10px 20px; border-radius: 8px; border: 0; background: #ddd; font-size: 35px; font-family: Verdana, Geneva, Tahoma, sans-serif; } </style> </head> <body> <h1> Titulo do Texto</h1> </body> ------------------------ Formata\u00e7\u00e3o inline: <head> <title> Incorporado </title> </head> <body> <h1 style=\"padding: 30px 20px; border-radius: 8px; border: 0; background: #ddd;\"> Titulo do Texto</h1> </body> ----------------------------- CSS externo: <head> <link rel=\"stylesheet\" href=\"arquivo.css\"> <title> Moonlight </title> </head> <body> <h1> Melhores RPGs </h1> <p id=\"Story\"> Vagrant Story \u00e9 um jogo eletr\u00f4nico de RPG desenvolvido pela Squaresoft, lan\u00e7ado para o PlayStation em 2000 e relan\u00e7ado 9 anos depois em formato de download na Playstation Network, disponibilizando-o assim para PlayStation 3 e PlayStation Portable.. </p> <p class=\"classFormat\"> Final Fantasy \u00e9 uma franquia multim\u00eddia de fic\u00e7\u00e3o cient\u00edfica e fantasia criada por Hironobu Sakaguchi e desenvolvida pela Square Enix. A franquia \u00e9 centrada em uma s\u00e9rie de jogos eletr\u00f4nicos do g\u00eanero RPG. </p> </body> arquivo.css /* Formata\u00e7\u00e3o direto em tag. */ body { width: 100%; max-width: 580px; margin: 0 auto; padding: 20px 20px; } h1 { border-radius: 8px; background: #8787af; border: 1px solid #303030; padding: 10px 10px; } /* No caso do id, eu estou atribuindo uma formata\u00e7\u00e3o ao id criado no html. */ #Story{ padding: 30px 20px; border-radius: 8px; background: #ddd; border: 1px solid #303030; } /* No caso da classe, eu crio a classe e utilizo sua funcionalidade em quelquer lugar do html que eu desejar, basta invocar. */ .classFormat { padding: 30px 20px; border-radius: 8px; background: #ddd; } Refer\u00eancias: https://docstore.mik.ua/orelly/webprog/jscript/ch18_02.htm http://ictacademy.com.ng/css-height-width/","title":"CSS"},{"location":"RESUMOS/css/#css-cheat-sheet","text":"AINDA EM CONSTRU\u00c7\u00c3O Esta documenta\u00e7\u00e3o \u00e9 apenas um guia r\u00e1pido de CSS b\u00e1sico que utilizo no dia-a-dia. 1 - Estrutura de \u00e1rea: 2 - No CSS temos tr\u00eas formas de elaborar uma formata\u00e7\u00e3o: -------------------- Formata\u00e7\u00e3o incorporada: <head> <title> Incorporado </title> <style type=\"text/css\"> h1{ color: rgb(8, 14, 41); padding: 10px 20px; border-radius: 8px; border: 0; background: #ddd; font-size: 35px; font-family: Verdana, Geneva, Tahoma, sans-serif; } </style> </head> <body> <h1> Titulo do Texto</h1> </body> ------------------------ Formata\u00e7\u00e3o inline: <head> <title> Incorporado </title> </head> <body> <h1 style=\"padding: 30px 20px; border-radius: 8px; border: 0; background: #ddd;\"> Titulo do Texto</h1> </body> ----------------------------- CSS externo: <head> <link rel=\"stylesheet\" href=\"arquivo.css\"> <title> Moonlight </title> </head> <body> <h1> Melhores RPGs </h1> <p id=\"Story\"> Vagrant Story \u00e9 um jogo eletr\u00f4nico de RPG desenvolvido pela Squaresoft, lan\u00e7ado para o PlayStation em 2000 e relan\u00e7ado 9 anos depois em formato de download na Playstation Network, disponibilizando-o assim para PlayStation 3 e PlayStation Portable.. </p> <p class=\"classFormat\"> Final Fantasy \u00e9 uma franquia multim\u00eddia de fic\u00e7\u00e3o cient\u00edfica e fantasia criada por Hironobu Sakaguchi e desenvolvida pela Square Enix. A franquia \u00e9 centrada em uma s\u00e9rie de jogos eletr\u00f4nicos do g\u00eanero RPG. </p> </body> arquivo.css /* Formata\u00e7\u00e3o direto em tag. */ body { width: 100%; max-width: 580px; margin: 0 auto; padding: 20px 20px; } h1 { border-radius: 8px; background: #8787af; border: 1px solid #303030; padding: 10px 10px; } /* No caso do id, eu estou atribuindo uma formata\u00e7\u00e3o ao id criado no html. */ #Story{ padding: 30px 20px; border-radius: 8px; background: #ddd; border: 1px solid #303030; } /* No caso da classe, eu crio a classe e utilizo sua funcionalidade em quelquer lugar do html que eu desejar, basta invocar. */ .classFormat { padding: 30px 20px; border-radius: 8px; background: #ddd; } Refer\u00eancias: https://docstore.mik.ua/orelly/webprog/jscript/ch18_02.htm http://ictacademy.com.ng/css-height-width/","title":"CSS - Cheat Sheet"},{"location":"RESUMOS/nodeJS/","text":"NodeJS AINDA EM CONSTRU\u00c7\u00c3O Documenta\u00e7\u00e3o pessoal de consulta r\u00e1pida ao NodeJs. Instala\u00e7\u00e3o e Configura\u00e7\u00f5es Estas configura\u00e7\u00f5es foram utilizadas para criar um app no modelo rest, foi utilizado: o NodeJs, o Gerenciador de pacotes Yarn e o sistema operacional Ubuntu. 1. NodeJs a) Installing Node.js via package manager https://github.com/nodesource/distributions/blob/master/README.md b) Install # Using Ubuntu curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - sudo apt-get install -y nodejs > node -v = v10.16.0 2. NVM Node Version Manager: Controlador de vers\u00f5es Node a) https://github.com/nvm-sh/nvm > source ~/.profile > nvm ls-remote > nvm install 10.15.1 > node -v 3. NPM Node Package Manager: Controlador de pacotes Node a) https://www.npmjs.com/ > npm -v = 6.9.0 4. Yarn Controlador de pacotes Node (substituto do NPM) a) Install curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt-get update sudo apt-get install --no-install-recommends yarn (Caso j\u00e1 tenha instalado o node) > yarn -v = 1.16.0 c) Ironicamente podemos instalar o yarn usando o npm > npm install -g yarn d) Usando o yarn > yarn init (Logo abaixo descrevo melhor como iniciar um projeto) DependenciasYarn Segue logo abaixo algumas dependencias do yarn e seus respctivos modos de instala\u00e7\u00e3o. }, \"dependencies\": { \"cors\": \"^2.8.5\", \"express\": \"^4.17.1\", \"mongoose\": \"^5.6.0\", \"multer\": \"^1.4.1\", \"nodemon\": \"^1.19.1\", \"sharp\": \"^0.22.1\", \"socket.io\": \"^2.2.0\" } Express O Express \u00e9 um framework para aplicativo da web do Node.js m\u00ednimo e flex\u00edvel que fornece um conjunto robusto de recursos para aplicativos web e m\u00f3vel. $yarn add express Multer Multer: biblioteca que lida com corpos multPartForm-data (images) e j\u00e1 automatiza o processo de upload de arquivos. cd backend(Pasta que esta meu package.json) $yarn add multer Sharp Sharp: Permite manipular imagens size. $yarn add sharp Nodemon $yarn add nodemon Com o nodemon, posso criar um script dev no meu arquivo package.json. { \"name\": \"backend\", \"version\": \"1.0.0\", \"main\": \"index.js\", \"license\": \"MIT\", \"scripts\": { \"dev\": \"nodemon src/index.js\" }, \"dependencies\": { \"express\": \"^4.17.1\", \"nodemon\": \"^1.19.1\" } } Isso permite o reload do servidor. Agora passo a digitar( $yarn dev )no terminal. Mongoose Esta bibllioteca permite utilizar o mongoDb em nossa aplica\u00e7\u00e3o com base em node. $yarn add mongoose cors Permite que meu backend seja acess\u00edvel pelo frontend react, mesmo estando em dom\u00ednios diferentes. $yarn add cors Socket io Para usar outro protocolo. O protocolo web socket. $yarn add socket.io Iniciando o projeto NODE No terminal executar o Yarn para dar \"um start\" no projeto. Este comando ira criar um package.json $yarn init -y Rodar o projeto No terminal digitar: $node src/index.js Caso tenha instalado o Nodemon, basta digitar: $yarn dev MONGO DB online https://www.mongodb.com/cloud/atlas a) create cluster b) clicar em conect c) conect you aplication d) copiar o link de conec\u00e7\u00e3o. TestarM\u00e9todos insomnia: https://insomnia.rest/","title":"NodeJS"},{"location":"RESUMOS/nodeJS/#nodejs","text":"AINDA EM CONSTRU\u00c7\u00c3O Documenta\u00e7\u00e3o pessoal de consulta r\u00e1pida ao NodeJs.","title":"NodeJS"},{"location":"RESUMOS/nodeJS/#instalacao-e-configuracoes","text":"Estas configura\u00e7\u00f5es foram utilizadas para criar um app no modelo rest, foi utilizado: o NodeJs, o Gerenciador de pacotes Yarn e o sistema operacional Ubuntu.","title":"Instala\u00e7\u00e3o e Configura\u00e7\u00f5es"},{"location":"RESUMOS/nodeJS/#iniciando-o-projeto-node","text":"No terminal executar o Yarn para dar \"um start\" no projeto. Este comando ira criar um package.json $yarn init -y Rodar o projeto No terminal digitar: $node src/index.js Caso tenha instalado o Nodemon, basta digitar: $yarn dev","title":"Iniciando o projeto NODE"},{"location":"RESUMOS/nodeJS/#mongo-db-online","text":"https://www.mongodb.com/cloud/atlas a) create cluster b) clicar em conect c) conect you aplication d) copiar o link de conec\u00e7\u00e3o.","title":"MONGO DB online"},{"location":"RESUMOS/nodeJS/#testarmetodos","text":"insomnia: https://insomnia.rest/","title":"TestarM\u00e9todos"},{"location":"RESUMOS/ruby/","text":"Ruby O Ruby \u00e9 simples na apar\u00eancia, mas muito complexo no interior, tal como o corpo humano - Yukihiro Matsumoto Ruby \u00e9 uma linguagem de programa\u00e7\u00e3o interpretada multiparadigma, de tipagem din\u00e2mica e forte, com gerenciamento de mem\u00f3ria autom\u00e1tico, originalmente planejada e desenvolvida no Jap\u00e3o em 1995, por Yukihiro \"Matz\" Matsumoto, para ser usada como linguagem de script. Matz queria uma linguagem de script que fosse mais poderosa do que Perl, e mais orientada a objetos do que Python. Ruby suporta programa\u00e7\u00e3o funcional, orientada a objetos, imperativa e reflexiva. Instalando o Ruby Em sistemas Unix como Ubuntu, voc\u00ea pode abrir o Terminal e digitar o comando \u200b apt-get install ruby\u200b Ou pode usar um gerenciador de vers\u00e3o para a instala\u00e7\u00e3o como o \u200b RVM\u200b. Para isso recomento utilizar o tutorial da pr\u00f3pria documenta\u00e7\u00e3o do [RUBY] ou utilizar a documenta\u00e7\u00e3o do [RMV] . GEM gem install os gem uninstall os gem list Instalando gem com o Bundle Instalar o Bundle gem install bundler #(bundler \u00e9 tipo um estalador de gens) Criar um aquivo GemFile sem exten\u00e7\u00e3o e colocar a lista de gens que quero. source 'https://rubygems.org' gem 'os' gem 'http', '-> 3.3' Depois rodar bundle no terminal, na pasta que esta a lista criada. $bundle Este comando ira procurar por uma lista de gem e instala-las. Require require 'os' def myOS if OS.windows? \"seu sistema \u00e9 windows\" elsif OS.linux? \"seu sistema \u00e9 linux\" else \"n\u00e3o identificamos seu OS\" end end puts \"O seu PC possui #{OS.cpu_count} cores, \u00e9 #{OS.bits} bits e #{myOS}\" My Ruby Cheat Sheet [Ainda em constru\u00e7\u00e3o] Esta \u00e9 minha documenta\u00e7\u00e3o para consulta de comandos em Ruby. Foi elaborada com base em comandos criados por mim e com base em consulta nos seguintes endere\u00e7os: https://www.devmedia.com.br/introducao-ao-recursos-basicos-da-linguagem-ruby/31504 https://github.com/albertoleal/prazer--ruby/blob/master/trabalhando-com-strings.mkdn https://www.ruby-lang.org/pt/documentation/quickstart/ http://www.akitaonrails.com/2012/06/29/algumas-dicas-da-linguagem-ruby https://medium.com/trainingcenter/ruby-101-o-b%C3%A1sico-260e8605962 #Shell Interativo $ irb STRINGS Exemplo de utiliza\u00e7\u00e3o do comando puts com aspas simples e aspas duplas (strings) In: puts 'Hoje o sol\\n\\n\u00e3o apareceu\\n\u00e9 o fim!' Out: Hoje o sol\\n\\n\u00e3o apareceu\\n\u00e9 o fim! In: puts \"Hoje o sol\\n\\tn\u00e3o apareceu\\n\u00e9 o fim!\" Out: hoje o sol n\u00e3o apareceu \u00e9 o fim! #Gerando Strings In: s1 = \"Isso \u00e9 uma string\" out: \"Isso \u00e9 uma string\" In: s2 = 'Isso, tamb\u00e9m, \u00e9 uma string' out: \"Isso, tamb\u00e9m, \u00e9 uma string\" In: s3 = %q[Mais uma forma de se criar uma string] Out: \"Mais uma forma de se criar uma string\" In: s4 = %Q[Outra forma de se criar uma string] Out: \"Outra forma de se criar uma string\" #Substituindo Strings #sub In: str = \"Ol\u00e1, meu nome \u00e9 Jonathan\" In: str.sub(/Jonathan/, \"Leda\") Out: \"Ol\u00e1, meu nome \u00e9 Leda\" #gsub In: str = \"Ol\u00e1, meu nome \u00e9 Jonathan, caro amigo Jonathan\" In: str.gsub(/Jonathan/, \"Leda\") Out: \"Ol\u00e1, meu nome \u00e9 Leda, caro amigo Leda\" #Pesquisando Strings In: str = \"Hoje o sol n\u00e3o apareceu, \u00e9 o fim!\" In: str[7,3] Out: \"sol\" #Buscando a posi\u00e7\u00e3o da String #o i foi usado para tornar a busca n\u00e3o case-sensitive In: str = \"Hoje o Sol n\u00e3o Apareceu, \u00e9 o fim!\" In: str.index(/apareceu/i) Out: 15 #Scam In: str = \"Hoje a noite n\u00e3o tem luar\" In: str.scan(/\\w/) Out: [\"H\", \"o\", \"j\", \"e\", \"a\", \"n\", \"o\", \"i\", \"t\", \"e\", \"n\", \"o\", \"t\", \"e\", \"m\", \"l\", \"u\", \"a\", \"r\"] In: str.scan(/\\w+/) Out: [\"Hoje\", \"a\", \"noite\", \"n\", \"o\", \"tem\", \"luar\"] #Split In: str.split Out: [\"Hoje\", \"a\", \"noite\", \"n\u00e3o\", \"tem\", \"luar\"] #Espa\u00e7os em Strings In: str = 'Jonathan Cardoso' In: str.ljust(20) Out: \"Jonathan Cardoso \" In :str.rjust(20) Out:\" Jonathan Cardoso\" In: str.center(20) Out: \" Jonathan Cardoso \" #M\u00e9todos em Strings In: 'jonathan'.upcase Out: \"JONATHAN\" In:'JoNaThan'.capitalize Out: \"Jonathan\" In: 'JONATHAN'.downcase Out: \"jonathan\" In: 'JoNaThaN'.swapcase Out: \"jOnAtHAn\" In: 'JONATHAN'.length #'JONATHAN'.size Out: 8 In: 'JJooNnaTTthan'.squeeze => \"JoNnaTthan\" #Remove caracters duplicados In: 'Jonathan'.reverse Out: \"nahtanoJ\" In: 'Jonathan Cardoso'.split(\"\").reverse.join(\"\") Out: \"osodraC nahtanoJ\" In: 'Jonathan'.count('a') Out: 2 In: \"I have white space\".delete(' ') #deletar os espa\u00e7os Out: \"Ihavewhitespace\" Para converter tipos, devemos usar os m\u00e9todos to_i, to_f e to_s. In: \"10\".to_i #Transforma em Integer Out: 10 In: \"10.23\".to_F #Transforma em Float Out: 10.23 In: 12.to_s #Transforma em String Out: \"12\" Operador Tern\u00e1rio def no_limite? saldo == saldo + limite ? false : true end p no_limite? GET puts \"Qual \u00e9 o seu nome?\" nome = gets print \"Seja bem vindo {nome}\" CHOMP PUTS In: gets # Testo digitado: Um texto qualquer Out: \"Um texto qualquer\\n\" In: gets.chomp # Testo digitado: Um texto qualquer Out: \"Um texto qualquer\" Interpola\u00e7\u00e3o Nos exemplos abaixo foi utilizado o construtor #{}, que serve para substitui\u00e7\u00f5es de var\u00e1veis. Essa t\u00e9cnica \u00e9 conhecida como interpolation. Note que em ambos os exemplos foram utilizados as aspas duplas. In: \"Agora \u00e9 #{Time.now}\" Out: \"Agora \u00e9 2019-06-27 19:24:27 -0300\" In: nome = 'jonathan' In: puts \"Meu nome \u00e9: #{nome}\" Out: \"Meu nome \u00e9: jonathan\" Array + M\u00e9todos # array vazio var1 = [] # um array armazenando tr\u00eas strings var1 = ['casa', 'cavalo', 15] var1[0] #retorna casa var1[2] #retorno 15 # Tipos de objetos no Array, inclusive array var2 = [80.5, 'lua', 10 ,[true, false]] var2[3][1] #retorno false #Adicionar objetos var2[4] = 'sol' var2 << 'casa' var2 + ['vento'] #m\u00e9todos da classe array var3 = [15, 24, 189, 1] var3.sort #orden a matrix var3.length #retorno 4 var3.first ou .first 3 #retorno 15 e no caso do .first 3 retorna os 3 primeiros valores. var3.last #retorno 1 var3.pop #retorno 1 por\u00e9m o array perde este valor var3 = [15, 24, 189] var3.push(15) #Adiciona o 15 no final do array var3.take 3 #retorna os 3 primeiros valores ----------------------------------------------------------------- string1 = [\"some\", \"thing\"] string2 = [\"another\", \"thing\"] integer1 = [1, 2, 3, 4] integer2 = [5, 8, 11, 15] mix1 = [1, 2, ['foo', 'bar']] mix2 = [[1, 2], ['foo', 'bar']] m10 = [[\"a\", \"b\"], [\"c\", \"d\"]] m20 = [[1], [2]] print integer1.insert(integer1.length, *integer2) [1, 2, 3, 4, 5, 8, 11, 15] print mix1.flatten! [1, 2, \"foo\", \"bar\"] print mix2.flatten! [1, 2, \"foo\", \"bar\"] print (mix1 << mix2).flatten! [1, 2, \"foo\", \"bar\", 1, 2, \"foo\", \"bar\"] print string1.push(string2.flatten!) [\"some\", \"thing\", nil] --------------------------------------- print string1 + string2 print string1.concat string2 [\"some\", \"thing\", \"another\", \"thing\"] print string1|integer1 [\"some\", \"thing\", 1, 2, 3, 4] print integer1 |= string1 [1, 2, 3, 4, \"some\", \"thing\"] print integer1 += string1 [1, 2, 3, 4, \"some\", \"thing\"] -------------------------------------------- print string1.push(*mix1) [\"some\", \"thing\", 1, 2, [\"foo\", \"bar\"]] print string1.unshift(*mix1) [1, 2, [\"foo\", \"bar\"], \"some\", \"thing\"] Detect - Select - Grep - Reject - Uniq numbers = [1, 2, 3, 4, 5, 6] # detect \u00e9 o mesmo que find #recupera um elemento com base em um crit\u00e9rio detectEle = numbers.detect {|elem| elem % 2 == 0} #retorno o 2 (primeiro divisivel) # select \u00e9 o mesmo que find_all # recupera todos os elementos com base em um crit\u00e9rio selectEle = numbers.select {|elem| elem % 2 == 0} #retorna os divisiveis por 2 divTresCinco = numbers.select {|elem| elem % valor1 == 0 and elem % valor2 == 0} #com operador l\u00f3gico # grep # recupera todos os elementos encontrados para o pattern passado # em outras palavras recupera os elementos em um intervalo (range) grepEle = numbers.grep(4..6) #retorna do 4 ao 6. # Reject # retira os elementos de um array, segundo uma condi\u00e7\u00e3o rejectEle = numbers.reject {|elem| elem % 2 == 0} #retira os divisiveis por 2 # Uniq # removo elementos duplicados de um array num = [1, 2, 3, 3, 4, 5, 2, 6] uniqEle = num.uniq Hash meu_hash = {nome: \"Jonathan\", idade: 31, curso: \"Mat\"} meu_hash[:nome] #\"Jonathan\" meu_hash.first #[:nome, \"Jonathan\"] meu_hash.keys #[:nome, :idade, :curso] meu_hash [:curso] = \"Geo\" #substitui Mat Fun\u00e7\u00e3o #Divis\u00e3o def divisao (primeiro_numero, segundo_numero) if segundo_numero == 0 return 'N\u00e3o \u00e9 poss\u00edvel dividir por zero' else return primeiro_numero / segundo_numero end end divisao(10, 5) #Retornar a soma das vogais def vowels_count(frase) vogais = frase.downcase.count \"a\u00e3eiou\" puts vogais end vowels_count('A casa n\u00e3o tem teto') #Retornar a soma das consoantes def consonants_count(frase) texto = frase.delete(' ') txt = texto.downcase.count \"a\u00e3eiou\" result = texto.length - txt puts result end consonants_count(\"A lua nao\") Blocos e Itera\u00e7\u00f5es #Each #(do end): \u00e9 um bloco de c\u00f3digo. A vari\u00e1vel lang se refere a cada item no array a medida que ele \u00e9 iterado. -------------------------------------------- itens = ['Espada', 'Cajado', 'Machado'] itens.each do |lang| puts 'Eu uso ' + lang + '!' puts 'E voc\u00ea?' end ''' Eu uso Espada! E voc\u00ea? Eu uso Cajado! E voc\u00ea? Eu uso Machado! E voc\u00ea? ''' In: 3.times { puts \"Ol\u00e1!\" } Out: Ol\u00e1! Out: Ol\u00e1! Out: Ol\u00e1! -------------------------------------------- In: numeros = [1, 2, 3] In: numeros.each {|numero| puts numero} Out: 1 2 3 => [1, 2, 3] -------------------------------------------- In: numeros = [1, 2, 3] In: numeros.each do |numero| puts numero end Out: 1 2 3 => [1, 2, 3] -------------------------------------------- In: numeros = [1, 2, 3] In: numeros.each_with_index do |numero, index| puts \"Valor: #{numero}, \u00cdndice: #{index}\" end Out: Valor: 1, \u00cdndice: 0 Valor: 2, \u00cdndice: 1 Valor: 3, \u00cdndice: 2 => [1, 2, 3] -------------------------------------------- def self.multiplica_indices(array) array.collect!.with_index { |x, i| x * i } return array end -------------------------------------------- def tabuada(arg1) total = [] (1..arg1).map do |i| valores = [] (1..10).map do |e| valores << e * i end total << valores end total end Classe class Monstro attr_accessor :energia, :ataque, :vivo def initialize self.energia = Random.rand(10) + 6 self.vivo = true end def bater(alvo) if alvo.esta_vivo? self.ataque = Random.rand(5) puts \"O dano do monstro foi #{self.ataque}\" alvo.energia -= self.ataque else puts \"Voc\u00ea est\u00e1 morto!\" end end def esta_vivo? true if self.energia > 0 end end class Heroi attr_accessor :energia, :ataque, :vivo, :numero_de_mortos def initialize self.energia = 30 self.vivo = true self.numero_de_mortos = 0 end def bater(alvo) if alvo.esta_vivo? self.ataque = Random.rand(5) + 3 puts \"O dano do heroi foi #{self.ataque}\" alvo.energia -= self.ataque else puts \"O monstro est\u00e1 morto!\\n\\n\" end unless alvo.esta_vivo? puts \"O monstro est\u00e1 morto!\\n\\n\" self.numero_de_mortos += 1 end end def esta_vivo? true if self.energia > 0 end end -------------------------------------------- class Conta attr_accessor :titular, :limite, :saldo, :numero def initialize(numero, titular, saldo, limite) @numero = numero @titular = titular @saldo = saldo @limite = limite end def sacar(valor) return false if valor > (@saldo + @limite) @saldo -= valor true end def depositar(valor) @saldo += valor end def no_limite? @saldo < 0 end def ==(conta) conta.titular == titular && conta.limite == limite && conta.saldo == saldo && conta.numero == numero end def transfere(conta_destino, valor_transferencia) return false unless sacar(valor_transferencia) conta_destino.depositar(valor_transferencia) end end","title":"Ruby"},{"location":"RESUMOS/ruby/#ruby","text":"O Ruby \u00e9 simples na apar\u00eancia, mas muito complexo no interior, tal como o corpo humano - Yukihiro Matsumoto Ruby \u00e9 uma linguagem de programa\u00e7\u00e3o interpretada multiparadigma, de tipagem din\u00e2mica e forte, com gerenciamento de mem\u00f3ria autom\u00e1tico, originalmente planejada e desenvolvida no Jap\u00e3o em 1995, por Yukihiro \"Matz\" Matsumoto, para ser usada como linguagem de script. Matz queria uma linguagem de script que fosse mais poderosa do que Perl, e mais orientada a objetos do que Python. Ruby suporta programa\u00e7\u00e3o funcional, orientada a objetos, imperativa e reflexiva. Instalando o Ruby Em sistemas Unix como Ubuntu, voc\u00ea pode abrir o Terminal e digitar o comando \u200b apt-get install ruby\u200b Ou pode usar um gerenciador de vers\u00e3o para a instala\u00e7\u00e3o como o \u200b RVM\u200b. Para isso recomento utilizar o tutorial da pr\u00f3pria documenta\u00e7\u00e3o do [RUBY] ou utilizar a documenta\u00e7\u00e3o do [RMV] .","title":"Ruby"},{"location":"RESUMOS/ruby/#gem","text":"gem install os gem uninstall os gem list Instalando gem com o Bundle Instalar o Bundle gem install bundler #(bundler \u00e9 tipo um estalador de gens) Criar um aquivo GemFile sem exten\u00e7\u00e3o e colocar a lista de gens que quero. source 'https://rubygems.org' gem 'os' gem 'http', '-> 3.3' Depois rodar bundle no terminal, na pasta que esta a lista criada. $bundle Este comando ira procurar por uma lista de gem e instala-las.","title":"GEM"},{"location":"RESUMOS/ruby/#require","text":"require 'os' def myOS if OS.windows? \"seu sistema \u00e9 windows\" elsif OS.linux? \"seu sistema \u00e9 linux\" else \"n\u00e3o identificamos seu OS\" end end puts \"O seu PC possui #{OS.cpu_count} cores, \u00e9 #{OS.bits} bits e #{myOS}\"","title":"Require"},{"location":"RESUMOS/ruby/#my-ruby-cheat-sheet","text":"[Ainda em constru\u00e7\u00e3o] Esta \u00e9 minha documenta\u00e7\u00e3o para consulta de comandos em Ruby. Foi elaborada com base em comandos criados por mim e com base em consulta nos seguintes endere\u00e7os: https://www.devmedia.com.br/introducao-ao-recursos-basicos-da-linguagem-ruby/31504 https://github.com/albertoleal/prazer--ruby/blob/master/trabalhando-com-strings.mkdn https://www.ruby-lang.org/pt/documentation/quickstart/ http://www.akitaonrails.com/2012/06/29/algumas-dicas-da-linguagem-ruby https://medium.com/trainingcenter/ruby-101-o-b%C3%A1sico-260e8605962 #Shell Interativo $ irb","title":"My Ruby Cheat Sheet"},{"location":"RESUMOS/ruby/#strings","text":"Exemplo de utiliza\u00e7\u00e3o do comando puts com aspas simples e aspas duplas (strings) In: puts 'Hoje o sol\\n\\n\u00e3o apareceu\\n\u00e9 o fim!' Out: Hoje o sol\\n\\n\u00e3o apareceu\\n\u00e9 o fim! In: puts \"Hoje o sol\\n\\tn\u00e3o apareceu\\n\u00e9 o fim!\" Out: hoje o sol n\u00e3o apareceu \u00e9 o fim! #Gerando Strings In: s1 = \"Isso \u00e9 uma string\" out: \"Isso \u00e9 uma string\" In: s2 = 'Isso, tamb\u00e9m, \u00e9 uma string' out: \"Isso, tamb\u00e9m, \u00e9 uma string\" In: s3 = %q[Mais uma forma de se criar uma string] Out: \"Mais uma forma de se criar uma string\" In: s4 = %Q[Outra forma de se criar uma string] Out: \"Outra forma de se criar uma string\" #Substituindo Strings #sub In: str = \"Ol\u00e1, meu nome \u00e9 Jonathan\" In: str.sub(/Jonathan/, \"Leda\") Out: \"Ol\u00e1, meu nome \u00e9 Leda\" #gsub In: str = \"Ol\u00e1, meu nome \u00e9 Jonathan, caro amigo Jonathan\" In: str.gsub(/Jonathan/, \"Leda\") Out: \"Ol\u00e1, meu nome \u00e9 Leda, caro amigo Leda\" #Pesquisando Strings In: str = \"Hoje o sol n\u00e3o apareceu, \u00e9 o fim!\" In: str[7,3] Out: \"sol\" #Buscando a posi\u00e7\u00e3o da String #o i foi usado para tornar a busca n\u00e3o case-sensitive In: str = \"Hoje o Sol n\u00e3o Apareceu, \u00e9 o fim!\" In: str.index(/apareceu/i) Out: 15 #Scam In: str = \"Hoje a noite n\u00e3o tem luar\" In: str.scan(/\\w/) Out: [\"H\", \"o\", \"j\", \"e\", \"a\", \"n\", \"o\", \"i\", \"t\", \"e\", \"n\", \"o\", \"t\", \"e\", \"m\", \"l\", \"u\", \"a\", \"r\"] In: str.scan(/\\w+/) Out: [\"Hoje\", \"a\", \"noite\", \"n\", \"o\", \"tem\", \"luar\"] #Split In: str.split Out: [\"Hoje\", \"a\", \"noite\", \"n\u00e3o\", \"tem\", \"luar\"] #Espa\u00e7os em Strings In: str = 'Jonathan Cardoso' In: str.ljust(20) Out: \"Jonathan Cardoso \" In :str.rjust(20) Out:\" Jonathan Cardoso\" In: str.center(20) Out: \" Jonathan Cardoso \" #M\u00e9todos em Strings In: 'jonathan'.upcase Out: \"JONATHAN\" In:'JoNaThan'.capitalize Out: \"Jonathan\" In: 'JONATHAN'.downcase Out: \"jonathan\" In: 'JoNaThaN'.swapcase Out: \"jOnAtHAn\" In: 'JONATHAN'.length #'JONATHAN'.size Out: 8 In: 'JJooNnaTTthan'.squeeze => \"JoNnaTthan\" #Remove caracters duplicados In: 'Jonathan'.reverse Out: \"nahtanoJ\" In: 'Jonathan Cardoso'.split(\"\").reverse.join(\"\") Out: \"osodraC nahtanoJ\" In: 'Jonathan'.count('a') Out: 2 In: \"I have white space\".delete(' ') #deletar os espa\u00e7os Out: \"Ihavewhitespace\" Para converter tipos, devemos usar os m\u00e9todos to_i, to_f e to_s. In: \"10\".to_i #Transforma em Integer Out: 10 In: \"10.23\".to_F #Transforma em Float Out: 10.23 In: 12.to_s #Transforma em String Out: \"12\"","title":"STRINGS"},{"location":"RESUMOS/ruby/#operador-ternario","text":"def no_limite? saldo == saldo + limite ? false : true end p no_limite?","title":"Operador Tern\u00e1rio"},{"location":"RESUMOS/ruby/#get","text":"puts \"Qual \u00e9 o seu nome?\" nome = gets print \"Seja bem vindo {nome}\"","title":"GET"},{"location":"RESUMOS/ruby/#chomp-puts","text":"In: gets # Testo digitado: Um texto qualquer Out: \"Um texto qualquer\\n\" In: gets.chomp # Testo digitado: Um texto qualquer Out: \"Um texto qualquer\"","title":"CHOMP PUTS"},{"location":"RESUMOS/ruby/#interpolacao","text":"Nos exemplos abaixo foi utilizado o construtor #{}, que serve para substitui\u00e7\u00f5es de var\u00e1veis. Essa t\u00e9cnica \u00e9 conhecida como interpolation. Note que em ambos os exemplos foram utilizados as aspas duplas. In: \"Agora \u00e9 #{Time.now}\" Out: \"Agora \u00e9 2019-06-27 19:24:27 -0300\" In: nome = 'jonathan' In: puts \"Meu nome \u00e9: #{nome}\" Out: \"Meu nome \u00e9: jonathan\"","title":"Interpola\u00e7\u00e3o"},{"location":"RESUMOS/ruby/#array-metodos","text":"# array vazio var1 = [] # um array armazenando tr\u00eas strings var1 = ['casa', 'cavalo', 15] var1[0] #retorna casa var1[2] #retorno 15 # Tipos de objetos no Array, inclusive array var2 = [80.5, 'lua', 10 ,[true, false]] var2[3][1] #retorno false #Adicionar objetos var2[4] = 'sol' var2 << 'casa' var2 + ['vento'] #m\u00e9todos da classe array var3 = [15, 24, 189, 1] var3.sort #orden a matrix var3.length #retorno 4 var3.first ou .first 3 #retorno 15 e no caso do .first 3 retorna os 3 primeiros valores. var3.last #retorno 1 var3.pop #retorno 1 por\u00e9m o array perde este valor var3 = [15, 24, 189] var3.push(15) #Adiciona o 15 no final do array var3.take 3 #retorna os 3 primeiros valores ----------------------------------------------------------------- string1 = [\"some\", \"thing\"] string2 = [\"another\", \"thing\"] integer1 = [1, 2, 3, 4] integer2 = [5, 8, 11, 15] mix1 = [1, 2, ['foo', 'bar']] mix2 = [[1, 2], ['foo', 'bar']] m10 = [[\"a\", \"b\"], [\"c\", \"d\"]] m20 = [[1], [2]] print integer1.insert(integer1.length, *integer2) [1, 2, 3, 4, 5, 8, 11, 15] print mix1.flatten! [1, 2, \"foo\", \"bar\"] print mix2.flatten! [1, 2, \"foo\", \"bar\"] print (mix1 << mix2).flatten! [1, 2, \"foo\", \"bar\", 1, 2, \"foo\", \"bar\"] print string1.push(string2.flatten!) [\"some\", \"thing\", nil] --------------------------------------- print string1 + string2 print string1.concat string2 [\"some\", \"thing\", \"another\", \"thing\"] print string1|integer1 [\"some\", \"thing\", 1, 2, 3, 4] print integer1 |= string1 [1, 2, 3, 4, \"some\", \"thing\"] print integer1 += string1 [1, 2, 3, 4, \"some\", \"thing\"] -------------------------------------------- print string1.push(*mix1) [\"some\", \"thing\", 1, 2, [\"foo\", \"bar\"]] print string1.unshift(*mix1) [1, 2, [\"foo\", \"bar\"], \"some\", \"thing\"]","title":"Array + M\u00e9todos"},{"location":"RESUMOS/ruby/#detect-select-grep-reject-uniq","text":"numbers = [1, 2, 3, 4, 5, 6] # detect \u00e9 o mesmo que find #recupera um elemento com base em um crit\u00e9rio detectEle = numbers.detect {|elem| elem % 2 == 0} #retorno o 2 (primeiro divisivel) # select \u00e9 o mesmo que find_all # recupera todos os elementos com base em um crit\u00e9rio selectEle = numbers.select {|elem| elem % 2 == 0} #retorna os divisiveis por 2 divTresCinco = numbers.select {|elem| elem % valor1 == 0 and elem % valor2 == 0} #com operador l\u00f3gico # grep # recupera todos os elementos encontrados para o pattern passado # em outras palavras recupera os elementos em um intervalo (range) grepEle = numbers.grep(4..6) #retorna do 4 ao 6. # Reject # retira os elementos de um array, segundo uma condi\u00e7\u00e3o rejectEle = numbers.reject {|elem| elem % 2 == 0} #retira os divisiveis por 2 # Uniq # removo elementos duplicados de um array num = [1, 2, 3, 3, 4, 5, 2, 6] uniqEle = num.uniq","title":"Detect - Select - Grep - Reject - Uniq"},{"location":"RESUMOS/ruby/#hash","text":"meu_hash = {nome: \"Jonathan\", idade: 31, curso: \"Mat\"} meu_hash[:nome] #\"Jonathan\" meu_hash.first #[:nome, \"Jonathan\"] meu_hash.keys #[:nome, :idade, :curso] meu_hash [:curso] = \"Geo\" #substitui Mat","title":"Hash"},{"location":"RESUMOS/ruby/#funcao","text":"#Divis\u00e3o def divisao (primeiro_numero, segundo_numero) if segundo_numero == 0 return 'N\u00e3o \u00e9 poss\u00edvel dividir por zero' else return primeiro_numero / segundo_numero end end divisao(10, 5) #Retornar a soma das vogais def vowels_count(frase) vogais = frase.downcase.count \"a\u00e3eiou\" puts vogais end vowels_count('A casa n\u00e3o tem teto') #Retornar a soma das consoantes def consonants_count(frase) texto = frase.delete(' ') txt = texto.downcase.count \"a\u00e3eiou\" result = texto.length - txt puts result end consonants_count(\"A lua nao\")","title":"Fun\u00e7\u00e3o"},{"location":"RESUMOS/ruby/#blocos-e-iteracoes","text":"#Each #(do end): \u00e9 um bloco de c\u00f3digo. A vari\u00e1vel lang se refere a cada item no array a medida que ele \u00e9 iterado. -------------------------------------------- itens = ['Espada', 'Cajado', 'Machado'] itens.each do |lang| puts 'Eu uso ' + lang + '!' puts 'E voc\u00ea?' end ''' Eu uso Espada! E voc\u00ea? Eu uso Cajado! E voc\u00ea? Eu uso Machado! E voc\u00ea? ''' In: 3.times { puts \"Ol\u00e1!\" } Out: Ol\u00e1! Out: Ol\u00e1! Out: Ol\u00e1! -------------------------------------------- In: numeros = [1, 2, 3] In: numeros.each {|numero| puts numero} Out: 1 2 3 => [1, 2, 3] -------------------------------------------- In: numeros = [1, 2, 3] In: numeros.each do |numero| puts numero end Out: 1 2 3 => [1, 2, 3] -------------------------------------------- In: numeros = [1, 2, 3] In: numeros.each_with_index do |numero, index| puts \"Valor: #{numero}, \u00cdndice: #{index}\" end Out: Valor: 1, \u00cdndice: 0 Valor: 2, \u00cdndice: 1 Valor: 3, \u00cdndice: 2 => [1, 2, 3] -------------------------------------------- def self.multiplica_indices(array) array.collect!.with_index { |x, i| x * i } return array end -------------------------------------------- def tabuada(arg1) total = [] (1..arg1).map do |i| valores = [] (1..10).map do |e| valores << e * i end total << valores end total end","title":"Blocos e Itera\u00e7\u00f5es"},{"location":"RESUMOS/ruby/#classe","text":"class Monstro attr_accessor :energia, :ataque, :vivo def initialize self.energia = Random.rand(10) + 6 self.vivo = true end def bater(alvo) if alvo.esta_vivo? self.ataque = Random.rand(5) puts \"O dano do monstro foi #{self.ataque}\" alvo.energia -= self.ataque else puts \"Voc\u00ea est\u00e1 morto!\" end end def esta_vivo? true if self.energia > 0 end end class Heroi attr_accessor :energia, :ataque, :vivo, :numero_de_mortos def initialize self.energia = 30 self.vivo = true self.numero_de_mortos = 0 end def bater(alvo) if alvo.esta_vivo? self.ataque = Random.rand(5) + 3 puts \"O dano do heroi foi #{self.ataque}\" alvo.energia -= self.ataque else puts \"O monstro est\u00e1 morto!\\n\\n\" end unless alvo.esta_vivo? puts \"O monstro est\u00e1 morto!\\n\\n\" self.numero_de_mortos += 1 end end def esta_vivo? true if self.energia > 0 end end -------------------------------------------- class Conta attr_accessor :titular, :limite, :saldo, :numero def initialize(numero, titular, saldo, limite) @numero = numero @titular = titular @saldo = saldo @limite = limite end def sacar(valor) return false if valor > (@saldo + @limite) @saldo -= valor true end def depositar(valor) @saldo += valor end def no_limite? @saldo < 0 end def ==(conta) conta.titular == titular && conta.limite == limite && conta.saldo == saldo && conta.numero == numero end def transfere(conta_destino, valor_transferencia) return false unless sacar(valor_transferencia) conta_destino.depositar(valor_transferencia) end end","title":"Classe"}]}